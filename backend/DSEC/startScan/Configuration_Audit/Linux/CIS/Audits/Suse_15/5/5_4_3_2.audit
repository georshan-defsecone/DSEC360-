audit_id: "5.4.3.2"
audit_name: "Ensure default user shell timeout is configured"
audit_script: """
{
  a_output=()
  a_output2=()
  l_tmout_set="900"

  f_tmout_read_chk() {
    a_out=()
    a_out2=()
    l_tmout_readonly="$(grep -P -- '^\h*(typeset\s+-xr\s+TMOUT=\d+|([^#\n\r]+)?\breadonly\b\s+TMOUT\b)' "$l_file")"
    l_tmout_export="$(grep -P -- '^\h*(typeset\s+-xr\s+TMOUT=\d+|([^#\n\r]+)?\bexport\b\s+(.*\s+)?TMOUT\b)' "$l_file")"

    if [ -n "$l_tmout_readonly" ]; then
      a_out+=(" - Readonly is set as: \"$l_tmout_readonly\" in: \"$l_file\"")
    else
      a_out2+=(" - Readonly is not set in: \"$l_file\"")
    fi

    if [ -n "$l_tmout_export" ]; then
      a_out+=(" - Export is set as: \"$l_tmout_export\" in: \"$l_file\"")
    else
      a_out2+=(" - Export is not set in: \"$l_file\"")
    fi
  }

  while IFS= read -r l_file; do
    l_tmout_value="$(grep -Po -- '^([^#\n\r]+)?\bTMOUT=\d+\b' "$l_file" | awk -F= '{print $2}')"
    f_tmout_read_chk

    if [ -n "$l_tmout_value" ]; then
      if [[ "$l_tmout_value" -le "$l_tmout_set" && "$l_tmout_value" -gt 0 ]]; then
        a_output+=(" - TMOUT is set to: \"$l_tmout_value\" in: \"$l_file\"")
        [ "${#a_out[@]}" -gt 0 ] && a_output+=("${a_out[@]}")
        [ "${#a_out2[@]}" -gt 0 ] && a_output2+=("${a_out2[@]}")
      else
        a_output2+=(" - TMOUT is incorrectly set to: \"$l_tmout_value\" in: \"$l_file\"")
        [ "${#a_out[@]}" -gt 0 ] && a_output2+=(" ** Incorrect TMOUT value **" "${a_out[@]}")
        [ "${#a_out2[@]}" -gt 0 ] && a_output2+=("${a_out2[@]}")
      fi
    else
      a_output2+=(" - TMOUT is not set in: \"$l_file\"")
      [ "${#a_out[@]}" -gt 0 ] && a_output2+=("${a_out[@]}")
      [ "${#a_out2[@]}" -gt 0 ] && a_output2+=("${a_out2[@]}")
    fi
  done < <(grep -Pls -- '^([^#\n\r]+)?\bTMOUT\b' /etc/*bashrc /etc/profile /etc/profile.d/*.sh 2>/dev/null)

  [[ "${#a_output[@]}" -eq 0 && "${#a_output2[@]}" -eq 0 ]] && a_output2+=(" - TMOUT is not configured")

  if [ "${#a_output2[@]}" -eq 0 ]; then
    printf '%s\n' "" "** PASS **" "${a_output[@]}"
  else
    printf '%s\n' "" "** FAIL **" "Reason for audit failure:" "${a_output2[@]}" ""
    [ "${#a_output[@]}" -gt 0 ] && printf '%s\n' "Correctly set:" "${a_output[@]}"
  fi
}
""""