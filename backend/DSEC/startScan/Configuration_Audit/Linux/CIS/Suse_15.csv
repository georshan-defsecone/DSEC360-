audit_id,audit_name,audit_description,audit_remediation,check
2.1.1,Ensure autofs services are not in use,"
autofs allows automatic mounting of devices, typically including CD/DVDs and USB
drives.
","
Run the following commands to stop autofs.service and remove autofs package:
# systemctl stop autofs.service
# zypper remove autofs
- OR -
- IF - the autofs package is required as a dependency:
Run the following commands to stop and mask autofs.service:
# systemctl stop autofs.service
# systemctl mask autofs.service
",,TRUE
2.1.2,Ensure avahi daemon services are not in use,"
Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD
service discovery. Avahi allows programs to publish and discover services and hosts
running on a local network with no specific configuration. For example, a user can plug
a computer into a network and Avahi automatically finds printers to print to, files to look
at and people to talk to, as well as network services running on the machine.
","
Run the following commands to stop avahi-daemon.socket and avahi-
daemon.service, and remove the avahi package:
# systemctl stop avahi-daemon.socket avahi-daemon.service
# zypper remove avahi
- OR -
- IF - the avahi package is required as a dependency:
Run the following commands to stop and mask the avahi-daemon.socket and avahi-
daemon.service:
# systemctl stop avahi-daemon.socket avahi-daemon.service
# systemctl mask avahi-daemon.socket avahi-daemon.service
",,TRUE
2.1.3,Ensure dhcp server services are not in use,"
The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to
be dynamically assigned IP addresses. There are two versions of the DHCP protocol
DHCPv4 and DHCPv6. At startup the server may be started for one or the other via the -4
or -6 arguments
","
Run the following commands to stop dhcpd.service and dhcpd6.service and
remove dhcp-server package:
# systemctl stop dhcpd.service dhcpd6.service
# zypper remove dhcp-server
- OR -
- IF - the dhcp-server package is required as a dependency:
Run the following commands to stop and mask dhcpd.service and dhcpd6.service:
# systemctl stop dhcpd.service dhcpd6.service
# systemctl mask dhcpd.service dhcpd6.service
",,TRUE
2.1.4,Ensure dns server services are not in use,"
The Domain Name System (DNS) is a hierarchical naming system that maps names to
IP addresses for computers, services and other resources connected to a network.
","
Run the following commands to stop named.service and remove bind package:
# systemctl stop named.service
# zypper remove bind
- OR -
- IF - the bind package is required as a dependency:
Run the following commands to stop and mask named.service:
# systemctl stop named.service
# systemctl mask named.service
",,TRUE
2.1.5,Ensure dnsmasq services are not in use,"
dnsmasq is a lightweight tool that provides DNS caching, DNS forwarding and DHCP
(Dynamic Host Configuration Protocol) services.
","
Run the following commands to stop dnsmasq.service and remove dnsmasq package:
# systemctl stop dnsmasq.service
# zypper remove dnsmasq
- OR -
- IF - the dnsmasq package is required as a dependency:
Run the following commands to stop and mask the dnsmasq.service:
# systemctl stop dnsmasq.service
# systemctl mask dnsmasq.service
",,TRUE
2.1.6,Ensure samba file server services are not in use,"
The Samba daemon allows system administrators to configure their Linux systems to
share file systems and directories with Windows desktops. Samba will advertise the file
systems and directories via the Server Message Block (SMB) protocol. Windows
desktop users will be able to mount these directories and file systems as letter drives on
their systems.
","
Run the following command to stop smb.service and remove samba package:
# systemctl stop smb.service
# zypper remove samba
- OR -
- IF - the samba package is required as a dependency:
Run the following commands to stop and mask the smb.service:
# systemctl stop smb.service
# systemctl mask smb.service
",,TRUE
2.1.7,Ensure ldap server services are not in use,"
The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for
NIS/YP. It is a service that provides a method for looking up information from a central
database.
","
Run the following command remove the openldap2 and openldap2_5 packages:
# systemctl stop slapd.service
# zypper remove openldap2 openldap2_5
- OR -
- IF - the slapd package is required as a dependency:
Run the following commands to stop and mask slapd.service:
# systemctl stop slapd.service
# systemctl mask slapd.service
",,TRUE
2.1.8,Ensure ftp server services are not in use,"
FTP (File Transfer Protocol) is a traditional and widely used standard tool for
transferring files between a server and clients over a network, especially where no
authentication is necessary (permits anonymous users to connect to a server).
","
Run the following commands to stop vsftpd.service and remove vsftpd package:
# systemctl stop vsftpd.service
# zypper remove vsftpd
- OR -
- IF - the vsftpd package is required as a dependency:
Run the following commands to stop and mask the vsftpd.service:
# systemctl stop vsftpd.service
# systemctl mask vsftpd.service
Note: Other ftp server packages may exist. If not required and authorized by local site
policy, they should also be removed. If the package is required for a dependency, the
service should be stopped and masked.
",,TRUE
2.1.9,Ensure message access server services are not in use,"
dovecot and cyrus-imapd are open source IMAP and POP3 server packages for Linux
based systems.
","
Run the following commands to stop dovecot.socket, dovecot.service, and cyrus-
imapd.service, and remove dovecot and cyrus-imapd packages:
# systemctl stop dovecot.socket dovecot.service cyrus-imapd.service
# zypper remove dovecot cyrus-imapd
- OR -
- IF - a package is installed and is required for dependencies:
Run the following commands to stop and mask dovecot.socket, dovecot.service,
and cyrus-imapd.service:
# systemctl stop dovecot.socket dovecot.service cyrus-imapd.service
# systemctl mask dovecot.socket dovecot.service cyrus-imapd.service
",,TRUE
2.1.10,Ensure network file system services are not in use,"
The Network File System (NFS) is one of the first and most widely distributed file
systems in the UNIX environment. It provides the ability for systems to mount file
systems of other servers through the network.
","
Run the following command to stop nfs-server.service and remove nfs-kernel-
server package:
# systemctl stop nfs-server.service
# zypper remove nfs-kernel-server
- OR -
- IF - the nfs-kernel-server package is required as a dependency:
Run the following commands to stop and mask the nfs-server.service:
# systemctl stop nfs-server.service
# systemctl mask nfs-server.service
",,TRUE
2.1.11,Ensure nis server services are not in use,"
The Network Information Service (NIS), formerly known as Yellow Pages, is a client-
server directory service protocol used to distribute system configuration files. The NIS
client ( ypbind ) was used to bind a machine to an NIS server and receive the
distributed configuration files.
","
Run the following commands to stop ypserv.service and remove ypserv package:
# systemctl stop ypserv.service
# zypper remove ypserv
- OR -
- IF - the ypserv package is required as a dependency:
Run the following commands to stop and mask ypserv.service:
# systemctl stop ypserv.service
# systemctl mask ypserv.service
",,TRUE
2.1.12,Ensure print server services are not in use,"
The Common Unix Print System (CUPS) provides the ability to print to both local and
network printers. A system running CUPS can also accept print jobs from remote
systems and print them to local printers. It also provides a web based remote
administration capability.
","
Run the following commands to stop cups.socket and cups.service, and remove the
cups package:
# systemctl stop cups.socket cups.service
# zypper remove cups
- OR -
- IF - the cups package is required as a dependency:
Run the following commands to stop and mask the cups.socket and cups.service:
# systemctl stop cups.socket cups.service
# systemctl mask cups.socket cups.service
",,TRUE
2.1.13,Ensure rpcbind services are not in use,"
The rpcbind utility maps RPC services to the ports on which they listen. RPC
processes notify rpcbind when they start, registering the ports they are listening on and
the RPC program numbers they expect to serve. The client system then contacts
rpcbind on the server with a particular RPC program number. The rpcbind.service
redirects the client to the proper port number so it can communicate with the requested
service.
Portmapper is an RPC service, which always listens on tcp and udp 111, and is used to
map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their
corresponding port number on the server. When a remote host makes an RPC call to
that server, it first consults with portmap to determine where the RPC server is listening
","
Run the following commands to stop rpcbind.socket and rpcbind.service, and
remove the rpcbind package:
# systemctl stop rpcbind.socket rpcbind.service
# zypper remove rpcbind
- OR -
- IF - the rpcbind package is required as a dependency:
Run the following commands to stop and mask the rpcbind.socket and
rpcbind.service:
# systemctl stop rpcbind.socket rpcbind.service
# systemctl mask rpcbind.socket rpcbind.service
",,TRUE
2.1.14,Ensure rsync services are not in use,"
The rsyncd.service can be used to synchronize files between systems over network
links.
","
Run the following commands to stop rsyncd.socket and rsyncd.service, and
remove the rsync package:
# systemctl stop rsyncd.socket rsyncd.service
# zypper remove rsync
- OR -
- IF - the rsync package is required as a dependency:
Run the following commands to stop and mask the rsyncd.socket and
rsyncd.service:
# systemctl stop rsyncd.socket rsyncd.service
# systemctl mask rsyncd.socket rsyncd.service
",,TRUE
2.1.15,Ensure snmp services are not in use,"
Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring
the health and welfare of network equipment, computer equipment and devices like
UPSs.
Net-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2
(RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and IPv6.
Support for SNMPv2 classic (a.k.a. ""SNMPv2 historic"" - RFCs 1441-1452) was dropped
with the 4.0 release of the UCD-snmp package.
The Simple Network Management Protocol (SNMP) server is used to listen for SNMP
commands from an SNMP management system, execute the commands or collect the
information and then send results back to the requesting system.
","
Run the following commands to stop snmpd.service and remove net-snmp package:
# systemctl stop snmpd.service
# zypper remove net-snmp
- OR - If the package is required for dependencies:
Run the following commands to stop and mask the snmpd.service:
# systemctl stop snmpd.service
# systemctl mask snmpd.service
",,TRUE
2.1.16,Ensure telnet server services are not in use,"
The telnet-server package contains the telnet daemon, which accepts connections
from users from other systems via the telnet protocol.
","
Run the following commands to stop telnet.socket and remove the telnet-server
package:
# systemctl stop telnet.socket
# zypper remove telnet-server
- OR -
- IF - a package is installed and is required for dependencies:
Run the following commands to stop and mask telnet.socket:
# systemctl stop telnet.socket
# systemctl mask telnet.socket
",,TRUE
2.1.17,Ensure tftp server services are not in use,"
Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between
two TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending
and receiving files.
","
Run the following commands to stop tftp.socket and tftp.service, and remove the
tftp-server package:
# systemctl stop tftp.socket tftp.service
# zypper remove tftp-server
- OR -
- IF - the tftp-server package is required as a dependency:
Run the following commands to stop and mask tftp.socket and tftp.service:
# systemctl stop tftp.socket tftp.service
# systemctl mask tftp.socket tftp.service
",,TRUE
2.1.18,Ensure web proxy server services are not in use,"
Squid is a standard proxy server used in many distributions and environments.
","
Run the following commands to stop squid.service and remove the squid package:
# systemctl stop squid.service
# zypper remove squid
- OR - If the squid package is required as a dependency:
Run the following commands to stop and mask the squid.service:
# systemctl stop squid.service
# systemctl mask squid.service
",,TRUE
2.1.19,Ensure web server services are not in use,"
Web servers provide the ability to host web site content.
","
Run the following commands to stop apache2.service, and nginx.service, and
remove apache2 and nginx packages:
# systemctl stop apache2.service nginx.service
# zypper remove apache2 nginx
- OR -
- IF - a package is installed and is required for dependencies:
Run the following commands to stop and mask apache2.service, and
nginx.service:
# systemctl stop apache2.service nginx.service
# systemctl mask apache2.service nginx.service
Note: Other web server packages may exist. If not required and authorized by local site
policy, they should also be removed. If the package is required for a dependency, the
service and socket should be stopped and masked.
",,TRUE
2.1.20,Ensure xinetd services are not in use,"
The eXtended InterNET Daemon (xinetd) is an open source super daemon that
replaced the original inetd daemon. The xinetd daemon listens for well known
services and dispatches the appropriate daemon to properly respond to service
requests.
","
Run the following commands to stop xinetd.service, and remove the xinetd
package:
# systemctl stop xinetd.service
# zypper remove xinetd
- OR -
- IF - the xinetd package is required as a dependency:
Run the following commands to stop and mask the xinetd.service:
# systemctl stop xinetd.service
# systemctl mask xinetd.service
",,TRUE
2.1.21,Ensure X window server services are not in use,"
The X Window System provides a Graphical User Interface (GUI) where users can have
multiple windows in which to run programs and various add on. The X Windows system
is typically used on workstations where users login, but not on servers where users
typically do not login.
","
- IF - a Graphical Desktop Manager or X-Windows server is not required and approved
by local site policy:
Run the following command to remove the X Windows Server packages:
# zypper remove xorg-x11-server*
",,TRUE
2.1.22,Ensure mail transfer agents are configured for local-only mode,"
Mail Transfer Agents (MTA), such as sendmail, Exim and Postfix, are used to listen for
incoming mail and transfer the messages to the appropriate user or mail server. If the
system is not intended to be a mail server, it is recommended that the MTA be
configured to only process local mail
","
Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL
section. If the line already exists, change it to look like the line below:
inet_interfaces = loopback-only
Run the following command to restart postfix:
# systemctl restart postfix
Note:
• This recommendation is designed around the postfix mail server.
• Depending on your environment you may have an alternative MTA installed such
as exim4 or sendmail. If this is the case consult the documentation for your
installed MTA to configure the recommended state.
",,TRUE
2.2.1,Ensure ftp client is not installed,"
FTP (File Transfer Protocol) is a traditional and widely used standard tool for
transferring files between a server and clients over a network, especially where no
authentication is necessary (permits anonymous users to connect to a server).
","
Run the following command to remove ftp:
# zypper remove ftp
",,TRUE
2.2.2,Ensure ldap client is not installed,"
The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for
NIS/YP. It is a service that provides a method for looking up information from a central
database.
","
Run the following command to remove the openldap2-client and openldap2_5
package:
# zypper remove openldap2-client openldap2_5
",,TRUE
2.2.3,Ensure nis client is not installed,"
The Network Information Service (NIS), formerly known as Yellow Pages, is a client-
server directory service protocol used to distribute system configuration files. The NIS
client ( ypbind ) was used to bind a machine to an NIS server and receive the
distributed configuration files.
","
Run the following command to remove the ypbind package:
# zypper remove ypbind
",,TRUE
2.2.4,Ensure telnet client is not installed,"
The telnet package contains the telnet client, which allows users to start
connections to other systems via the telnet protocol.
","
Run the following command to remove the telnet package:
# zypper remove telnet
",,TRUE
2.2.5,Ensure tftp client is not installed,"
Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between
two TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending
and receiving files.
","
Run the following command to remove tftp:
# zypper remove tftp
",,TRUE
2.3.1.1,Ensure a single time synchronization daemon is in use,"
System time should be synchronized between all systems in an environment. This is
typically done by establishing an authoritative time server or set of servers and having
all systems synchronize their clocks to them.
Note:
• On virtual systems where host based time synchronization is available
consult your virtualization software documentation and verify that host
based synchronization is in use and follows local site policy. In this
scenario, this section should be skipped
• Only one time synchronization method should be in use on the system.
Configuring multiple time synchronization methods could lead to unexpected or
unreliable results
","
On physical systems, and virtual systems where host based time synchronization is not
available.
Select one of the two time synchronization daemons; chrony (1) or systemd-
timesyncd (2) and following the remediation procedure for the selected daemon.
Note: enabling more than one synchronization daemon could lead to unexpected or
unreliable results:
1. chrony
Run the following command to install chrony:
# zypper install chrony
Run the following commands to stop and mask the systemd-timesyncd daemon:
# systemctl stop systemd-timesyncd.service
# systemctl mask systemd-timesyncd.service
2. systemd-timesyncd
Run the following command to remove the chrony package:
# zypper remove chrony
",,TRUE
2.3.3.1,Ensure chrony is configured,"
chrony is a daemon which implements the Network Time Protocol (NTP) and is
designed to synchronize system clocks across a variety of systems and use a source
that is highly accurate. More information on chrony can be found at:
http://chrony.tuxfamily.org/. chrony can be configured to be a client and/or a server.
","
Add or edit server or pool lines to /etc/chrony.conf as appropriate:
server <remote-server>
Add or edit the OPTIONS in /etc/sysconfig/chronyd to include '-u chrony':
OPTIONS=""-u chrony""
Run the following command to reload the chrony config:
# systemctl reload-or-restart chronyd
",,TRUE
2.3.3.2,Ensure chrony is enabled and running,"
chrony is a daemon for synchronizing the system clock across the network
","
- IF - chrony is in use on the system, run the following commands:
Run the following command to unmask chronyd.service:
# systemctl unmask chronyd.service
Run the following command to enable and start chronyd.service:
# systemctl --now enable chronyd.service
- OR -
If another time synchronization service is in use on the system, run the following
command to remove chrony:
# zypper remove chrony
",,TRUE
2.3.2.1,Ensure systemd-timesyncd configured with authorized timeserver,"
NTP=
• A space-separated list of NTP server host names or IP addresses. During
runtime this list is combined with any per-interface NTP servers acquired from
systemd-networkd.service(8). systemd-timesyncd will contact all configured
system or per-interface servers in turn, until one responds. When the empty
string is assigned, the list of NTP servers is reset, and all prior assignments will
have no effect. This setting defaults to an empty list.
FallbackNTP=
• A space-separated list of NTP server host names or IP addresses to be used as
the fallback NTP servers. Any per-interface NTP servers obtained from systemd-
networkd.service(8) take precedence over this setting, as do any servers set via
NTP= above. This setting is hence only relevant if no other NTP server
information is known. When the empty string is assigned, the list of NTP servers
is reset, and all prior assignments will have no effect. If this option is not given, a
compiled-in list of NTP servers is used.
","
Set NTP and/or FallbackNPT parameters to local site approved authoritative time
server(s) in /etc/systemd/timesyncd.conf or a file in
/etc/systemd/timesyncd.conf.d/ ending in .conf in the [Time] section:
Example file:
[Time]
NTP=time.nist.gov # Uses the generic name for NIST's time servers
FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space
separated list of NIST time servers
Example script to create systemd drop-in configuration file:
#!/usr/bin/env bash
{
a_settings=(""NTP=time.nist.gov"" ""FallbackNTP=time-a-g.nist.gov time-b-
g.nist.gov time-c-g.nist.gov"")
[ ! -d /etc/systemd/timesyncd.conf.d/ ] && mkdir
/etc/systemd/timesyncd.conf.d/
if grep -Psq -- '^\h*\[Time\]' /etc/systemd/timesyncd.conf.d/60-
timesyncd.conf; then
printf '%s\n' """" ""${a_settings[@]}"" >>
/etc/systemd/timesyncd.conf.d/60-timesyncd.conf
else
printf '%s\n' """" ""[Time]"" ""${a_settings[@]}"" >>
/etc/systemd/timesyncd.conf.d/60-timesyncd.conf
fi
}
Note: If this setting appears in a canonically later file, or later in the same file, the
setting will be overwritten
Run to following command to update the parameters in the service:
# systemctl reload-or-restart systemd-timesyncd
Default Value:
#NTP=
#FallbackNTP=
",,TRUE
2.3.2.2,Ensure systemd-timesyncd is enabled and running,"
systemd-timesyncd is a daemon that has been added for synchronizing the system
clock across the network
","
 -IF - systemd-timesyncd is in use on the system, run the following commands:
Run the following command to unmask systemd-timesyncd.service:
# systemctl unmask systemd-timesyncd.service
Run the following command to enable and start systemd-timesyncd.service:
# systemctl --now enable systemd-timesyncd.service
- OR -
If another time synchronization service is in use on the system, run the following
command to stop and mask systemd-timesyncd:
# systemctl --now mask systemd-timesyncd.service
",,TRUE
2.4.1.1,Ensure cron daemon is enabled and active,"
The cron daemon is used to execute batch jobs on the system.
","
- IF - cron is installed on the system:
Run the following commands to unmask, enable, and start cron:
# systemctl unmask ""$(systemctl list-unit-files | awk
'$1~/^crond?\.service/{print $1}')""
# systemctl --now enable ""$(systemctl list-unit-files | awk
'$1~/^crond?\.service/{print $1}')""
",,TRUE
2.4.1.2,Ensure access to /etc/crontab is configured,"
The /etc/crontab file is used by cron to control its own jobs. The commands in this
item make sure that root is the user and group owner of the file and that only the owner
can access the file.
","
- IF - cron is installed on the system:
Run the following commands to set ownership and permissions on /etc/crontab:
# chown root:root /etc/crontab
# chmod og-rwx /etc/crontab
Default Value:
Access: (644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
",,TRUE
2.4.1.3,Ensure access to /etc/cron.hourly is configured,"
This directory contains system cron jobs that need to run on an hourly basis. The files
in this directory cannot be manipulated by the crontab command, but are instead
edited by system administrators using a text editor. The commands below restrict
read/write and search access to user and group root, preventing regular users from
accessing this directory.
","
- IF - cron is installed on the system:
Run the following commands to set ownership and permissions on the
/etc/cron.hourly directory:
# chown root:root /etc/cron.hourly/
# chmod og-rwx /etc/cron.hourly/
Default Value:
Access: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)
",,TRUE
2.4.1.4,Ensure access to /etc/cron.daily is configured,"
The /etc/cron.daily directory contains system cron jobs that need to run on a daily
basis. The files in this directory cannot be manipulated by the crontab command, but
are instead edited by system administrators using a text editor. The commands below
restrict read/write and search access to user and group root, preventing regular users
from accessing this directory.
","
- IF - cron is installed on the system:
Run the following commands to set ownership and permissions on the
/etc/cron.daily directory:
# chown root:root /etc/cron.daily/
# chmod og-rwx /etc/cron.daily/
Default Value:
Access: (755/drwxr-xr-xEnsure access to /etc/cron.weekly is configured) Uid: ( 0/ root) Gid: ( 0/ root)
",,TRUE
2.4.1.5,Ensure access to /etc/cron.weekly is configured,"
The /etc/cron.weekly directory contains system cron jobs that need to run on a
weekly basis. The files in this directory cannot be manipulated by the crontab
command but are instead edited by system administrators using a text editor. The
commands below restrict read/write and search access to user and group root,
preventing regular users from accessing this directory.
","
- IF - cron is installed on the system:
Run the following commands to set ownership and permissions on the
/etc/cron.weekly directory:
# chown root:root /etc/cron.weekly/
# chmod og-rwx /etc/cron.weekly/
Default Value:
Access: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)
",,TRUE
2.4.1.6,Ensure access to /etc/cron.monthly is configured,"
The /etc/cron.monthly directory contains system cron jobs that need to run on a
monthly basis. The files in this directory cannot be manipulated by the crontab
command but are instead edited by system administrators using a text editor. The
commands below restrict read/write and search access to user and group root,
preventing regular users from accessing this directory.
","
- IF - cron is installed on the system:
Run the following commands to set ownership and permissions on the
/etc/cron.monthly directory:
# chown root:root /etc/cron.monthly/
# chmod og-rwx /etc/cron.monthly/
Default Value:
Access: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)
",,TRUE
2.4.1.7,Ensure access to /etc/cron.d is configured,"
The /etc/cron.d directory contains system cron jobs that need to run in a similar
manner to the hourly, daily weekly and monthly jobs from /etc/crontab, but require
more granular control as to when they run. The files in this directory cannot be
manipulated by the crontab command but are instead edited by system administrators
using a text editor. The commands below restrict read/write and search access to user
and group root, preventing regular users from accessing this directory.
","
- IF - cron is installed on the system:
Run the following commands to set ownership and permissions on the /etc/cron.d
directory:
# chown root:root /etc/cron.d/
# chmod og-rwx /etc/cron.d/
Default Value:
Access: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)
",,TRUE
2.4.1.8,Ensure access to crontab is configured,"
crontab is the program used to install, deinstall, or list the tables used to drive the cron
daemon. Each user can have their own crontab, and though files are created, they are
not intended to be edited directly.
If the /etc/cron.allow file exists, then you must be listed (one user per line) therein in
order to be allowed to use this command. If the /etc/cron.allow file does not exist but
the /etc/cron.deny file does exist, then you must not be listed in the /etc/cron.deny
file in order to use this command.
If neither of these files exists, then depending on site-dependent configuration
parameters, only the super user will be allowed to use this command, or all users will be
able to use this command.
If both files exist then /etc/cron.allow takes precedence. Which means that
/etc/cron.deny is not considered and your user must be listed in /etc/cron.allow
in order to be able to use the crontab.
Regardless of the existence of any of these files, the root administrative user is always
allowed to setup a crontab.
The files /etc/cron.allow and /etc/cron.deny, if they exist, must be either world-
readable, or readable by group crontab. If they are not, then cron will deny access to
all users until the permissions are fixed.
There is one file for each user's crontab. Users are not allowed to edit the file directly to
ensure that only users allowed by the system to run periodic tasks can add them, and
only syntactically correct crontabs will be written. This is enforced by having the
directory writable only by the crontab group and configuring crontab command with the
setgid bid set for that specific group.
Note:
• Even though a given user is not listed in cron.allow, cron jobs can still be run
as that user
• The files /etc/cron.allow and /etc/cron.deny, if they exist, only controls
administrative access to the crontab command for scheduling and modifying cron
jobs
","
- IF - cron is installed on the system:
Run the following script to:
• Create /etc/cron.allow if it doesn't exist
• Change owner to user root
• Change group owner to group root - OR - group crontab if it exists
• Change mode to 640 or more restrictive
#!/usr/bin/env bash
{
[ ! -e ""/etc/cron.deny"" ] && touch /etc/cron.allow
chmod u-x,g-wx,o-rwx /etc/cron.allow
if grep -Pq -- '^\h*crontab\:' /etc/group; then
chown root:crontab /etc/cron.allow
else
chown root:root /etc/cron.allow
fi
}
- IF - /etc/cron.deny exists, run the following script to:
• Change owner to user root
• Change group owner to group root - OR - group crontab if it exists
• Change mode to 640 or more restrictive
#!/usr/bin/env bash
{
if [ -e ""/etc/cron.deny"" ]; then
chmod u-x,g-wx,o-rwx /etc/cron.deny
if grep -Pq -- '^\h*crontab\:' /etc/group; then
chown root:crontab /etc/cron.deny
else
chown root:root /etc/cron.deny
fi
fi
}
Note: On systems where cron is configured to use the group crontab, if the group
crontab is not set as the owner of cron.allow, then cron will deny access to all users
and you will see an error similar to:
You (<USERNAME>) are not allowed to use this program (crontab)
See crontab(1) for more information
",,TRUE
2.4.2.1,Ensure access to at is configured,"
at allows fairly complex time specifications, extending the POSIX.2 standard. It accepts
times of the form HH:MM to run a job at a specific time of day. (If that time is already
past, the next day is assumed.) You may also specify midnight, noon, or teatime (4pm)
and you can have a time-of-day suffixed with AM or PM for running in the morning or
the evening. You can also say what day the job will be run, by giving a date in the form
month-name day with an optional year, or giving a date of the form MMDD[CC]YY,
MM/DD/[CC]YY, DD.MM.[CC]YY or [CC]YY-MM-DD. The specification of a date must
follow the specification of the time of day. You can also give times like now + count
time-units, where the time-units can be minutes, hours, days, or weeks and you can tell
at to run the job today by suffixing the time with today and to run the job tomorrow by
suffixing the time with tomorrow.
The /etc/at.allow and /etc/at.deny files determine which user can submit
commands for later execution via at or batch. The format of the files is a list of
usernames, one on each line. Whitespace is not permitted. If the file /etc/at.allow
exists, only usernames mentioned in it are allowed to use at. If /etc/at.allow does
not exist, /etc/at.deny is checked, every username not mentioned in it is then allowed
to use at. An empty /etc/at.deny means that every user may use at. If neither file
exists, only the superuser is allowed to use at.
","
- IF - at is installed on the system:
Run the following script to:
• /etc/at.allow:
o Create the file if it doesn't exist
o Change owner or user root
o If group daemon exists, change to group daemon, else change group to
root
o Change mode to 640 or more restrictive
• - IF - /etc/at.deny exists:
o Change owner or user root
o If group daemon exists, change to group daemon, else change group to
root
o Change mode to 640 or more restrictive
#!/usr/bin/env bash
{
grep -Pq -- '^daemon\b' /etc/group && l_group=""daemon"" || l_group=""root""
[ ! -e ""/etc/at.allow"" ] && touch /etc/at.allow
chown root:""$l_group"" /etc/at.allow
chmod u-x,g-wx,o-rwx /etc/at.allow
[ -e ""/etc/at.deny"" ] && chown root:""$l_group"" /etc/at.deny
[ -e ""/etc/at.deny"" ] && chmod u-x,g-wx,o-rwx /etc/at.deny
}
",,TRUE
1.1.1.1,Ensure cramfs kernel module is not available,"
The cramfs filesystem type is a compressed read-only Linux filesystem embedded in
small footprint systems. A cramfs image can be used without having to first
decompress the image.
","
Run the following to unload and disable the cramfs kernel module. This can also be
done by running the script included below.
1. Run the following commands to unload the cramfs kernel module:
# modprobe -r cramfs 2>/dev/null
# rmmod cramfs 2>/dev/null
2. Perform the following to disable the cramfs kernel module:
a) Create a file ending in .conf with install cramfs /bin/false in the
/etc/modprobe.d/ directory
Example:
# printf '\n%s\n' ""install cramfs /bin/false"" >> cramfs.conf
b) Create a file ending in .conf with blacklist cramfs in the /etc/modprobe.d/
directory
Example:
# printf '\n%s\n' ""blacklist cramfs"" >> cramfs.conf
",,TRUE
1.1.1.2,Ensure freevxfs kernel module is not available,"
The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the
primary filesystem type for HP-UX operating systems
","
Run the following to unload and disable the freevxfs kernel module. This can also be
done by running the script included below.
Run the following commands to unload the freevxfs kernel module:
# modprobe -r freevxfs 2>/dev/null
# rmmod freevxfs 2>/dev/null
Perform the following to disable the freevxfs kernel module:
Create a file ending in .conf with install freevxfs /bin/false in the
/etc/modprobe.d/ directory
Example:
# printf '\n%s\n' ""install freevxfs /bin/false"" >> freevxfs.conf
Create a file ending in .conf with blacklist freevxfs in the /etc/modprobe.d/
directory
Example:
# printf '\n%s\n' ""blacklist freevxfs"" >> freevxfs.conf
",,TRUE
1.1.1.3,Ensure hfs kernel module is not available,"
The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS
filesystems.
","
Run the following to unload and disable the hfs kernel module. This can also be done
by running the script included below.
Run the following commands to unload the hfs kernel module:
# modprobe -r hfs 2>/dev/null
# rmmod hfs 2>/dev/null
Perform the following to disable the hfs kernel module:
Create a file ending in .conf with install hfs /bin/false in the /etc/modprobe.d/
directory
Example:
# printf '\n%s\n' ""install hfs /bin/false"" >> hfs.conf
Create a file ending in .conf with blacklist hfs in the /etc/modprobe.d/ directory
Example:
# printf '\n%s\n' ""blacklist hfs"" >> hfs.conf
",,TRUE
1.1.1.4,Ensure hfsplus kernel module is not available,"
The hfsplus filesystem type is a hierarchical filesystem designed to replace hfs that
allows you to mount Mac OS filesystems.
","
Run the following to unload and disable the hfsplus kernel module. This can also be
done by running the script included below.
Run the following commands to unload the hfsplus kernel module:
# modprobe -r hfsplus 2>/dev/null
# rmmod hfsplus 2>/dev/null
Perform the following to disable the hfsplus kernel module:
Create a file ending in .conf with install hfsplus /bin/false in the
/etc/modprobe.d/ directory
Example:
# printf '\n%s\n' ""install hfsplus /bin/false"" >> hfsplus.conf
Create a file ending in .conf with blacklist hfsplus in the /etc/modprobe.d/
directory
Example:
# printf '\n%s\n' ""blacklist hfsplus"" >> hfsplus.conf
",,TRUE
1.1.1.5,Ensure jffs2 kernel module is not available,"
The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem
used in flash memory devices.
","
Run the following to unload and disable the jffs2 kernel module. This can also be
done by running the script included below.
Run the following commands to unload the jffs2 kernel module:
# modprobe -r jffs2 2>/dev/null
# rmmod jffs2 2>/dev/null
Perform the following to disable the jffs2 kernel module:
Create a file ending in .conf with install jffs2 /bin/false in the
/etc/modprobe.d/ directory
Example:
# printf '\n%s\n' ""install jffs2 /bin/false"" >> jffs2.conf
Create a file ending in .conf with blacklist jffs2 in the /etc/modprobe.d/
directory
Example:
# printf '\n%s\n' ""blacklist jffs2"" >> jffs2.conf
",,TRUE
1.1.1.6,Ensure overlay kernel module is not available,"
overlay is a Linux filesystem that layers multiple filesystems to create a single unified
view which allows a user to ""merge"" several mount points into a unified filesystem.
","
Run the following to unload and disable the overlay kernel module. This can also be
done by running the script included below.
Run the following commands to unload the overlay kernel module:
# modprobe -r overlay 2>/dev/null
# rmmod overlay 2>/dev/null
Perform the following to disable the overlay kernel module:
Create a file ending in .conf with install overlay /bin/false in the
/etc/modprobe.d/ directory
Example:
# printf '\n%s\n' ""install overlay /bin/false"" >> overlay.conf
Create a file ending in .conf with blacklist overlay in the /etc/modprobe.d/
directory
Example:
# printf '\n%s\n' ""blacklist overlay"" >> overlay.conf
",,TRUE
1.1.1.7,Ensure squashfs kernel module is not available,"
The squashfs filesystem type is a compressed read-only Linux filesystem embedded in
small footprint systems. A squashfs image can be used without having to first
decompress the image.
","
Run the following to unload and disable the squashfs kernel module. This can also be
done by running the script included below.
Run the following commands to unload the squashfs kernel module:
# modprobe -r squashfs 2>/dev/null
# rmmod squashfs 2>/dev/null
Perform the following to disable the squashfs kernel module:
Create a file ending in .conf with install squashfs /bin/false in the
/etc/modprobe.d/ directory
Example:
# printf '\n%s\n' ""install squashfs /bin/false"" >> squashfs.conf
Create a file ending in .conf with blacklist squashfs in the /etc/modprobe.d/
directory
Example:
# printf '\n%s\n' ""blacklist squashfs"" >> squashfs.conf
",,TRUE
1.1.1.8,Ensure udf kernel module is not available,"
The udf filesystem type is the universal disk format used to implement ISO/IEC 13346
and ECMA-167 specifications. This is an open vendor filesystem type for data storage
on a broad range of media. This filesystem type is necessary to support writing DVDs
and newer optical disc formats.
","
Run the following to unload and disable the udf kernel module. This can also be done
by running the script included below.
Run the following commands to unload the udf kernel module:
# modprobe -r udf 2>/dev/null
# rmmod udf 2>/dev/null
Perform the following to disable the udf kernel module:
Create a file ending in .conf with install udf /bin/false in the /etc/modprobe.d/
directory
Example:
# printf '\n%s\n' ""install udf /bin/false"" >> udf.conf
Create a file ending in .conf with blacklist udf in the /etc/modprobe.d/ directory
Example:
# printf '\n%s\n' ""blacklist udf"" >> udf.conf
",,TRUE
1.1.2.1.1,Ensure /tmp is a separate partition,"
The /tmp directory is a world-writable directory used for temporary storage by all users
and some applications.
Note: If an entry for /tmp exists in /etc/fstab it will take precedence over entries in a
systemd unit file. There is an exception to this when a system is diskless and connected
to iSCSI, entries in /etc/fstab may not take precedence over a systemd unit file.
","
First ensure that systemd is correctly configured to ensure that /tmp will be mounted at
boot time.
# systemctl unmask tmp.mount
For specific configuration requirements of the /tmp mount for your environment, modify
/etc/fstab.
Example of using tmpfs with specific mount options:
tmpfs /tmp tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0
0
Note: the size=2G is an example of setting a specific size for tmpfs.
Example of using a volume or disk with specific mount options. The source location of
the volume or disk will vary depending on your environment:
<device> /tmp <fstype> defaults,nodev,nosuid,noexec 0 0
",,TRUE
1.1.2.1.2,Ensure nodev option set on /tmp partition,"
The nodev mount option specifies that the filesystem cannot contain special devices.
","
- IF - a separate partition exists for /tmp.
Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the
/tmp partition.
Example:
<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /tmp with the configured options:
# mount -o remount /tmp
",,TRUE
1.1.2.1.3,Ensure nosuid option set on /tmp partition,"
The nosuid mount option specifies that the filesystem cannot contain setuid files.
","
- IF - a separate partition exists for /tmp.
Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
/tmp partition.
Example:
<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /tmp with the configured options:
# mount -o remount /tmp
",,TRUE
1.1.2.1.4,Ensure noexec option set on /tmp partition,"
The noexec mount option specifies that the filesystem cannot contain executable
binaries.
","
- IF - a separate partition exists for /tmp.
Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the
/tmp partition.
Example:
<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /tmp with the configured options:
# mount -o remount /tmp
",,TRUE
1.1.2.2.1,Ensure /dev/shm is a separate partition,"
The /dev/shm directory is a world-writable directory that can function as shared
memory that facilitates inter process communication (IPC).
","
For specific configuration requirements of the /dev/shm mount for your environment,
modify /etc/fstab.
Example:
tmpfs /dev/shm tmpfs
defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0
",,TRUE
1.1.2.2.2,Ensure nodev option set on /dev/shm partition,"
The nodev mount option specifies that the filesystem cannot contain special devices.
","
- IF - a separate partition exists for /dev/shm.
Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the
/dev/shm partition. See the fstab(5) manual page for more information.
Example:
tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /dev/shm with the configured options:
# mount -o remount /dev/shm
Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is
used as shared memory space by applications.
",,TRUE
1.1.2.2.3,Ensure nosuid option set on /dev/shm partition,"
The nosuid mount option specifies that the filesystem cannot contain setuid files
","
- IF - a separate partition exists for /dev/shm.
Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
/dev/shm partition. See the fstab(5) manual page for more information.
Example:
tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /dev/shm with the configured options:
# mount -o remount /dev/shm
Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is
used as shared memory space by applications.
",,TRUE
1.1.2.2.4,Ensure noexec option set on /dev/shm partition,"
The noexec mount option specifies that the filesystem cannot contain executable
binaries.
","
- IF - a separate partition exists for /dev/shm.
Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the
/dev/shm partition.
Example:
tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /dev/shm with the configured options:
# mount -o remount /dev/shm
Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is
used as shared memory space by applications.
",,TRUE
1.1.2.3.1,Ensure separate partition exists for /home,"
The /home directory is used to support disk storage needs of local users.
","
For new installations, during installation create a custom partition setup and specify a
separate partition for /home.
For systems that were previously installed, create a new partition and configure
/etc/fstab as appropriate.
",,TRUE
1.1.2.3.2,Ensure nodev option set on /home partition,"
The nodev mount option specifies that the filesystem cannot contain special devices.
","
- IF - a separate partition exists for /home.
Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the
/home partition.
Example:
<device> /home <fstype> defaults,rw,nosuid,nodev,relatime 0 0
Run the following command to remount /home with the configured options:
# mount -o remount /home
",,TRUE
1.1.2.3.3,Ensure nosuid option set on /home partition,"
The nosuid mount option specifies that the filesystem cannot contain setuid files.
","
- IF - a separate partition exists for /home.
Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
/home partition.
Example:
<device> /home <fstype> defaults,rw,nosuid,nodev,relatime 0 0
Run the following command to remount /home with the configured options:
# mount -o remount /home
",,TRUE
1.1.2.4.1,Ensure separate partition exists for /var,"
The /var directory is used by daemons and other system services to temporarily store
dynamic data. Some directories created by these processes may be world-writable.
","
For new installations, during installation create a custom partition setup and specify a
separate partition for /var.
For systems that were previously installed, create a new partition and configure
/etc/fstab as appropriate.
",,TRUE
1.1.2.4.2,Ensure nodev option set on /var partition,"
The nodev mount option specifies that the filesystem cannot contain special devices.
","
- IF - a separate partition exists for /var.
Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the
/var partition.
Example:
<device> /var <fstype> defaults,rw,nosuid,nodev,relatime 0 0
Run the following command to remount /var with the configured options:
# mount -o remount /var
",,TRUE
1.1.2.4.3,Ensure nosuid option set on /var partition,"
The nosuid mount option specifies that the filesystem cannot contain setuid files.
","
- IF - a separate partition exists for /var.
Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
/var partition.
Example:
<device> /var <fstype> defaults,rw,nosuid,nodev,relatime 0 0
Run the following command to remount /var with the configured options:
# mount -o remount /var
",,TRUE
1.1.2.5.1,Ensure separate partition exists for /var/tmp,"
The /var/tmp directory is a world-writable directory used for temporary storage by all
users and some applications. Temporary files residing in /var/tmp are to be preserved
between reboots.
","
For new installations, during installation create a custom partition setup and specify a
separate partition for /var/tmp.
For systems that were previously installed, create a new partition and configure
/etc/fstab as appropriate.
",,TRUE
1.1.2.5.2,Ensure nodev option set on /var/tmp partition,"
The nodev mount option specifies that the filesystem cannot contain special devices.
","
- IF - a separate partition exists for /var/tmp.
Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the
/var/tmp partition.
Example:
<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0
0
Run the following command to remount /var/tmp with the configured options:
# mount -o remount /var/tmp
",,TRUE
1.1.2.5.3,Ensure nosuid option set on /var/tmp partition,"
The nosuid mount option specifies that the filesystem cannot contain setuid files.
","
- IF - a separate partition exists for /var/tmp.
Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
/var/tmp partition.
Example:
<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0
0
Run the following command to remount /var/tmp with the configured options:
# mount -o remount /var/tmp
",,TRUE
1.1.2.5.4,Ensure noexec option set on /var/tmp partition,"
The noexec mount option specifies that the filesystem cannot contain executable
binaries.
","
- IF - a separate partition exists for /var/tmp.
Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the
/var/tmp partition.
Example:
<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0
0
Run the following command to remount /var/tmp with the configured options:
# mount -o remount /var/tmp
",,TRUE
1.1.2.6.1,Ensure separate partition exists for /var/log,"
The /var/log directory is used by system services to store log data.
","
For new installations, during installation create a custom partition setup and specify a
separate partition for /var/log .
For systems that were previously installed, create a new partition and configure
/etc/fstab as appropriate.
",,TRUE
1.1.2.6.2,Ensure nodev option set on /var/log partition,"
The nodev mount option specifies that the filesystem cannot contain special devices.
","
- IF - a separate partition exists for /var/log.
Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the
/var/log partition.
Example:
<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0
0
Run the following command to remount /var/log with the configured options:
# mount -o remount /var/log
",,TRUE
1.1.2.6.3,Ensure nosuid option set on /var/log partition,"
The nosuid mount option specifies that the filesystem cannot contain setuid files.
","
- IF - a separate partition exists for /var/log.
Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
/var/log partition.
Example:
<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0
0
Run the following command to remount /var/log with the configured options:
# mount -o remount /var/log
",,TRUE
1.1.2.6.4,Ensure noexec option set on /var/log partition,"
The noexec mount option specifies that the filesystem cannot contain executable
binaries.
","
- IF - a separate partition exists for /var/log.
Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the
/var/log partition.
Example:
<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0
0
Run the following command to remount /var/log with the configured options:
# mount -o remount /var/log
",,TRUE
1.1.2.7.1,Ensure separate partition exists for /var/log/audit,"
The auditing daemon, auditd, stores log data in the /var/log/audit directory.
","
For new installations, during installation create a custom partition setup and specify a
separate partition for /var/log/audit.
For systems that were previously installed, create a new partition and configure
/etc/fstab as appropriate.
",,TRUE
1.1.2.7.2,Ensure nodev option set on /var/log/audit partition,"
The nodev mount option specifies that the filesystem cannot contain special devices.
","
- IF - a separate partition exists for /var/log/audit.
Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the
/var/log/audit partition.
Example:
<device> /var/log/audit <fstype>
defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /var/log/audit with the configured options:
# mount -o remount /var/log/audit
",,TRUE
1.1.2.7.3,Ensure nosuid option set on /var/log/audit partition,"
The nosuid mount option specifies that the filesystem cannot contain setuid files.
","
- IF - a separate partition exists for /var/log/audit.
Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
/var/log/audit partition.
Example:
<device> /var/log/audit <fstype>
defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /var/log/audit with the configured options:
# mount -o remount /var/log/audit
",,TRUE
1.1.2.7.4,Ensure noexec option set on /var/log/audit partition,"
The noexec mount option specifies that the filesystem cannot contain executable
binaries.
","
- IF - a separate partition exists for /var/log/audit.
Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the
/var/log/audit partition.
Example:
<device> /var/log/audit <fstype>
defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /var/log/audit with the configured options:
# mount -o remount /var/log/audit
",,TRUE
1.2.1.2,Ensure gpgcheck is globally activated,"
The gpgcheck option, found in the main section of the /etc/zypp/zypp.conf and
individual /etc/zypp/repos.d/*.repo files determines if an RPM package's signature
is checked prior to its installation.
","
Edit /etc/zypp/zypp.conf and set gpgcheck=on:
Example
# sed -i 's/^gpgcheck\s*=\s*.*/gpgcheck=on/' /etc/zypp/zypp.conf
Edit any failing files in /etc/zypp/repos.d/* and set all instances starting with
gpgcheck to on.
Example:
# find /etc/zypp/repos.d/ -name ""*.repo"" -exec echo ""Checking:"" {} \; -exec
sed -i 's/^gpgcheck\s*=\s*.*/gpgcheck=on/' {} \;
Note: true,yes, or 1 is also acceptable.
",,TRUE
1.3.1.1,Ensure AppArmor is installed,"
AppArmor - kernel enhancement to confine programs to a limited set of resources.
","
Run the following command to install apparmor-utils:
# zypper install apparmor-parser apparmor-profiles apparmor-utils
libapparmor1
",,TRUE
1.3.1.2,Ensure AppArmor is enabled in the bootloader configuration,"
Configure AppArmor to be enabled at boot time and verify that it has not been
overwritten by the bootloader boot parameters.
Note: This recommendation is designed around the grub bootloader, if LILO or another
bootloader is in use in your environment enact equivalent settings.
","
Edit /etc/default/grub and add the apparmor=1 and security=apparmor
parameters to the GRUB_CMDLINE_LINUX= line
GRUB_CMDLINE_LINUX=""apparmor=1 security=apparmor""
Run the following command to update the grub2 configuration:
# grub2-mkconfig -o /boot/grub2/grub.cfg
",,TRUE
1.3.1.3,Ensure all AppArmor Profiles are not disabled,"
AppArmor profiles define what resources applications are able to access.
","
Run the following command to set all profiles to enforce mode:
# aa-enforce /etc/apparmor.d/*
- OR -
Run the following command to set all profiles to complain mode:
# aa-complain /etc/apparmor.d/*
Note: Any unconfined processes may need to have a profile created or activated for
them and then be restarted
",,TRUE
1.3.1.4,Ensure all AppArmor Profiles are enforcing,"
AppArmor profiles define what resources applications are able to access.
","
Run the following command to set all profiles to enforce mode:
# aa-enforce /etc/apparmor.d/*
Note: Any unconfined processes may need to have a profile created or activated for
them and then be restarted
",,TRUE
1.4.1,Ensure bootloader password is set,"
Setting the boot loader password will require that anyone rebooting the system must
enter a password before being able to set command line boot parameters.
","
Create an encrypted password with grub2-mkpasswd-pbkdf2:
# grub2-mkpasswd-pbkdf2
Enter password:<password>
Reenter password:<password>
PBKDF2 hash of your password is <encrypted-password>
Add the following into /etc/grub.d/40_custom
set superusers=""<username>""
password_pbkdf2 <username> <encrypted-password>
Run the following command to import the changes into the main configuration file:
# grub2-mkconfig -o /boot/grub2/grub.cfg
",,TRUE
1.4.2,Ensure access to bootloader config is configured,"
The grub configuration file contains information on boot settings and passwords for
unlocking boot options. The grub2 configuration is usually grub.cfg stored in
/boot/grub2/.
Note:
• This recommendation is designed around the grub2 bootloader.
• If LILO or another bootloader is in use in your environment:
o Enact equivalent settings
o Replace /boot/grub2/grub.cfg and /boot/grub2/user.cfg with the
appropriate boot configuration files for your environment
","
Run the following commands to set ownership and permissions on your grub
configuration:
# chown root:root /boot/grub2/grub.cfg
# chmod og-rwx /boot/grub2/grub.cfg
",,TRUE
1.5.1,Ensure address space layout randomization is enabled,"
Address space layout randomization (ASLR) is an exploit mitigation technique which
randomly arranges the address space of key data areas of a process.
","
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• kernel.randomize_va_space = 2
Example:
# printf ""\n%s\n"" ""kernel.randomize_va_space = 2"" >> /etc/sysctl.d/60-
kernel_sysctl.conf
Run the following command to set the active kernel parameter:
# sysctl -w kernel.randomize_va_space=2
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
kernel.randomize_va_space = 2
",,TRUE
1.5.2,Ensure core dumps are restricted,"
A core dump is the memory of an executable program. It is generally used to determine
why a program aborted. It can also be used to glean confidential information from a core
file. The system provides the ability to set a soft limit for core dumps, but this can be
overridden by the user.
","
Add the following line to /etc/security/limits.conf or a
/etc/security/limits.d/* file:
* hard core 0
Set the following parameter in /etc/sysctl.conf or a /etc/sysctl.d/* file:
fs.suid_dumpable = 0
Run the following command to set the active kernel parameter:
# sysctl -w fs.suid_dumpable=0
- IF - systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:
Storage=none
ProcessSizeMax=0
Run the command:
systemctl daemon-reload
",,TRUE
1.5.3,Ensure prelink is disabled,"
prelink is a program that modifies ELF shared libraries and ELF dynamically linked
binaries in such a way that the time needed for the dynamic linker to perform relocations
at startup significantly decreases.
","
Run the following command to restore binaries to normal:
# prelink -ua
Run the following command to uninstall prelink:
# zypper remove prelink
",,TRUE
1.6.1,Ensure crypto-policies-scripts package is installed,"
This package provides a tool update-crypto-policies, which applies the policies
provided by the crypto-policies package. These can be either the pre-built policies from
the base package or custom policies defined in simple policy definition files.
The package also provides a tool fips-mode-setup, which can be used to enable or
disable the system FIPS mode.
","
Run the following command to install crypto-policies-scripts:
# zypper install crypto-policies-scripts
",,TRUE
1.6.2,Ensure system wide crypto policy is not set to legacy,"
When a system-wide policy is set up, the default behavior of applications will be to
follow the policy. Applications will be unable to use algorithms and protocols that do not
meet the policy, unless you explicitly request the application to do so.
The system-wide crypto-policies followed by the crypto core components allow
consistently deprecating and disabling algorithms system-wide.
The LEGACY policy is less secure due to an increased attack surface. In addition to the
DEFAULT level algorithms and protocols, it includes support for the TLS 1.0 and 1.1
protocols. The algorithms DSA, 3DES, and RC4 are allowed, while RSA keys and
Diffie-Hellman parameters are accepted if they are at least 1023 bits long.
","
Run the following command to change the system-wide crypto policy
# update-crypto-policies --set <CRYPTO POLICY>
Example:
# update-crypto-policies --set DEFAULT
Run the following to make the updated system-wide crypto policy active
# update-crypto-policies
Default Value:
DEFAULT
",,TRUE
1.6.3,Ensure system wide crypto policy is not set in sshd configuration,"
System-wide Crypto policy can be over-ridden or opted out of for openSSH
","
Run the following commands:
# sed -ri ""s/^\s*(CRYPTO_POLICY\s*=.*)$/# \1/"" /etc/sysconfig/ssh
# systemctl reload sshd
",,TRUE
1.6.4,Ensure system wide crypto policy disables sha1 hash and signature support,"
SHA-1 (Secure Hash Algorithm) is a cryptographic hash function that produces a 160 bit
hash value.
","
Note:
• The commands below are written for the included DEFAULT system-wide crypto
policy. If another policy is in use and follows local site policy, replace DEFAULT
with the name of your system-wide crypto policy.
• Multiple subpolicies may be assigned to a policy as a colon separated list. e.g.
DEFAULT:NO-SHA1:NO-SSHCBC
• Subpolicies:
o Not included in the update-crypto-policies --set command will not
be applied to the system wide crypto policy.
o must exist before they can be applied to the system wide crypto policy.
o .pmod file filenames must be in all upper case, upper case, e.g. NO-
SHA1.pmod, or they will not be read by the update-crypto-policies --
set command.
Create or edit a file in /etc/crypto-policies/policies/modules/ ending in .pmod
and add or modify the following lines:
hash = -SHA1
sign = -*-SHA1
sha1_in_certs = 0
Example:
# printf '%s\n' ""# This is a subpolicy dropping the SHA1 hash and signature
support"" ""hash = -SHA1"" ""sign = -*-SHA1"" ""sha1_in_certs = 0"" >> /etc/crypto-
policies/policies/modules/NO-SHA1.pmod
Run the following command to update the system-wide cryptographic policy
# update-crypto-policies --set
<CRYPTO_POLICY>:<CRYPTO_SUBPOLICY1>:<CRYPTO_SUBPOLICY2>:<CRYPTO_SUBPOLICY3>
Example:
update-crypto-policies --set DEFAULT:NO-SHA1
Run the following command to reboot the system to make your cryptographic settings
effective for already running services and applications:
# reboot
",,TRUE
1.6.5,Ensure system wide crypto policy disables macs less than 128 bits,"
Message Authentication Code (MAC) algorithm is a family of cryptographic functions
that is parameterized by a symmetric key. Each of the functions can act on input data
(called a “message”) of variable length to produce an output value of a specified length.
The output value is called the MAC of the input message.
A MAC algorithm can be used to provide data-origin authentication and data-integrity
protection
","
Note:
• The commands below are written for the included DEFAULT system-wide crypto
policy. If another policy is in use and follows local site policy, replace DEFAULT
with the name of your system-wide crypto policy.
• Multiple subpolicies may be assigned to a policy as a colon separated list. e.g.
DEFAULT:NO-SHA1:NO-SSHCBC
• Subpolicies:
o Not included in the update-crypto-policies --set command will not
be applied to the system wide crypto policy.
o must exist before they can be applied to the system wide crypto policy.
o .pmod file filenames must be in all upper case, upper case, e.g. NO-
WEAKMAC.pmod, or they will not be read by the update-crypto-policies
--set command.
Create or edit a file in /etc/crypto-policies/policies/modules/ ending in .pmod
and add or modify one of the following lines:
mac = -*-128* # Disables weak macs
Example:
# printf '%s\n' ""# This is a subpolicy to disable weak macs"" ""mac = -*-128""
>> /etc/crypto-policies/policies/modules/NO-WEAKMAC.pmod
Run the following command to update the system-wide cryptographic policy
# update-crypto-policies --set
<CRYPTO_POLICY>:<CRYPTO_SUBPOLICY1>:<CRYPTO_SUBPOLICY2>:<CRYPTO_SUBPOLICY3>
Example:
update-crypto-policies --set DEFAULT:NO-SHA1:NO-WEAKMAC
Run the following command to reboot the system to make your cryptographic settings
effective for already running services and applications:
# reboot
",,TRUE
1.6.6,Ensure system wide crypto policy disables cbc for ssh,"
Cypher Block Chaining (CBC) is an algorithm that uses a block cipher.
","
Note:
• The commands below are written for the included DEFAULT system-wide crypto
policy. If another policy is in use and follows local site policy, replace DEFAULT
with the name of your system-wide crypto policy.
• CBC can be turned off globally by using the argument cipher opposed to
cipher@SSH
• Multiple subpolicies may be assigned to a policy as a colon separated list. e.g.
DEFAULT:NO-SHA1:NO-SSHCBC
• Subpolicies:
o Not included in the update-crypto-policies --set command will not
be applied to the system wide crypto policy.
o must exist before they can be applied to the system wide crypto policy.
o .pmod file filenames must be in all upper case, upper case, e.g. NO-
SSHCBC.pmod, or they will not be read by the update-crypto-policies
--set command.
Create or edit a file in /etc/crypto-policies/policies/modules/
ending in .pmod and add or modify one of the the following lines:
cipher@SSH = -*-CBC # Disables the CBC cipher for SSH
Example:
# printf '%s\n' ""# This is a subpolicy to disable all CBC mode ciphers"" ""#
for the SSH protocol (libssh and OpenSSH)"" ""cipher@SSH = -*-CBC"" >>
/etc/crypto-policies/policies/modules/NO-SSHCBC.pmod
Run the following command to update the system-wide cryptographic policy
# update-crypto-policies --set
<CRYPTO_POLICY>:<CRYPTO_SUBPOLICY1>:<CRYPTO_SUBPOLICY2>:<CRYPTO_SUBPOLICY3>
Example:
update-crypto-policies --set DEFAULT:NO-SHA1:NO-WEAKMAC:NO-SSHCBC
Run the following command to reboot the system to make your cryptographic settings
effective for already running services and applications:
# reboot
",,TRUE
1.6.7,Ensure system wide crypto policy disables chacha20-poly1305 for ssh,"
ChaCha20-Poly1305 is an authenticated encryption with additional data (AEAD)
algorithm, that combines the ChaCha20 stream cipher with the Poly1305 message
authentication code. Its usage in IETF protocols is standardized in RFC 8439.
","
Note:
• The commands below are written for the included DEFAULT system-wide crypto
policy. If another policy is in use and follows local site policy, replace DEFAULT
with the name of your system-wide crypto policy.
• chacha20-poly1305 can be turned off globally by using the argument cipher
opposed to cipher@SSH
• Multiple subpolicies may be assigned to a policy as a colon separated list. e.g.
DEFAULT:NO-SHA1:NO-SSHCBC
• Subpolicies:
o Not included in the update-crypto-policies --set command will not
be applied to the system wide crypto policy.
o must exist before they can be applied to the system wide crypto policy.
o .pmod file filenames must be in all upper case, upper case, e.g. NO-
SSHCHACHA20.pmod, or they will not be read by the update-crypto-
policies --set command.
- IF - CVE-2023-48795 has been addressed, and it meets local site policy, this
recommendation may be skipped.
Create or edit a file in /etc/crypto-policies/policies/modules/ ending in .pmod
and add or modify one of the the following lines:
cipher@SSH = -CHACHA20-POLY1305 # Disables the chacha20-poly1305 cipher for
SSH
Example:
# printf '%s\n' ""# This is a subpolicy to disable the chacha20-poly1305
ciphers"" ""# for the SSH protocol (libssh and OpenSSH)"" ""cipher@SSH = -
CHACHA20-POLY1305"" >> /etc/crypto-policies/policies/modules/NO-
SSHCHACHA20.pmod
Run the following command to update the system-wide cryptographic policy
# update-crypto-policies --set
<CRYPTO_POLICY>:<CRYPTO_SUBPOLICY1>:<CRYPTO_SUBPOLICY2>:<CRYPTO_SUBPOLICY3>
Example:
# update-crypto-policies --set DEFAULT:NO-SHA1:NO-WEAKMAC:NO-SSHCBC:NO-
SSHCHACHA20
Run the following command to reboot the system to make your cryptographic settings
effective for already running services and applications:
# reboot
",,TRUE
1.7.1,Ensure /etc/motd is configured,"
The contents of the /etc/motd file are displayed to users after login and function as a
message of the day for authenticated users.

Unix-based systems have typically displayed information about the OS release and
patch level upon logging in to the system. This information can be useful to developers
who are developing software for a particular OS platform. If mingetty(8) supports the
following options, they display operating system information: \m - machine architecture
\r - operating system release \s - operating system name \v - operating system
version
","
Edit the file found in /etc/motd.d/* with the appropriate contents according to your
site policy, remove any instances of \m , \r , \s , \v or references to the OS platform
- OR -
- IF - the motd is not used, this file can be removed.
Run the following command to remove the motd file:
# rm /etc/motd
Run the following script and review and/or update all returned files' contents to:
• Remove all system information (\v, \r; \m, \s)
• Remove any refence to the operating system
• Ensure contents follow local site policy
#!/usr/bin/env bash
{
a_files=()
for l_file in /etc/motd{,.d/*}; do
if grep -Psqi -- ""(\\\v|\\\r|\\\m|\\\s|\b$(grep ^ID= /etc/os-release |
cut -d= -f2 | sed -e 's/""//g')\b)"" ""$l_file""; then
echo -e ""\n - File: \""$l_file\"" includes system information. Edit
this file to remove these entries""
else
a_files+=(""$l_file"")
fi
done
if [ ""${#a_files[@]}"" -gt 0 ]; then
echo -e ""\n- ** Please review the following files and verify their
contents follow local site policy **\n""
printf '%s\n' ""${a_files[@]}""
fi
}
",,TRUE
1.7.2,Ensure /etc/issue is configured,"
The contents of the /etc/issue file are displayed to users prior to login for local
terminals.

Unix-based systems have typically displayed information about the OS release and
patch level upon logging in to the system. This information can be useful to developers
who are developing software for a particular OS platform. If mingetty(8) supports the
following options, they display operating system information: \m - machine architecture
\r - operating system release \s - operating system name \v - operating system
version - or the operating system's name
","
Edit the /etc/issue file with the appropriate contents according to your site policy,
remove any instances of \m , \r , \s , \v or references to the OS platform
Example:
# echo ""Authorized users only. All activity may be monitored and reported."" >
/etc/issue
",,TRUE
1.7.3,Ensure /etc/issue.net is configured,"
The contents of the /etc/issue.net file are displayed to users prior to login for remote
connections from configured services.
Unix-based systems have typically displayed information about the OS release and
patch level upon logging in to the system. This information can be useful to developers
who are developing software for a particular OS platform. If mingetty(8) supports the
following options, they display operating system information: \m - machine architecture
\r - operating system release \s - operating system name \v - operating system
version
","
Edit the /etc/issue.net file with the appropriate contents according to your site policy,
remove any instances of \m , \r , \s , \v or references to the OS platform
Example:
# echo ""Authorized users only. All activity may be monitored and reported."" >
/etc/issue.net
",,TRUE
1.7.4,Ensure access to /etc/motd is configured,"
The contents of the /etc/motd file are displayed to users after login and function as a
message of the day for authenticated users.
","
Run the following commands to set mode, owner, and group on /etc/motd:
# chown root:root $(readlink -e /etc/motd)
# chmod u-x,go-wx $(readlink -e /etc/motd)
- OR -
Run the following command to remove the /etc/motd file:
# rm /etc/motd
",,TRUE
1.7.5,Ensure access to /etc/issue is configured,"
The contents of the /etc/issue file are displayed to users prior to login for local
terminals.
","
Run the following commands to set mode, owner, and group on /etc/issue:
# chown root:root $(readlink -e /etc/issue)
# chmod u-x,go-wx $(readlink -e /etc/issue)
Default Value:
Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
",,TRUE
1.7.6,Ensure access to /etc/issue.net is configured,"
The contents of the /etc/issue.net file are displayed to users prior to login for remote
connections from configured services.
","
Run the following commands to set mode, owner, and group on /etc/issue.net:
# chown root:root $(readlink -e /etc/issue.net)
# chmod u-x,go-wx $(readlink -e /etc/issue.net)
Default Value:
Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
",,TRUE
1.8.1,Ensure GNOME Display Manager is removed,"
The GNOME Display Manager (GDM) is a program that manages graphical display
servers and handles graphical user logins.
","
Run the following command to remove the gdm package
# zypper remove gdm
",,TRUE
1.8.2,Ensure GDM login banner is configured,"
GDM is the GNOME Display Manager which handles graphical login for GNOME based
systems.
","
Run the following script to verify that the banner message is enabled and set:
#!/usr/bin/env bash
{
l_pkgoutput=""""
if command -v dpkg-query > /dev/null 2>&1; then
l_pq=""dpkg-query -W""
elif command -v rpm > /dev/null 2>&1; then
l_pq=""rpm -q""
fi
l_pcl=""gdm gdm3"" # Space separated list of packages to check
for l_pn in $l_pcl; do
$l_pq ""$l_pn"" > /dev/null 2>&1 && l_pkgoutput=""$l_pkgoutput\n -
Package: \""$l_pn\"" exists on the system\n - checking configuration""
done
if [ -n ""$l_pkgoutput"" ]; then
l_gdmprofile=""gdm"" # Set this to desired profile name IaW Local site
policy
l_bmessage=""'Authorized uses only. All activity may be monitored and
reported'"" # Set to desired banner message
if [ ! -f ""/etc/dconf/profile/$l_gdmprofile"" ]; then
echo ""Creating profile \""$l_gdmprofile\""""
echo -e ""user-db:user\nsystem-db:$l_gdmprofile\nfile-
db:/usr/share/$l_gdmprofile/greeter-dconf-defaults"" >
/etc/dconf/profile/$l_gdmprofile
fi
if [ ! -d ""/etc/dconf/db/$l_gdmprofile.d/"" ]; then
echo ""Creating dconf database directory
\""/etc/dconf/db/$l_gdmprofile.d/\""""
mkdir /etc/dconf/db/$l_gdmprofile.d/
fi
if ! grep -Piq '^\h*banner-message-enable\h*=\h*true\b'
/etc/dconf/db/$l_gdmprofile.d/*; then
echo ""creating gdm keyfile for machine-wide settings""
if ! grep -Piq -- '^\h*banner-message-enable\h*=\h*'
/etc/dconf/db/$l_gdmprofile.d/*; then
l_kfile=""/etc/dconf/db/$l_gdmprofile.d/01-banner-message""
echo -e ""\n[org/gnome/login-screen]\nbanner-message-enable=true""
>> ""$l_kfile""
else
l_kfile=""$(grep -Pil -- '^\h*banner-message-enable\h*=\h*'
/etc/dconf/db/$l_gdmprofile.d/*)""
! grep -Pq '^\h*\[org\/gnome\/login-screen\]' ""$l_kfile"" && sed -
ri '/^\s*banner-message-enable/ i\[org/gnome/login-screen]' ""$l_kfile""
! grep -Pq '^\h*banner-message-enable\h*=\h*true\b' ""$l_kfile"" &&
sed -ri 's/^\s*(banner-message-enable\s*=\s*)(\S+)(\s*.*$)/\1true \3//'
""$l_kfile""
# sed -ri '/^\s*\[org\/gnome\/login-screen\]/ a\\nbanner-message-
enable=true' ""$l_kfile""
fi
fi
if ! grep -Piq ""^\h*banner-message-text=[\'\""]+\S+"" ""$l_kfile""; then
sed -ri ""/^\s*banner-message-enable/ a\banner-message-
text=$l_bmessage"" ""$l_kfile""
fi
dconf update
else
echo -e ""\n\n - GNOME Desktop Manager isn't installed\n -
Recommendation is Not Applicable\n - No remediation required\n""
fi
}
Note:
• There is no character limit for the banner message. gnome-shell autodetects
longer stretches of text and enters two column mode.
• The banner message cannot be read from an external file.
- OR -
Run the following command to remove the gdm package:
# zypper remove gdm
Default Value:
disabled
",,TRUE
1.8.3,Ensure GDM disable-user-list option is enabled,"
GDM is the GNOME Display Manager which handles graphical login for GNOME based
systems.
The disable-user-list option controls if a list of users is displayed on the login
screen
","
Run the following script to enable the disable-user-list option:
Note: the l_gdm_profile variable in the script can be changed if a different profile
name is desired in accordance with local site policy.
#!/usr/bin/env bash
{
l_gdmprofile=""gdm""
if [ ! -f ""/etc/dconf/profile/$l_gdmprofile"" ]; then
echo ""Creating profile \""$l_gdmprofile\""""
echo -e ""user-db:user\nsystem-db:$l_gdmprofile\nfile-
db:/usr/share/$l_gdmprofile/greeter-dconf-defaults"" >
/etc/dconf/profile/$l_gdmprofile
fi
if [ ! -d ""/etc/dconf/db/$l_gdmprofile.d/"" ]; then
echo ""Creating dconf database directory
\""/etc/dconf/db/$l_gdmprofile.d/\""""
mkdir /etc/dconf/db/$l_gdmprofile.d/
fi
if ! grep -Piq '^\h*disable-user-list\h*=\h*true\b'
/etc/dconf/db/$l_gdmprofile.d/*; then
echo ""creating gdm keyfile for machine-wide settings""
if ! grep -Piq -- '^\h*\[org\/gnome\/login-screen\]'
/etc/dconf/db/$l_gdmprofile.d/*; then
echo -e ""\n[org/gnome/login-screen]\n# Do not show the user
list\ndisable-user-list=true"" >> /etc/dconf/db/$l_gdmprofile.d/00-login-
screen
else
sed -ri '/^\s*\[org\/gnome\/login-screen\]/ a\# Do not show the user
list\ndisable-user-list=true' $(grep -Pil -- '^\h*\[org\/gnome\/login-
screen\]' /etc/dconf/db/$l_gdmprofile.d/*)
fi
fi
dconf update
}
Note: When the user profile is created or changed, the user will need to log out and log
in again before the changes will be applied.
- OR -
Run the following command to remove the GNOME package:
# zypper remove gdm
Default Value:
false
",,TRUE
1.8.4,Ensure GDM screen locks when the user is idle,"
GNOME Desktop Manager can make the screen lock automatically whenever the user
is idle for some amount of time.
• idle-delay=uint32 {n} - Number of seconds of inactivity before the screen
goes blank
• lock-delay=uint32 {n} - Number of seconds after the screen is blank before
locking the screen
Example key file:
# Specify the dconf path
[org/gnome/desktop/session]
# Number of seconds of inactivity before the screen goes blank
# Set to 0 seconds if you want to deactivate the screensaver.
idle-delay=uint32 900
# Specify the dconf path
[org/gnome/desktop/screensaver]
# Number of seconds after the screen is blank before locking the screen
lock-delay=uint32 5
","
Create or edit a file in the /etc/dconf/profile/ and verify it includes the following:
user-db:user
system-db:{NAME_OF_DCONF_DATABASE}
Note: local is the name of a dconf database used in the examples.
Example:
# echo -e '\nuser-db:user\nsystem-db:local' >> /etc/dconf/profile/user
Create the directory /etc/dconf/db/{NAME_OF_DCONF_DATABASE}.d/ if it doesn't
already exist:
Example:
# mkdir /etc/dconf/db/local.d
Create the key file /etc/dconf/db/{NAME_OF_DCONF_DATABASE}.d/{FILE_NAME} to
provide information for the {NAME_OF_DCONF_DATABASE} database:
Example script:
#!/usr/bin/env bash
{
l_key_file=""/etc/dconf/db/local.d/00-screensaver""
l_idmv=""900"" # Set max value for idle-delay in seconds (between 1 and 900)
l_ldmv=""5"" # Set max value for lock-delay in seconds (between 0 and 5)
{
echo '# Specify the dconf path'
echo '[org/gnome/desktop/session]'
echo ''
echo '# Number of seconds of inactivity before the screen goes blank'
echo '# Set to 0 seconds if you want to deactivate the screensaver.'
echo ""idle-delay=uint32 $l_idmv""
echo ''
echo '# Specify the dconf path'
echo '[org/gnome/desktop/screensaver]'
echo ''
echo '# Number of seconds after the screen is blank before locking the
screen'
echo ""lock-delay=uint32 $l_ldmv""
} > ""$l_key_file""
}
Note: You must include the uint32 along with the integer key values as shown.
Run the following command to update the system databases:
# dconf update
Note: Users must log out and back in again before the system-wide settings take effect.
",,TRUE
1.8.5,Ensure GDM screen locks cannot be overridden,"
GNOME Desktop Manager can make the screen lock automatically whenever the user
is idle for some amount of time.
By using the lockdown mode in dconf, you can prevent users from changing specific
settings.
To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory.
The files inside this directory contain a list of keys or subpaths to lock. Just as with the
keyfiles, you may add any number of files to this directory.
Example Lock File:
# Lock desktop screensaver settings
/org/gnome/desktop/session/idle-delay
/org/gnome/desktop/screensaver/lock-delay
","
Run the following script to ensure screen locks cannot be overridden:
#!/usr/bin/env bash
{
# Check if GNMOE Desktop Manager is installed. If package isn't
installed, recommendation is Not Applicable\n
# determine system's package manager
l_pkgoutput=""""
if command -v dpkg-query > /dev/null 2>&1; then
l_pq=""dpkg-query -W""
elif command -v rpm > /dev/null 2>&1; then
l_pq=""rpm -q""
fi
# Check if GDM is installed
l_pcl=""gdm gdm3"" # Space separated list of packages to check
for l_pn in $l_pcl; do
$l_pq ""$l_pn"" > /dev/null 2>&1 && l_pkgoutput=""y"" && echo -e ""\n -
Package: \""$l_pn\"" exists on the system\n - remediating configuration if
needed""
done
# Check configuration (If applicable)
if [ -n ""$l_pkgoutput"" ]; then
# Look for idle-delay to determine profile in use, needed for remaining
tests
l_kfd=""/etc/dconf/db/$(grep -Psril '^\h*idle-
delay\h*=\h*uint32\h+\d+\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-
1),a,""."");print a[1]}').d"" #set directory of key file to be locked
# Look for lock-delay to determine profile in use, needed for remaining
tests
l_kfd2=""/etc/dconf/db/$(grep -Psril '^\h*lock-
delay\h*=\h*uint32\h+\d+\b' /etc/dconf/db/*/ | awk -F'/' '{split($(NF-
1),a,""."");print a[1]}').d"" #set directory of key file to be locked
if [ -d ""$l_kfd"" ]; then # If key file directory doesn't exist, options
can't be locked
if grep -Prilq '^\h*\/org\/gnome\/desktop\/session\/idle-delay\b'
""$l_kfd""; then
echo "" - \""idle-delay\"" is locked in \""$(grep -Pril
'^\h*\/org\/gnome\/desktop\/session\/idle-delay\b' ""$l_kfd"")\""""
else
echo ""creating entry to lock \""idle-delay\""""
[ ! -d ""$l_kfd""/locks ] && echo ""creating directory $l_kfd/locks""
&& mkdir ""$l_kfd""/locks
{
echo -e '\n# Lock desktop screensaver idle-delay setting'
echo '/org/gnome/desktop/session/idle-delay'
} >> ""$l_kfd""/locks/00-screensaver
fi
else
echo -e "" - \""idle-delay\"" is not set so it can not be locked\n -
Please follow Recommendation \""Ensure GDM screen locks when the user is
idle\"" and follow this Recommendation again""
fi
if [ -d ""$l_kfd2"" ]; then # If key file directory doesn't exist,
options can't be locked
if grep -Prilq '^\h*\/org\/gnome\/desktop\/screensaver\/lock-
delay\b' ""$l_kfd2""; then
echo "" - \""lock-delay\"" is locked in \""$(grep -Pril
'^\h*\/org\/gnome\/desktop\/screensaver\/lock-delay\b' ""$l_kfd2"")\""""
else
echo ""creating entry to lock \""lock-delay\""""
[ ! -d ""$l_kfd2""/locks ] && echo ""creating directory
$l_kfd2/locks"" && mkdir ""$l_kfd2""/locks
{
echo -e '\n# Lock desktop screensaver lock-delay setting'
echo '/org/gnome/desktop/screensaver/lock-delay'
} >> ""$l_kfd2""/locks/00-screensaver
fi
else
echo -e "" - \""lock-delay\"" is not set so it can not be locked\n -
Please follow Recommendation \""Ensure GDM screen locks when the user is
idle\"" and follow this Recommendation again""
fi
else
echo -e "" - GNOME Desktop Manager package is not installed on the
system\n - Recommendation is not applicable""
fi
}
Run the following command to update the system databases:
# dconf update
Note: Users must log out and back in again before the system-wide settings take effect.
",,TRUE
1.8.6,Ensure GDM automatic mounting of removable media is disabled,"
By default GNOME automatically mounts removable media when inserted as a
convenience to the user.
","
Run the following script to disable automatic mounting of media for all GNOME users:
#!/usr/bin/env bash
{
l_pkgoutput=""""
l_gpname=""local"" # Set to desired dconf profile name (default is local)
# Check if GNOME Desktop Manager is installed. If package isn't
installed, recommendation is Not Applicable\n
# determine system's package manager
if command -v dpkg-query > /dev/null 2>&1; then
l_pq=""dpkg-query -W""
elif command -v rpm > /dev/null 2>&1; then
l_pq=""rpm -q""
fi
# Check if GDM is installed
l_pcl=""gdm gdm3"" # Space separated list of packages to check
for l_pn in $l_pcl; do
$l_pq ""$l_pn"" > /dev/null 2>&1 && l_pkgoutput=""$l_pkgoutput\n -
Package: \""$l_pn\"" exists on the system\n - checking configuration""
done
# Check configuration (If applicable)
if [ -n ""$l_pkgoutput"" ]; then
echo -e ""$l_pkgoutput""
# Look for existing settings and set variables if they exist
l_kfile=""$(grep -Prils -- '^\h*automount\b' /etc/dconf/db/*.d)""
l_kfile2=""$(grep -Prils -- '^\h*automount-open\b' /etc/dconf/db/*.d)""
# Set profile name based on dconf db directory ({PROFILE_NAME}.d)
if [ -f ""$l_kfile"" ]; then
l_gpname=""$(awk -F\/ '{split($(NF-1),a,""."");print a[1]}' <<<
""$l_kfile"")""
echo "" - updating dconf profile name to \""$l_gpname\""""
elif [ -f ""$l_kfile2"" ]; then
l_gpname=""$(awk -F\/ '{split($(NF-1),a,""."");print a[1]}' <<<
""$l_kfile2"")""
echo "" - updating dconf profile name to \""$l_gpname\""""
fi
# check for consistency (Clean up configuration if needed)
if [ -f ""$l_kfile"" ] && [ ""$(awk -F\/ '{split($(NF-1),a,""."");print
a[1]}' <<< ""$l_kfile"")"" != ""$l_gpname"" ]; then
sed -ri ""/^\s*automount\s*=/s/^/# /"" ""$l_kfile""
l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-automount""
fi
if [ -f ""$l_kfile2"" ] && [ ""$(awk -F\/ '{split($(NF-1),a,""."");print
a[1]}' <<< ""$l_kfile2"")"" != ""$l_gpname"" ]; then
sed -ri ""/^\s*automount-open\s*=/s/^/# /"" ""$l_kfile2""
fi
[ -z ""$l_kfile"" ] && l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-
automount""
# Check if profile file exists
if grep -Pq -- ""^\h*system-db:$l_gpname\b"" /etc/dconf/profile/*; then
echo -e ""\n - dconf database profile exists in: \""$(grep -Pl --
""^\h*system-db:$l_gpname\b"" /etc/dconf/profile/*)\""""
else
if [ ! -f ""/etc/dconf/profile/user"" ]; then
l_gpfile=""/etc/dconf/profile/user""
else
l_gpfile=""/etc/dconf/profile/user2""
fi
echo -e "" - creating dconf database profile""
{
echo -e ""\nuser-db:user""
echo ""system-db:$l_gpname""
} >> ""$l_gpfile""
fi
# create dconf directory if it doesn't exists
l_gpdir=""/etc/dconf/db/$l_gpname.d""
if [ -d ""$l_gpdir"" ]; then
echo "" - The dconf database directory \""$l_gpdir\"" exists""
else
echo "" - creating dconf database directory \""$l_gpdir\""""
mkdir ""$l_gpdir""
fi
# check automount-open setting
if grep -Pqs -- '^\h*automount-open\h*=\h*false\b' ""$l_kfile""; then
echo "" - \""automount-open\"" is set to false in: \""$l_kfile\""""
else
echo "" - creating \""automount-open\"" entry in \""$l_kfile\""""
! grep -Psq -- '\^\h*\[org\/gnome\/desktop\/media-handling\]\b'
""$l_kfile"" && echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
sed -ri '/^\s*\[org\/gnome\/desktop\/media-handling\]/a
\\nautomount-open=false' ""$l_kfile""
fi
# check automount setting
if grep -Pqs -- '^\h*automount\h*=\h*false\b' ""$l_kfile""; then
echo "" - \""automount\"" is set to false in: \""$l_kfile\""""
else
echo "" - creating \""automount\"" entry in \""$l_kfile\""""
! grep -Psq -- '\^\h*\[org\/gnome\/desktop\/media-handling\]\b'
""$l_kfile"" && echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
sed -ri '/^\s*\[org\/gnome\/desktop\/media-handling\]/a
\\nautomount=false' ""$l_kfile""
fi
# update dconf database
dconf update
else
echo -e ""\n - GNOME Desktop Manager package is not installed on the
system\n - Recommendation is not applicable""
fi
}
- OR -
Run the following command to uninstall the GNOME desktop Manager package:
# zypper remove gdm
",,TRUE
1.8.7,Ensure GDM disabling automatic mounting of removable media is not overridden,"
By default GNOME automatically mounts removable media when inserted as a
convenience to the user
By using the lockdown mode in dconf, you can prevent users from changing specific
settings.
To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory.
The files inside this directory contain a list of keys or subpaths to lock. Just as with the
keyfiles, you may add any number of files to this directory.
Example Lock File:
# Lock automount settings
/org/gnome/desktop/media-handling/automount
/org/gnome/desktop/media-handling/automount-open
","
Run the following script to lock disable automatic mounting of media for all GNOME
users:
#!/usr/bin/env bash
{
# Check if GNMOE Desktop Manager is installed. If package isn't
installed, recommendation is Not Applicable\n
# determine system's package manager
l_pkgoutput=""""
if command -v dpkg-query > /dev/null 2>&1; then
l_pq=""dpkg-query -W""
elif command -v rpm > /dev/null 2>&1; then
l_pq=""rpm -q""
fi
# Check if GDM is installed
l_pcl=""gdm gdm3"" # Space separated list of packages to check
for l_pn in $l_pcl; do
$l_pq ""$l_pn"" > /dev/null 2>&1 && l_pkgoutput=""y"" && echo -e ""\n -
Package: \""$l_pn\"" exists on the system\n - remediating configuration if
needed""
done
# Check configuration (If applicable)
if [ -n ""$l_pkgoutput"" ]; then
# Look for automount to determine profile in use, needed for remaining
tests
l_kfd=""/etc/dconf/db/$(grep -Psril '^\h*automount\b' /etc/dconf/db/*/ |
awk -F'/' '{split($(NF-1),a,""."");print a[1]}').d"" #set directory of key file
to be locked
# Look for automount-open to determine profile in use, needed for
remaining tests
l_kfd2=""/etc/dconf/db/$(grep -Psril '^\h*automount-open\b'
/etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,""."");print a[1]}').d"" #set
directory of key file to be locked
if [ -d ""$l_kfd"" ]; then # If key file directory doesn't exist, options
can't be locked
if grep -Priq '^\h*\/org/gnome\/desktop\/media-
handling\/automount\b' ""$l_kfd""; then
echo "" - \""automount\"" is locked in \""$(grep -Pril
'^\h*\/org/gnome\/desktop\/media-handling\/automount\b' ""$l_kfd"")\""""
else
echo "" - creating entry to lock \""automount\""""
[ ! -d ""$l_kfd""/locks ] && echo ""creating directory $l_kfd/locks""
&& mkdir ""$l_kfd""/locks
{
echo -e '\n# Lock desktop media-handling automount setting'
echo '/org/gnome/desktop/media-handling/automount'
} >> ""$l_kfd""/locks/00-media-automount
fi
else
echo -e "" - \""automount\"" is not set so it can not be locked\n -
Please follow Recommendation \""Ensure GDM automatic mounting of removable
media is disabled\"" and follow this Recommendation again""
fi
if [ -d ""$l_kfd2"" ]; then # If key file directory doesn't exist,
options can't be locked
if grep -Priq '^\h*\/org/gnome\/desktop\/media-handling\/automount-
open\b' ""$l_kfd2""; then
echo "" - \""automount-open\"" is locked in \""$(grep -Pril
'^\h*\/org/gnome\/desktop\/media-handling\/automount-open\b' ""$l_kfd2"")\""""
else
echo "" - creating entry to lock \""automount-open\""""
[ ! -d ""$l_kfd2""/locks ] && echo ""creating directory
$l_kfd2/locks"" && mkdir ""$l_kfd2""/locks
{
echo -e '\n# Lock desktop media-handling automount-open
setting'
echo '/org/gnome/desktop/media-handling/automount-open'
} >> ""$l_kfd2""/locks/00-media-automount
fi
else
echo -e "" - \""automount-open\"" is not set so it can not be locked\n
- Please follow Recommendation \""Ensure GDM automatic mounting of removable
media is disabled\"" and follow this Recommendation again""
fi
# update dconf database
dconf update
else
echo -e "" - GNOME Desktop Manager package is not installed on the
system\n - Recommendation is not applicable""
fi
}
",,TRUE
1.8.8,Ensure GDM autorun-never is enabled,"
The autorun-never setting allows the GNOME Desktop Display Manager to disable
autorun through GDM.
","
Run the following script to set autorun-never to true for GDM users:
#!/usr/bin/env bash
{
l_pkgoutput="""" l_output="""" l_output2=""""
l_gpname=""local"" # Set to desired dconf profile name (default is local)
# Check if GNOME Desktop Manager is installed. If package isn't
installed, recommendation is Not Applicable\n
# determine system's package manager
if command -v dpkg-query > /dev/null 2>&1; then
l_pq=""dpkg-query -W""
elif command -v rpm > /dev/null 2>&1; then
l_pq=""rpm -q""
fi
# Check if GDM is installed
l_pcl=""gdm gdm3"" # Space separated list of packages to check
for l_pn in $l_pcl; do
$l_pq ""$l_pn"" > /dev/null 2>&1 && l_pkgoutput=""$l_pkgoutput\n -
Package: \""$l_pn\"" exists on the system\n - checking configuration""
done
echo -e ""$l_pkgoutput""
# Check configuration (If applicable)
if [ -n ""$l_pkgoutput"" ]; then
echo -e ""$l_pkgoutput""
# Look for existing settings and set variables if they exist
l_kfile=""$(grep -Prils -- '^\h*autorun-never\b' /etc/dconf/db/*.d)""
# Set profile name based on dconf db directory ({PROFILE_NAME}.d)
if [ -f ""$l_kfile"" ]; then
l_gpname=""$(awk -F\/ '{split($(NF-1),a,""."");print a[1]}' <<<
""$l_kfile"")""
echo "" - updating dconf profile name to \""$l_gpname\""""
fi
[ ! -f ""$l_kfile"" ] && l_kfile=""/etc/dconf/db/$l_gpname.d/00-media-
autorun""
# Check if profile file exists
if grep -Pq -- ""^\h*system-db:$l_gpname\b"" /etc/dconf/profile/*; then
echo -e ""\n - dconf database profile exists in: \""$(grep -Pl --
""^\h*system-db:$l_gpname\b"" /etc/dconf/profile/*)\""""
else
[ ! -f ""/etc/dconf/profile/user"" ] &&
l_gpfile=""/etc/dconf/profile/user"" || l_gpfile=""/etc/dconf/profile/user2""
echo -e "" - creating dconf database profile""
{
echo -e ""\nuser-db:user""
echo ""system-db:$l_gpname""
} >> ""$l_gpfile""
fi
# create dconf directory if it doesn't exists
l_gpdir=""/etc/dconf/db/$l_gpname.d""
if [ -d ""$l_gpdir"" ]; then
echo "" - The dconf database directory \""$l_gpdir\"" exists""
else
echo "" - creating dconf database directory \""$l_gpdir\""""
mkdir ""$l_gpdir""
fi
# check autorun-never setting
if grep -Pqs -- '^\h*autorun-never\h*=\h*true\b' ""$l_kfile""; then
echo "" - \""autorun-never\"" is set to true in: \""$l_kfile\""""
else
echo "" - creating or updating \""autorun-never\"" entry in
\""$l_kfile\""""
if grep -Psq -- '^\h*autorun-never' ""$l_kfile""; then
sed -ri 's/(^\s*autorun-never\s*=\s*)(\S+)(\s*.*)$/\1true \3/'
""$l_kfile""
else
! grep -Psq -- '\^\h*\[org\/gnome\/desktop\/media-handling\]\b'
""$l_kfile"" && echo '[org/gnome/desktop/media-handling]' >> ""$l_kfile""
sed -ri '/^\s*\[org\/gnome\/desktop\/media-handling\]/a
\\nautorun-never=true' ""$l_kfile""
fi
fi
else
echo -e ""\n - GNOME Desktop Manager package is not installed on the
system\n - Recommendation is not applicable""
fi
# update dconf database
dconf update
}
Default Value:
false
",,TRUE
1.8.9,Ensure GDM autorun-never is not overridden,"
The autorun-never setting allows the GNOME Desktop Display Manager to disable
autorun through GDM.
By using the lockdown mode in dconf, you can prevent users from changing specific
settings.
To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory.
The files inside this directory contain a list of keys or subpaths to lock. Just as with the
keyfiles, you may add any number of files to this directory.
Example Lock File:
# Lock desktop media-handling settings
/org/gnome/desktop/media-handling/autorun-never
","
Run the following script to ensure that autorun-never=true cannot be overridden:
#!/usr/bin/env bash
{
# Check if GNOME Desktop Manager is installed. If package isn't
installed, recommendation is Not Applicable\n
# determine system's package manager
l_pkgoutput=""""
if command -v dpkg-query > /dev/null 2>&1; then
l_pq=""dpkg-query -W""
elif command -v rpm > /dev/null 2>&1; then
l_pq=""rpm -q""
fi
# Check if GDM is installed
l_pcl=""gdm gdm3"" # Space separated list of packages to check
for l_pn in $l_pcl; do
$l_pq ""$l_pn"" > /dev/null 2>&1 && l_pkgoutput=""y"" && echo -e ""\n -
Package: \""$l_pn\"" exists on the system\n - remediating configuration if
needed""
done
# Check configuration (If applicable)
if [ -n ""$l_pkgoutput"" ]; then
# Look for autorun to determine profile in use, needed for remaining
tests
l_kfd=""/etc/dconf/db/$(grep -Psril '^\h*autorun-never\b'
/etc/dconf/db/*/ | awk -F'/' '{split($(NF-1),a,""."");print a[1]}').d"" #set
directory of key file to be locked
if [ -d ""$l_kfd"" ]; then # If key file directory doesn't exist, options
can't be locked
if grep -Priq '^\h*\/org/gnome\/desktop\/media-handling\/autorun-
never\b' ""$l_kfd""; then
echo "" - \""autorun-never\"" is locked in \""$(grep -Pril
'^\h*\/org/gnome\/desktop\/media-handling\/autorun-never\b' ""$l_kfd"")\""""
else
echo "" - creating entry to lock \""autorun-never\""""
[ ! -d ""$l_kfd""/locks ] && echo ""creating directory $l_kfd/locks""
&& mkdir ""$l_kfd""/locks
{
echo -e '\n# Lock desktop media-handling autorun-never
setting'
echo '/org/gnome/desktop/media-handling/autorun-never'
} >> ""$l_kfd""/locks/00-media-autorun
fi
else
echo -e "" - \""autorun-never\"" is not set so it can not be locked\n -
Please follow Recommendation \""Ensure GDM autorun-never is enabled\"" and
follow this Recommendation again""
fi
# update dconf database
dconf update
else
echo -e "" - GNOME Desktop Manager package is not installed on the
system\n - Recommendation is not applicable""
fi
}
",,TRUE
1.8.10,Ensure XDMCP is not enabled,"
X Display Manager Control Protocol (XDMCP) is designed to provide authenticated
access to display management services for remote displays
","
Edit the file /etc/gdm/custom.conf and remove the line:
Enable=true
Default Value:
false
",,TRUE
3.1.2,Ensure wireless interfaces are not available,"
Wireless networking is used when wired networks are unavailable.
","
Run the following script to disable any wireless interfaces:
#!/usr/bin/env bash
{
module_fix()
{
if ! modprobe -n -v ""$l_mname"" | grep -P -- '^\h*install
\/bin\/(true|false)'; then
echo -e "" - setting module: \""$l_mname\"" to be un-loadable""
echo -e ""install $l_mname /bin/false"" >>
/etc/modprobe.d/""$l_mname"".conf
fi
if lsmod | grep ""$l_mname"" > /dev/null 2>&1; then
echo -e "" - unloading module \""$l_mname\""""
modprobe -r ""$l_mname""
fi
if ! grep -Pq -- ""^\h*blacklist\h+$l_mname\b"" /etc/modprobe.d/*; then
echo -e "" - deny listing \""$l_mname\""""
echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mname"".conf
fi
}
if [ -n ""$(find /sys/class/net/*/ -type d -name wireless)"" ]; then
l_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name
wireless | xargs -0 dirname); do basename ""$(readlink -f
""$driverdir""/device/driver/module)"";done | sort -u)
for l_mname in $l_dname; do
module_fix
done
fi
}
",,TRUE
3.1.3,Ensure bluetooth services are not in use,"
Bluetooth is a short-range wireless technology standard that is used for exchanging
data between devices over short distances. It employs UHF radio waves in the ISM
bands, from 2.402 GHz to 2.48 GHz. It is mainly used as an alternative to wire
connections.
","
Run the following commands to stop bluetooth.service, and remove the bluez
package:
# systemctl stop bluetooth.service
# zypper remove bluez
- OR -
- IF - the bluez package is required as a dependency:
Run the following commands to stop and mask bluetooth.service:
# systemctl stop bluetooth.service
# systemctl mask bluetooth.service
Note: A reboot may be required
",,TRUE
3.2.1,Ensure dccp kernel module is not available,"
The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that
supports streaming media and telephony. DCCP provides a way to gain access to
congestion control, without having to do it at the application layer, but does not provide
in-sequence delivery.
","
Run the following to unload and disable the dccp kernel module. This can also be done
by running the script included below.
Run the following commands to unload the dccp kernel module:
# modprobe -r dccp 2>/dev/null
# rmmod dccp 2>/dev/null
Perform the following to disable the dccp kernel module:
Create a file ending in .conf with install dccp /bin/false in the
/etc/modprobe.d/ directory
Example:
# printf '\n%s\n' ""install dccp /bin/false"" >> dccp.conf
Create a file ending in .conf with blacklist dccp in the /etc/modprobe.d/ directory
Example:
# printf '\n%s\n' ""blacklist dccp"" >> dccp.conf
",,TRUE
3.2.2,Ensure tipc kernel module is not available,"
The Transparent Inter-Process Communication (TIPC) protocol is designed to provide
communication between cluster nodes.
","
Run the following to unload and disable the tipc kernel module. This can also be done
by running the script included below.
Run the following commands to unload the tipc kernel module:
# modprobe -r tipc 2>/dev/null
# rmmod tipc 2>/dev/null
Perform the following to disable the tipc kernel module:
Create a file ending in .conf with install tipc /bin/false in the
/etc/modprobe.d/ directory
Example:
# printf '\n%s\n' ""install tipc /bin/false"" >> tipc.conf
Create a file ending in .conf with blacklist tipc in the /etc/modprobe.d/ directory
Example:
# printf '\n%s\n' ""blacklist tipc"" >> tipc.conf
",,TRUE
3.2.3,Ensure rds kernel module is not available,"
The Reliable Datagram Sockets (RDS) protocol is a transport layer protocol designed to
provide low-latency, high-bandwidth communications between cluster nodes. It was
developed by the Oracle Corporation.
","
Run the following to unload and disable the rds kernel module. This can also be done
by running the script included below.
Run the following commands to unload the rds kernel module:
# modprobe -r rds 2>/dev/null
# rmmod rds 2>/dev/null
Perform the following to disable the rds kernel module:
Create a file ending in .conf with install rds /bin/false in the /etc/modprobe.d/
directory
Example:
# printf '\n%s\n' ""install rds /bin/false"" >> rds.conf
Create a file ending in .conf with blacklist rds in the /etc/modprobe.d/ directory
Example:
# printf '\n%s\n' ""blacklist rds"" >> rds.conf
",,TRUE
3.2.4,Ensure sctp kernel module is not available,"
The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to
support message oriented communication, with several streams of messages in one
connection. It serves a similar function as TCP and UDP, incorporating features of both.
It is message-oriented like UDP, and ensures reliable in-sequence transport of
messages with congestion control like TCP.
","
Run the following to unload and disable the sctp kernel module. This can also be done
by running the script included below.
Run the following commands to unload the sctp kernel module:
# modprobe -r sctp 2>/dev/null
# rmmod sctp 2>/dev/null
Perform the following to disable the sctp kernel module:
Create a file ending in .conf with install sctp /bin/false in the
/etc/modprobe.d/ directory
Example:
# printf '\n%s\n' ""install sctp /bin/false"" >> sctp.conf
Create a file ending in .conf with blacklist sctp in the /etc/modprobe.d/ directory
Example:
# printf '\n%s\n' ""blacklist sctp"" >> sctp.conf
",,TRUE
3.3.1,Ensure ip forwarding is disabled,"
The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to
tell the system whether it can forward packets or not.
","
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.ip_forward = 0
Example:
# printf '%s\n' ""net.ipv4.ip_forward = 0"" >> /etc/sysctl.d/60-
netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.ip_forward=0
sysctl -w net.ipv4.route.flush=1
}
- IF - IPv6 is enabled on the system:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv6.conf.all.forwarding = 0
Example:
# printf '%s\n' ""net.ipv6.conf.all.forwarding = 0"" >> /etc/sysctl.d/60-
netipv6_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv6.conf.all.forwarding=0
sysctl -w net.ipv6.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.ip_forward = 0
net.ipv6.conf.all.forwarding = 0
",,TRUE
3.3.2,Ensure packet redirect sending is disabled,"
ICMP Redirects are used to send routing information to other hosts. As a host itself
does not act as a router (in a host only configuration), there is no need to send
redirects.
","
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.conf.all.send_redirects = 0
• net.ipv4.conf.default.send_redirects = 0
Example:
# printf '%s\n' ""net.ipv4.conf.all.send_redirects = 0""
""net.ipv4.conf.default.send_redirects = 0"" >> /etc/sysctl.d/60-
netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.conf.all.send_redirects=0
sysctl -w net.ipv4.conf.default.send_redirects=0
sysctl -w net.ipv4.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.conf.all.send_redirects = 1
net.ipv4.conf.default.send_redirects = 1
",,TRUE
3.3.3,Ensure bogus icmp responses are ignored,"
Setting net.ipv4.icmp_ignore_bogus_error_responses to 1 prevents the kernel
from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes,
keeping file systems from filling up with useless log messages.
","
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.icmp_ignore_bogus_error_responses = 1
Example:
# printf '%s\n' ""net.ipv4.icmp_ignore_bogus_error_responses = 1"" >>
/etc/sysctl.d/60-netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1
sysctl -w net.ipv4.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.icmp_ignore_bogus_error_responses = 1
",,TRUE
3.3.4,Ensure broadcast icmp requests are ignored,"
Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to
ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.
","
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.icmp_echo_ignore_broadcasts = 1
Example:
# printf '%s\n' ""net.ipv4.icmp_echo_ignore_broadcasts = 1"" >>
/etc/sysctl.d/60-netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1
sysctl -w net.ipv4.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.icmp_echo_ignore_broadcasts = 1
",,TRUE
3.3.5,Ensure icmp redirects are not accepted,"
ICMP redirect messages are packets that convey routing information and tell your host
(acting as a router) to send packets via an alternate path. It is a way of allowing an
outside routing device to update your system routing tables.
","
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.conf.all.accept_redirects = 0
• net.ipv4.conf.default.accept_redirects = 0
Example:
# printf '%s\n' ""net.ipv4.conf.all.accept_redirects = 0""
""net.ipv4.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-
netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.conf.all.accept_redirects=0
sysctl -w net.ipv4.conf.default.accept_redirects=0
sysctl -w net.ipv4.route.flush=1
}
- IF - IPv6 is enabled on the system:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv6.conf.all.accept_redirects = 0
• net.ipv6.conf.default.accept_redirects = 0
Example:
# printf '%s\n' ""net.ipv6.conf.all.accept_redirects = 0""
""net.ipv6.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-
netipv6_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv6.conf.all.accept_redirects=0
sysctl -w net.ipv6.conf.default.accept_redirects=0
sysctl -w net.ipv6.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.conf.all.accept_redirects = 1
net.ipv4.conf.default.accept_redirects = 1
net.ipv6.conf.all.accept_redirects = 1
net.ipv6.conf.default.accept_redirects = 1
",,TRUE
3.3.6,Ensure secure icmp redirects are not accepted,"
Secure ICMP redirects are the same as ICMP redirects, except they come from
gateways listed on the default gateway list. It is assumed that these gateways are
known to your system, and that they are likely to be secure.
","
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.conf.all.secure_redirects = 0
• net.ipv4.conf.default.secure_redirects = 0
Example:
# printf '%s\n' ""net.ipv4.conf.all.secure_redirects = 0""
""net.ipv4.conf.default.secure_redirects = 0"" >> /etc/sysctl.d/60-
netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.conf.all.secure_redirects=0
sysctl -w net.ipv4.conf.default.secure_redirects=0
sysctl -w net.ipv4.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.conf.all.secure_redirects = 1
net.ipv4.conf.default.secure_redirects = 1
",,TRUE
3.3.7,Ensure reverse path filtering is enabled,"
Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to
1 forces the Linux kernel to utilize reverse path filtering on a received packet to
determine if the packet was valid. Essentially, with reverse path filtering, if the return
packet does not go out the same interface that the corresponding source packet came
from, the packet is dropped (and logged if log_martians is set).
","
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.conf.all.rp_filter = 1
• net.ipv4.conf.default.rp_filter = 1
Example:
# printf '%s\n' ""net.ipv4.conf.all.rp_filter = 1""
""net.ipv4.conf.default.rp_filter = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.conf.all.rp_filter=1
sysctl -w net.ipv4.conf.default.rp_filter=1
sysctl -w net.ipv4.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.conf.all.rp_filter = 2
net.ipv4.conf.default.rp_filter = 1
",,TRUE
3.3.8,Ensure source routed packets are not accepted,"
In networking, source routing allows a sender to partially or fully specify the route
packets take through a network. In contrast, non-source routed packets travel a path
determined by routers in the network. In some cases, systems may not be routable or
reachable from some locations (e.g. private addresses vs. Internet routable), and so
source routed packets would need to be used.
","
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.conf.all.accept_source_route = 0
• net.ipv4.conf.default.accept_source_route = 0
Example:
# printf '%s\n' ""net.ipv4.conf.all.accept_source_route = 0""
""net.ipv4.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-
netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.conf.all.accept_source_route=0
sysctl -w net.ipv4.conf.default.accept_source_route=0
sysctl -w net.ipv4.route.flush=1
}
- IF - IPv6 is enabled on the system:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv6.conf.all.accept_source_route = 0
• net.ipv6.conf.default.accept_source_route = 0
Example:
# printf '%s\n' ""net.ipv6.conf.all.accept_source_route = 0""
""net.ipv6.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-
netipv6_sysctl.conf
Run the following command to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv6.conf.all.accept_source_route=0
sysctl -w net.ipv6.conf.default.accept_source_route=0
sysctl -w net.ipv6.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0
",,TRUE
3.3.9,Ensure suspicious packets are logged,"
When enabled, this feature logs packets with un-routable source addresses to the
kernel log.
","
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.conf.all.log_martians = 1
• net.ipv4.conf.default.log_martians = 1
Example:
# printf '%s\n' ""net.ipv4.conf.all.log_martians = 1""
""net.ipv4.conf.default.log_martians = 1"" >> /etc/sysctl.d/60-
netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.conf.all.log_martians=1
sysctl -w net.ipv4.conf.default.log_martians=1
sysctl -w net.ipv4.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.conf.all.log_martians = 0
net.ipv4.conf.default.log_martians = 0
",,TRUE
3.3.10,Ensure tcp syn cookies is enabled,"
When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until
the half-open connection queue is full, at which time, the SYN cookie functionality kicks
in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply
replies to the SYN with a SYN/ACK, but will include a specially crafted TCP sequence
number that encodes the source and destination IP address and port number and the
time the packet was sent. A legitimate connection would send the ACK packet of the
three way handshake with the specially crafted sequence number. This allows the
system to verify that it has received a valid response to a SYN cookie and allow the
connection, even though there is no corresponding SYN in the queue.
","
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.tcp_syncookies = 1
Example:
# printf '%s\n' ""net.ipv4.tcp_syncookies = 1"" >> /etc/sysctl.d/60-
netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.tcp_syncookies=1
sysctl -w net.ipv4.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.tcp_syncookies = 1
",,TRUE
3.3.11,Ensure ipv6 router advertisements are not accepted,"
Routers periodically multicast Router Advertisement messages to announce their
availability and convey information to neighboring nodes that enable them to be
automatically configured on the network.
net.ipv6.conf.all.accept_ra and net.ipv6.conf.default.accept_ra determine
the systems ability to accept these advertisements
","
- IF - IPv6 is enabled on the system:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv6.conf.all.accept_ra = 0
• net.ipv6.conf.default.accept_ra = 0
Example:
# printf '%s\n' ""net.ipv6.conf.all.accept_ra = 0""
""net.ipv6.conf.default.accept_ra = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv6.conf.all.accept_ra=0
sysctl -w net.ipv6.conf.default.accept_ra=0
sysctl -w net.ipv6.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv6.conf.all.accept_ra = 1
net.ipv6.conf.default.accept_ra = 1
",,TRUE
4.1.1,Ensure a single firewall configuration utility is in use,"
In Linux security, employing a single, effective firewall configuration utility ensures that
only legitimate traffic gets processed, reducing the system’s exposure to potential
threats.
","
Remediating to a single firewall configuration is a complex process and involves several
steps. The following provides the basic steps to follow for a single firewall configuration:
1. Determine which firewall utility best fits organizational needs
2. If you are upgrading from a release older than SUSE Linux Enterprise Server 15
GA, SuSEfirewall2 will be unchanged and you must manually upgrade to
firewalld
3. Return to this recommendation to ensure a single firewall configuration utility is in
use
",,TRUE
4.2.1,Ensure firewalld is installed,"
firewalld provides a dynamically managed firewall with support for network/firewall
zones to define the trust level of network connections or interfaces. It has support for
IPv4, IPv6 firewall settings and for ethernet bridges and has a separation of runtime and
permanent configuration options. It also supports an interface for services or
applications to add firewall rules directly.
","
Run the following command to install firewalld:
# zypper install firewalld
Note: If you are upgrading from a release older than SUSE Linux Enterprise Server 15
GA, SuSEfirewall2 will be unchanged and you must manually upgrade to firewalld.
",,TRUE
4.2.3,Ensure firewalld loopback traffic is configured,"
Configure the loopback interface to accept traffic. Configure all other interfaces to deny
traffic to the loopback network
","
Run the following script to implement the loopback rules:
#!/usr/bin/env bash
{ l_hbfw=""""
if systemctl is-enabled firewalld.service | grep -q 'enabled'; then
echo -e ""\n - FirewallD is in use on the system"" && l_hbfw=""fwd""
elif systemctl is-enabled nftables.service 2>/dev/null | grep -q 'enabled'; then
echo -e ""\n - nftables is in use on the system \n - Recommendation is NA \n -
Remediation Complete"" && l_hbfw=""nft""
fi
if [ ""$l_hbfw"" = ""fwd"" ]; then
l_ipsaddr=""$(nft list ruleset | awk
'/filter_IN_public_deny|hook\s+input\s+/,/\}\s*(#.*)?$/' | grep -P -- 'ip\h+saddr')""
if ! nft list ruleset | awk '/hook\s+input\s+/,/\}\s*(#.*)?$/' | grep -Pq --
'\H+\h+""lo""\h+accept'; then
echo -e ""\n - Enabling input to accept for loopback address""
firewall-cmd --permanent --zone=trusted --add-interface=lo
firewall-cmd --reload
else
echo -e ""\n - firewalld input correctly set to accept for loopback address""
if ! grep -Pq --
'ip\h+saddr\h+127\.0\.0\.0\/8\h+(counter\h+packets\h+\d+\h+bytes\h+\d+\h+)?drop' <<<
""$l_ipsaddr"" && ! grep -Pq --
'ip\h+daddr\h+\!\=\h+127\.0\.0\.1\h+ip\h+saddr\h+127\.0\.0\.1\h+drop' <<<
""$l_ipsaddr""; then
echo -e ""\n - Setting IPv4 network traffic from loopback address to drop""
firewall-cmd --permanent --add-rich-rule='rule family=ipv4 source
address=""127.0.0.1"" destination not address=""127.0.0.1"" drop'
firewall-cmd --permanent --zone=trusted --add-rich-rule='rule family=ipv4
source address=""127.0.0.1"" destination not address=""127.0.0.1"" drop'
firewall-cmd --reload
else
echo -e ""\n - firewalld correctly set IPv4 network traffic from loopback
address to drop""
fi
if grep -Pq -- '^\h*0\h*$' /sys/module/ipv6/parameters/disable; then
l_ip6saddr=""$(nft list ruleset | awk '/filter_IN_public_deny|hook
input/,/}/' | grep 'ip6 saddr')""
if ! grep -Pq
'ip6\h+saddr\h+::1\h+(counter\h+packets\h+\d+\h+bytes\h+\d+\h+)?drop' <<<
""$l_ip6saddr"" && ! grep -Pq -- 'ip6\h+daddr\h+\!=\h+::1\h+ip6\h+saddr\h+::1\h+drop'
<<< ""$l_ip6saddr""; then
echo -e ""\n - Setting IPv6 network traffic from loopback address to
drop""
firewall-cmd --permanent --add-rich-rule='rule family=ipv6 source
address=""::1"" destination not address=""::1"" drop'
firewall-cmd --permanent --zone=trusted --add-rich-rule='rule
family=ipv6 source address=""::1"" destination not address=""::1"" drop'
firewall-cmd --reload
else
echo -e ""\n - firewalld correctly set IPv6 network traffic from
loopback address to drop""
fi
fi
fi
fi
}
",,TRUE
4.2.4,Ensure default zone is set,"
A firewall zone defines the trust level for a connection, interface or source address
binding. This is a one to many relation, which means that a connection, interface or
source can only be part of one zone, but a zone can be used for many network
connections, interfaces and sources.
The default zone is the zone that is used for everything that is not explicitly
bound/assigned to another zone. If no zone assigned to a connection, interface or
source, only the default zone is used. The default zone is not always listed as being
used for an interface or source as it will be used for it either way. This depends on the
manager of the interfaces. Connections handled by NetworkManager are listed as
NetworkManager requests to add the zone binding for the interface used by the
connection. Also interfaces under control of the network service are listed also because
the service requests it.
Note:
• A firewalld zone configuration file contains the information for a zone.
o These are the zone description, services, ports, protocols, icmp-blocks,
masquerade, forward-ports and rich language rules in an XML file format.
o The file name has to be zone_name.xml where length of zone_name is
currently limited to 17 chars.
• NetworkManager binds interfaces to zones automatically
","
Run the following command to set the default zone:
# firewall-cmd --set-default-zone=<NAME_OF_ZONE>
Example:
# firewall-cmd --set-default-zone=public
",,TRUE
4.2.5,Ensure firewalld service is enabled and running,"
firewalld.service enables the enforcement of firewall rules configured through
firewalld
","
Run the following command to unmask firewalld
# systemctl unmask firewalld
Run the following command to enable and start firewalld
# systemctl --now enable firewalld
",,TRUE
5.1.1,Ensure access to /etc/ssh/sshd_config is configured,"
The file /etc/ssh/sshd_config, and files ending in .conf in the
/etc/ssh/sshd_config.d directory, contain configuration specifications for sshd.
","
Run the following script to set ownership and permissions on /etc/ssh/sshd_config
and files ending in .conf in the /etc/ssh/sshd_config.d directory:
#!/usr/bin/env bash
{
chmod u-x,og-rwx /etc/ssh/sshd_config
chown root:root /etc/ssh/sshd_config
while IFS= read -r -d $'\0' l_file; do
if [ -e ""$l_file"" ]; then
chmod u-x,og-rwx ""$l_file""
chown root:root ""$l_file""
fi
done < <(find /etc/ssh/sshd_config.d -type f -print0 2>/dev/null)
}
- IF - other locations are listed in an Include statement, *.conf files in these locations
access should also be modified.
",,TRUE
5.1.2,Ensure access to SSH private host key files is configured,"
An SSH private key is one of two files used in SSH public key authentication. In this
authentication method, the possession of the private key is proof of identity. Only a
private key that corresponds to a public key will be able to authenticate successfully.
The private keys need to be stored and handled carefully, and no copies of the private
key should be distributed.
","
Run the following script to set mode, ownership, and group on the private SSH host key
files:
Page 508
#!/usr/bin/env bash
{
a_output=(); a_output2=(); l_ssh_group_name=""$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/)
{print $1}' /etc/group)""
f_file_access_fix()
{
while IFS=: read -r l_file_mode l_file_owner l_file_group; do
a_out2=()
[ ""$l_file_group"" = ""$l_ssh_group_name"" ] && l_pmask=""0137"" || l_pmask=""0177""
l_maxperm=""$( printf '%o' $(( 0777 & ~$l_pmask )) )""
if [ $(( $l_file_mode & $l_pmask )) -gt 0 ]; then
a_out2+=("" Mode: \""$l_file_mode\"" should be mode: \""$l_maxperm\"" or
more restrictive"" \
"" updating to mode: \:$l_maxperm\"""")
if [ ""l_file_group"" = ""$l_ssh_group_name"" ]; then
chmod u-x,g-wx,o-rwx ""$l_file""
else
chmod u-x,go-rwx ""$l_file""
fi
fi
if [ ""$l_file_owner"" != ""root"" ]; then
a_out2+=("" Owned by: \""$l_file_owner\"" should be owned by \""root\"""" \
"" Changing ownership to \""root\"""")
chown root ""$l_file""
fi
if [[ ! ""$l_file_group"" =~ ($l_ssh_group_name|root) ]]; then
[ -n ""$l_ssh_group_name"" ] && l_new_group=""$l_ssh_group_name"" ||
l_new_group=""root""
a_out2+=("" Owned by group \""$l_file_group\"" should be group owned by:
\""$l_ssh_group_name\"" or \""root\"""" \
"" Changing group ownership to \""$l_new_group\"""")
chgrp ""$l_new_group"" ""$l_file""
fi
if [ ""${#a_out2[@]}"" -gt ""0"" ]; then
a_output2+=("" - File: \""$l_file\"""" ""${a_out2[@]}"")
else
a_output+=("" - File: \""$l_file\"""" \
""Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"", and group
owner: \""$l_file_group\"" configured"")
fi
done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
}
while IFS= read -r -d $'\0' l_file; do
if ssh-keygen -lf &>/dev/null ""$l_file""; then
file ""$l_file"" | grep -Piq -- '\bopenssh\h+([^#\n\r]+\h+)?private\h+key\b' &&
f_file_access_fix
fi
done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
if [ ""${#a_output2[@]}"" -le ""0"" ]; then
printf '%s\n' """" "" - No access changes required"" """"
else
printf '%s\n' """" "" - Remediation results:"" ""${a_output2[@]}"" """"
fi
}
",,TRUE
5.1.3,Ensure access to SSH public host key files is configured,"
An SSH public key is one of two files used in SSH public key authentication. In this
authentication method, a public key is a key that can be used for verifying digital
signatures generated using a corresponding private key. Only a public key that
corresponds to a private key will be able to authenticate successfully.
","
Run the following script to set mode, ownership, and group on the public SSH host key
files:
#!/usr/bin/env bash
{
a_output=(); a_output2=()
l_pmask=""0133""; l_maxperm=""$( printf '%o' $(( 0777 & ~$l_pmask )) )""
f_file_access_fix()
{
while IFS=: read -r l_file_mode l_file_owner l_file_group; do
a_out2=()
[ $(( $l_file_mode & $l_pmask )) -gt 0 ] && \
a_out2+=("" Mode: \""$l_file_mode\"" should be mode:
\""$l_maxperm\"" or more restrictive"" \
"" updating to mode: \""$l_maxperm\"""") && chmod u-x,go-wx
""$l_file""
[ ""$l_file_owner"" != ""root"" ] && \
a_out2+=("" Owned by: \""$l_file_owner\"" should be owned by
\""root\"""" \
"" Changing ownership to \""root\"""") && chown root ""$l_file""
[ ""$l_file_group"" != ""root"" ] && \
a_out2+=("" Owned by group \""$l_file_group\"" should be group
owned by: \""root\"""" \
"" Changing group ownership to \""root\"""") && chgrp root
""$l_file""
if [ ""${#a_out2[@]}"" -gt ""0"" ]; then
a_output2+=("" - File: \""$l_file\"""" ""${a_out2[@]}"")
else
a_output+=("" - File: \""$l_file\"""" \
"" Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"",
and group owner: \""$l_file_group\"" configured"")
fi
done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
}
while IFS= read -r -d $'\0' l_file; do
if ssh-keygen -lf &>/dev/null ""$l_file""; then
file ""$l_file"" | grep -Piq --
'\bopenssh\h+([^#\n\r]+\h+)?public\h+key\b' && f_file_access_fix
fi
done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
if [ ""${#a_output2[@]}"" -le ""0"" ]; then
printf '%s\n' """" "" - No access changes required"" """"
else
printf '%s\n' "" - Remediation results:"" ""${a_output2[@]}"" """"
fi
}
Default Value:
644 0/root 0/root
",,TRUE
5.1.4,Ensure sshd Ciphers are configured,"
This variable limits the ciphers that SSH can use during communication.
","
Edit the /etc/ssh/sshd_config file and add/modify the Ciphers line to contain a comma
separated list of the site unapproved (weak) Ciphers preceded with a - above any
Include entries:
Example:
Ciphers -3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc,chacha20-
poly1305@openssh.com
- IF - CVE-2023-48795 has been addressed, and it meets local site policy, chacha20-
poly1305@openssh.com may be removed from the list of excluded ciphers.
Note: First occurrence of an option takes precedence. If Include locations are enabled,
used, and order of precedence is understood in your environment, the entry may be
created in a file in Include location.
Default Value:
Ciphers chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-
gcm@openssh.com,aes256-gcm@openssh.com
",,TRUE
5.1.5,Ensure sshd KexAlgorithms is configured,"
Key exchange is any method in cryptography by which cryptographic keys are
exchanged between two parties, allowing use of a cryptographic algorithm. If the sender
and receiver wish to exchange encrypted messages, each must be equipped to encrypt
messages to be sent and decrypt messages received
Notes:
• Kex algorithms have a higher preference the earlier they appear in the list
• Some organizations may have stricter requirements for approved Key exchange
algorithms
• Ensure that Key exchange algorithms used are in compliance with site policy
• The only Key Exchange Algorithms currently FIPS 140 approved are:
o ecdh-sha2-nistp256
o ecdh-sha2-nistp384
o ecdh-sha2-nistp521
o diffie-hellman-group-exchange-sha256
o diffie-hellman-group16-sha512
o diffie-hellman-group18-sha512
o diffie-hellman-group14-sha256
","
Edit the /etc/ssh/sshd_config file and add/modify the KexAlgorithms line to contain
a comma separated list of the site unapproved (weak) KexAlgorithms preceded with a -
above any Include entries:
Example:
KexAlgorithms -diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-
hellman-group-exchange-sha1
Note: First occurrence of an option takes precedence. If Include locations are enabled,
used, and order of precedence is understood in your environment, the entry may be
created in a file in Include location.
Default Value:
KexAlgorithms sntrup761x25519-sha512@openssh.com,curve25519-
sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-
sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-
sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256
",,TRUE
5.1.6,Ensure sshd MACs are configured,"
This variable limits the types of MAC algorithms that SSH can use during
communication.
Notes:
• Some organizations may have stricter requirements for approved MACs.
• Ensure that MACs used are in compliance with site policy.
• The only ""strong"" MACs currently FIPS 140 approved are:
o HMAC-SHA1
o HMAC-SHA2-256
o HMAC-SHA2-384
o HMAC-SHA2-512
","
Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma
separated list of the site unapproved (weak) MACs preceded with a - above any
Include entries:
Example:
MACs -hmac-md5,hmac-md5-96,hmac-ripemd160,hmac-sha1-96,umac-
64@openssh.com,hmac-md5-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-
ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,umac-64-
etm@openssh.com
- IF - CVE-2023-48795 has not been reviewed and addressed, the following etm MACs
should be added to the exclude list: hmac-sha1-etm@openssh.com,hmac-sha2-256-
etm@openssh.com,hmac-sha2-512-etm@openssh.com
Note: First occurrence of an option takes precedence. If Include locations are enabled,
used, and order of precedence is understood in your environment, the entry may be
created in a file in Include location.
Default Value:
MACs umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-
etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-
etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-
256,hmac-sha2-512,hmac-sha1
",,TRUE
5.1.7,Ensure sshd access is configured,"
There are several options available to limit which users and group can access the
system via SSH. It is recommended that at least one of the following options be
leveraged:
• AllowUsers:
o The AllowUsers variable gives the system administrator the option of
allowing specific users to ssh into the system. The list consists of space
separated user names. Numeric user IDs are not recognized with this
variable. If a system administrator wants to restrict user access further by
only allowing the allowed users to log in from a particular host, the entry
can be specified in the form of user@host.
• AllowGroups:
o The AllowGroups variable gives the system administrator the option of
allowing specific groups of users to ssh into the system. The list consists
of space separated group names. Numeric group IDs are not recognized
with this variable.
• DenyUsers:
o The DenyUsers variable gives the system administrator the option of
denying specific users to ssh into the system. The list consists of space
separated user names. Numeric user IDs are not recognized with this
variable. If a system administrator wants to restrict user access further by
specifically denying a user's access from a particular host, the entry can
be specified in the form of user@host.
• DenyGroups:
o The DenyGroups variable gives the system administrator the option of
denying specific groups of users to ssh into the system. The list consists
of space separated group names. Numeric group IDs are not recognized
with this variable.
","
Edit the /etc/ssh/sshd_config file to set one or more of the parameters above any
Include and Match set statements as follows:
AllowUsers <userlist>
- AND/OR -
AllowGroups <grouplist>
Note:
• First occurrence of a option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a .conf file in a
Include directory.
• Be advised that these options are ""ANDed"" together. If both AllowUsers and
AllowGroups are set, connections will be limited to the list of users that are also
a member of an allowed group. It is recommended that only one be set for clarity
and ease of administration.
• It is easier to manage an allow list than a deny list. In a deny list, you could
potentially add a user or group and forget to add it to the deny list.
Default Value:
None
",,TRUE
5.1.8,Ensure sshd Banner is configured,"
The Banner parameter specifies a file whose contents must be sent to the remote user
before authentication is permitted. By default, no banner is displayed.
","
Edit the /etc/ssh/sshd_config file to set the Banner parameter above any Include
and Match entries as follows:
Banner /etc/issue.net
Note: First occurrence of a option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Edit the file being called by the Banner argument with the appropriate contents
according to your site policy, remove any instances of \m , \r , \s , \v or references to
the OS platform
Example:
# printf '%s\n' ""Authorized users only. All activity may be monitored and
reported."" > ""$(sshd -T | awk '$1 == ""banner"" {print $2}')""
",,TRUE
5.1.9,Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured,"
Note: To clarify, the two settings described below are only meant for idle connections
from a protocol perspective and are not meant to check if the user is active or not. An
idle user does not mean an idle connection. SSH does not and never had, intentionally,
the capability to drop idle users. In SSH versions before 8.2p1 there was a bug that
caused these values to behave in such a manner that they were abused to disconnect
idle users. This bug has been resolved in 8.2p1 and thus it can no longer be abused
disconnect idle users.
The two options ClientAliveInterval and ClientAliveCountMax control the timeout
of SSH sessions. Taken directly from man 5 sshd_config:
• ClientAliveInterval Sets a timeout interval in seconds after which if no data
has been received from the client, sshd(8) will send a message through the
encrypted channel to request a response from the client. The default is 0,
indicating that these messages will not be sent to the client.
• ClientAliveCountMax Sets the number of client alive messages which may be
sent without sshd(8) receiving any messages back from the client. If this
threshold is reached while client alive messages are being sent, sshd will
disconnect the client, terminating the session. It is important to note that the use
of client alive messages is very different from TCPKeepAlive. The client alive
messages are sent through the encrypted channel and therefore will not be
spoofable. The TCP keepalive option en‐abled by TCPKeepAlive is spoofable.
The client alive mechanism is valuable when the client or server depend on
knowing when a connection has become unresponsive. The default value is 3. If
ClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default,
unresponsive SSH clients will be disconnected after approximately 45 seconds.
Setting a zero ClientAliveCountMax disables connection termination.
","
Edit the /etc/ssh/sshd_config file to set the ClientAliveInterval and
ClientAliveCountMax parameters above any Include and Match entries according to
site policy.
Example:
ClientAliveInterval 15
ClientAliveCountMax 3
Note: First occurrence of a option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Page 531
Default Value:
ClientAliveInterval 0
ClientAliveCountMax 3
",,TRUE
5.1.10,Ensure sshd DisableForwarding is enabled,"
The DisableForwarding parameter disables all forwarding features, including X11,
ssh-agent(1), TCP and StreamLocal. This option overrides all other forwarding-related
options and may simplify restricted configurations.
• X11Forwarding provides the ability to tunnel X11 traffic through the connection to
enable remote graphic connections.
• ssh-agent is a program to hold private keys used for public key authentication.
Through use of environment variables the agent can be located and
automatically used for authentication when logging in to other machines using
ssh.
• SSH port forwarding is a mechanism in SSH for tunneling application ports from
the client to the server, or servers to clients. It can be used for adding encryption
to legacy applications, going through firewalls, and some system administrators
and IT professionals use it for opening backdoors into the internal network from
their home machines.
","
Edit the /etc/ssh/sshd_config file to set the DisableForwarding parameter to yes
above any Include entry as follows:
DisableForwarding yes
Note: First occurrence of a option takes precedence. If Include locations are enabled,
used, and order of precedence is understood in your environment, the entry may be
created in a file in Include location.
",,TRUE
5.1.11,Ensure sshd GSSAPIAuthentication is disabled,"
The GSSAPIAuthentication parameter specifies whether user authentication based on
GSSAPI is allowed
","
Edit the /etc/ssh/sshd_config file to set the GSSAPIAuthentication parameter to
no above any Include and Match entries as follows:
GSSAPIAuthentication no
Note: First occurrence of an option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location
Default Value:
GSSAPIAuthentication no
",,TRUE
5.1.12,Ensure sshd HostbasedAuthentication is disabled,"
The HostbasedAuthentication parameter specifies if authentication is allowed
through trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with
successful public key client host authentication.
","
Edit the /etc/ssh/sshd_config file to set the HostbasedAuthentication parameter
to no above any Include and Match entries as follows:
HostbasedAuthentication no
Note: First occurrence of a option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Default Value:
HostbasedAuthentication no
",,TRUE
5.1.13,Ensure sshd IgnoreRhosts is enabled,"
The IgnoreRhosts parameter specifies that .rhosts and .shosts files will not be used
in RhostsRSAAuthentication or HostbasedAuthentication.
","
Edit the /etc/ssh/sshd_config file to set the IgnoreRhosts parameter to yes above
any Include and Match entries as follows:
IgnoreRhosts yes
Note: First occurrence of a option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Default Value:
IgnoreRhosts yes
",,TRUE
5.1.14,Ensure sshd LoginGraceTime is configured,"
The LoginGraceTime parameter specifies the time allowed for successful
authentication to the SSH server. The longer the Grace period is the more open
unauthenticated connections can exist. Like other session controls in this session the
Grace Period should be limited to appropriate organizational limits to ensure the service
is available for needed access.
","
Edit the /etc/ssh/sshd_config file to set the LoginGraceTime parameter to 60
seconds or less above any Include entry as follows:
LoginGraceTime 60
Note: First occurrence of a option takes precedence. If Include locations are enabled,
used, and order of precedence is understood in your environment, the entry may be
created in a file in Include location.
Default Value:
LoginGraceTime 120
",,TRUE
5.1.15,Ensure sshd LogLevel is configured,"
SSH provides several logging levels with varying amounts of verbosity. The DEBUG
options are specifically not recommended other than strictly for debugging SSH
communications. These levels provide so much data that it is difficult to identify
important security information, and may violate the privacy of users.
","
Edit the /etc/ssh/sshd_config file to set the LogLevel parameter to VERBOSE or
INFO above any Include and Match entries as follows:
LogLevel VERBOSE
- OR -
LogLevel INFO
Note: First occurrence of an option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Default Value:
LogLevel INFO
",,TRUE
5.1.16,Ensure sshd MaxAuthTries is configured,"
The MaxAuthTries parameter specifies the maximum number of authentication
attempts permitted per connection. When the login failure count reaches half the
number, error messages will be written to the syslog file detailing the login failure.
","
Edit the /etc/ssh/sshd_config file to set the MaxAuthTries parameter to 4 or less
above any Include and Match entries as follows:
MaxAuthTries 4
Note: First occurrence of an option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Default Value:
MaxAuthTries 6
",,TRUE
5.1.17,Ensure sshd MaxStartups is configured,"
The MaxStartups parameter specifies the maximum number of concurrent
unauthenticated connections to the SSH daemon.
","
Edit the /etc/ssh/sshd_config file to set the MaxStartups parameter to 10:30:60 or
more restrictive above any Include entries as follows:
MaxStartups 10:30:60
Note: First occurrence of a option takes precedence. If Include locations are enabled,
used, and order of precedence is understood in your environment, the entry may be
created in a file in Include location.
Default Value:
MaxStartups 10:30:100
",,TRUE
5.1.18,Ensure sshd MaxSessions is configured,"
The MaxSessions parameter specifies the maximum number of open sessions
permitted from a given connection.
","
Edit the /etc/ssh/sshd_config file to set the MaxSessions parameter to 10 or less
above any Include and Match entries as follows:
MaxSessions 10
Note: First occurrence of an option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Default Value:
MaxSessions 10
",,TRUE
5.1.19,Ensure sshd PermitEmptyPasswords is disabled,"
The PermitEmptyPasswords parameter specifies if the SSH server allows login to
accounts with empty password strings.
","
Edit /etc/ssh/sshd_config and set the PermitEmptyPasswords parameter to no
above any Include and Match entries as follows:
PermitEmptyPasswords no
Note: First occurrence of an option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Default Value:
PermitEmptyPasswords no
",,TRUE
5.1.20,Ensure sshd PermitRootLogin is disabled,"
The PermitRootLogin parameter specifies if the root user can log in using SSH. The
default is prohibit-password.
","
Edit the /etc/ssh/sshd_config file to set the PermitRootLogin parameter to no
above any Include and Match entries as follows:
PermitRootLogin no
Note: First occurrence of an option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Default Value:
PermitRootLogin without-password
",,TRUE
5.1.21,Ensure sshd PermitUserEnvironment is disabled,"
The PermitUserEnvironment option allows users to present environment options to
the SSH daemon.
","
Edit the /etc/ssh/sshd_config file to set the PermitUserEnvironment parameter to
no above any Include entries as follows:
PermitUserEnvironment no
Note: First occurrence of an option takes precedence. If Include locations are enabled,
used, and order of precedence is understood in your environment, the entry may be
created in a file in Include location.
Default Value:
PermitUserEnvironment no
",,TRUE
5.1.22,Ensure sshd UsePAM is enabled,"
The UsePAM directive enables the Pluggable Authentication Module (PAM) interface. If
set to yes this will enable PAM authentication using
ChallengeResponseAuthentication and PasswordAuthentication directives in
addition to PAM account and session module processing for all authentication types.
","
Edit the /etc/ssh/sshd_config file to set the UsePAM parameter to yes above any
Include entries as follows:
UsePAM yes
Note: First occurrence of an option takes precedence. If Include locations are enabled,
used, and order of precedence is understood in your environment, the entry may be
created in a file in Include location.
Default Value:
UsePAM yes
",,TRUE
5.2.1,Ensure sudo is installed,"
sudo allows a permitted user to execute a command as the superuser or another user,
as specified by the security policy. The invoking user's real (not effective) user ID is
used to determine the user name with which to query the security policy.
","
Run the following command to install sudo:
# zypper install sudo
",,TRUE
5.2.2,Ensure sudo commands use pty,"
sudo can be configured to run only from a pseudo terminal (pseudo-pty).
","
Edit the file /etc/sudoers with visudo or a file in /etc/sudoers.d/ with visudo -f
<PATH TO FILE> and add the following line:
Defaults use_pty
Edit the file /etc/sudoers with visudo and any files in /etc/sudoers.d/ with visudo
-f <PATH TO FILE> and remove any occurrence of !use_pty
Note:
• sudo will read each file in /etc/sudoers.d, skipping file names that end in ~ or
contain a . character to avoid causing problems with package manager or editor
temporary/backup files.
• Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will
be parsed before /etc/sudoers.d/10_second.
• Be aware that because the sorting is lexical, not numeric,
/etc/sudoers.d/1_whoops would be loaded after
/etc/sudoers.d/10_second.
• Using a consistent number of leading zeroes in the file names can be used to
avoid such problems.
",,TRUE
5.2.3,Ensure sudo log file exists,"
The Defaults logfile entry sets the path to the sudo log file. Setting a path turns on
logging to a file; negating this option turns it off. By default, sudo logs via syslog.
","
Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo -f <PATH TO
FILE> and add the following line:
Defaults logfile=""<PATH TO CUSTOM LOG FILE>""
Example
Defaults logfile=""/var/log/sudo.log""
Notes:
• sudo will read each file in /etc/sudoers.d, skipping file names that end in ~ or
contain a . character to avoid causing problems with package manager or editor
temporary/backup files.
• Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will
be parsed before /etc/sudoers.d/10_second.
• Be aware that because the sorting is lexical, not numeric,
/etc/sudoers.d/1_whoops would be loaded after
/etc/sudoers.d/10_second.
• Using a consistent number of leading zeroes in the file names can be used to
avoid such problems.
",,TRUE
5.2.4,Ensure users must provide password for escalation,"
The operating system must be configured so that users must provide a password for
privilege escalation.
","
Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit
the relevant sudoers file.
Remove any line with occurrences of NOPASSWD tags in the file.
",,TRUE
5.2.5,Ensure re-authentication for privilege escalation is not disabled globally,"
The operating system must be configured so that users must re-authenticate for
privilege escalation.
","
Configure the operating system to require users to reauthenticate for privilege
escalation.
Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit
the relevant sudoers file.
Remove any occurrences of !authenticate tags in the file(s).
",,TRUE
5.2.6,Ensure sudo authentication timeout is configured correctly,"
sudo caches used credentials for a default of 5 minutes. This is for ease of use when
there are multiple administrative tasks to perform. The timeout can be modified to suit
local security policies.
","
If the currently configured timeout is larger than 15 minutes, edit the file listed in the
audit section with visudo -f <PATH TO FILE> and modify the entry
timestamp_timeout= to 15 minutes or less as per your site policy. The value is in
minutes. This particular entry may appear on its own, or on the same line as
env_reset. See the following two examples:
Defaults env_reset, timestamp_timeout=15
Defaults timestamp_timeout=15
Defaults env_reset
",,TRUE
5.2.7,Ensure access to the su command is restricted,"
The su command allows a user to run a command or shell as another user. The
program has been superseded by sudo, which allows for more granular control over
privileged access. Normally, the su command can be executed by any user. By
uncommenting the pam_wheel.so statement in /etc/pam.d/su, the su command will
only allow users in a specific groups to execute su. This group should be empty to
reinforce the use of sudo for privileged access.
","
Create an empty group that will be specified for use of the su command. The group
should be named according to site policy.
Example:
# groupadd sugroup
Add the following line to both the /etc/pam.d/su and /etc/pam.d/su-l files,
specifying the empty group:
auth required pam_wheel.so use_uid group=sugroup
",,TRUE
5.3.1.1,Ensure latest version of pam is installed,"
Updated versions of PAM include additional functionality
","
Run the following command to update to the latest version of PAM:
# zypper update pam
",,TRUE
5.3.2.1.1,Ensure password failed attempts lockout is configured,"
The deny=<n> option will deny access if the number of consecutive authentication
failures for this user during the recent interval exceeds.
","
Create or edit the following line in /etc/security/faillock.conf setting the deny
option to 5 or less:
deny = 5
Default Value:
deny = 3
",,TRUE
5.3.2.1.2,Ensure password unlock time is configured,"
unlock_time=<n> - The access will be re-enabled after seconds after the lock out. The
value 0 has the same meaning as value never - the access will not be re-enabled
without resetting the faillock entries by the faillock(8) command.
","
Set password unlock time to conform to site policy. unlock_time should be 0 (never),
or 900 seconds or greater.
Edit /etc/security/faillock.conf file and update or add the following line:
unlock_time = 900
Default Value:
unlock_time = 600
",,TRUE
5.3.2.1.3,Ensure password failed attempts lockout includes root account,"
even_deny_root - Root account can become locked as well as regular accounts.

root_unlock_time=n - This option implies even_deny_root option. Allow access after
n seconds to root account after the account is locked. In case the option is not specified
the value is the same as of the unlock_time option.
","
Edit /etc/security/faillock.conf file:
• Remove or update any line containing root_unlock_time, - OR - set it to a
value of 60 or more
• Update or add the following line:
even_deny_root
Default Value:
disabled
",,TRUE
5.3.2.2.1,Ensure password dictionary check is enabled,"
The pwquality dictcheck option sets whether to check for the words from the
cracklib dictionary.
","
Edit any file ending in .conf in the /etc/security/pwquality.conf.d/ directory
and/or the file /etc/security/pwquality.conf and comment out or remove any
instance of dictcheck = 0:
Example:
# sed -ri 's/^\s*dictcheck\s*=/# &/' /etc/security/pwquality.conf
/etc/security/pwquality.conf.d/*.conf
- OR/IF - the pam-config tool has been used to configure the global PAM configuration
files.
Run the following command to enable dictcheck:
# pam-config -a --cracklib
Default Value:
dictcheck = 1
",,TRUE
5.3.2.2.2,Ensure password number of changed characters is configured,"
The pwquality difok option sets the number of characters in a password that must not
be present in the old password.
","
Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/
directory or the file /etc/security/pwquality.conf and add or modify the following
line to set difok to 2 or more. Ensure setting conforms to local site policy:
difok = 2
Example:
# sed -ri 's/^\s*difok\s*=/# &/' /etc/security/pwquality.conf
# printf '\n%s' ""difok = 2"" >> /etc/security/pwquality.conf.d/50-pwdifok.conf
- OR - If the pam-config tool has been used to configure the global PAM configuration
files:
Run the following command to add the difok option to 2 or more and follows local site
policy
# pam-config -a --cracklib-difok=2
Note:
• The difok option maybe set to 2 or more and depending on local site policy.
• Best practice for updating pam modules is to configure settings in a .conf file in
the /etc/security/pwquality.conf.d/ directory or
/etc/security/pwquality.conf
Default Value:
difok = 1
",,TRUE
5.3.2.2.3,Ensure password length is configured,"
minlen - Minimum acceptable size for the new password (plus one if credits are not
disabled which is the default). Cannot be set to lower value than 6.
","
Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/
directory or the file /etc/security/pwquality.conf and add or modify the following
line to set minlen to 14 or more. Ensure that password setting conforms to local site
policy:
minlen=14
Example:
# sed -ri 's/^\s*minlen\s*=/# &/' /etc/security/pwquality.conf
# printf '\n%s' ""minlen = 14"" >> /etc/security/pwquality.conf.d/50-
pwlength.conf
- OR/IF - the pam-config tool has been used to configure the global PAM configuration
files.
Run the following command to set password length of 14 or more characters. Ensure
that password length conforms to local site policy:
# pam-config -a --cracklib-minlen=14
Default Value:
minlen = 8
",,TRUE
5.3.2.2.4,Ensure password complexity is configured,"
Password complexity can be set through:
• minclass - The minimum number of classes of characters required in a new
password. (digits, uppercase, lowercase, others). e.g. minclass = 4 requires
digits, uppercase, lower case, and special characters.
• dcredit - The maximum credit for having digits in the new password. If less than
0 it is the minimum number of digits in the new password. e.g. dcredit = -1
requires at least one digit
• ucredit - The maximum credit for having uppercase characters in the new
password. If less than 0 it is the minimum number of uppercase characters in the
new password. e.g. ucredit = -1 requires at least one uppercase character
• ocredit - The maximum credit for having other characters in the new password.
If less than 0 it is the minimum number of other characters in the new password.
e.g. ocredit = -1 requires at least one special character
• lcredit - The maximum credit for having lowercase characters in the new
password. If less than 0 it is the minimum number of lowercase characters in the
new password. e.g. lcredit = -1 requires at least one lowercase character
","
Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/
directory or the file /etc/security/pwquality.conf and add or modify the following
line to set:
• minclass = 4
--AND/OR--
• dcredit = -_N_
• ucredit = -_N_
• ocredit = -_N_
• lcredit = -_N_
Example:
# sed -ri 's/^\s*minclass\s*=/# &/' /etc/security/pwquality.conf
# printf '\n%s' ""minclass = 4"" >> /etc/security/pwquality.conf.d/50-
pwcomplexity.conf
--AND/OR--
# sed -ri 's/^\s*[dulo]credit\s*=/# &/' /etc/security/pwquality.conf
# printf '%s\n' ""dcredit = -1"" ""ucredit = -1"" ""ocredit = -1"" ""lcredit = -1"" >
/etc/security/pwquality.conf.d/50-pwcomplexity.conf
- OR/IF - the pam-config tool has been used to configure the global PAM configuration
files.
Run the following command to add minclass = 4:
# pam-config -a --cracklib-minclass=4
--AND/OR--
Run the following commands to add password complexity that conforms to local site
policy:
# pam-config -a --cracklib-dcredit=<value>
# pam-config -a --cracklib-ucredit=<value>
# pam-config -a --cracklib-lcredit=<value>
# pam-config -a --cracklib-ocredit=<value>
Default Value:
minclass = 0
dcredit = 0
ucredit = 0
ocredit = 0
lcredit = 0
",,TRUE
5.3.2.2.5,Ensure password same consecutive characters is configured,"
The pwquality maxrepeat option sets the maximum number of allowed same
consecutive characters in a new password.
","
Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/
directory or the file /etc/security/pwquality.conf and add or modify the following
line to set maxrepeat to 3 or less and not 0. Ensure setting conforms to local site policy:
Example:
# sed -ri 's/^\s*maxrepeat\s*=/# &/' /etc/security/pwquality.conf
# printf '\n%s' ""maxrepeat = 3"" >> /etc/security/pwquality.conf.d/50-
pwrepeat.conf
- OR/IF - the pam-config tool has been used to configure the global PAM configuration
files.
Run the following command to set maxrepeat to 3 or less and not 0. Ensure setting
conforms to local site policy:
# pam-config -a --cracklib-maxrepeat=3
Default Value:
maxrepeat = 0
",,TRUE
5.3.2.2.6,Ensure password maximum sequential characters is configured,"
The pwquality maxsequence option sets the maximum length of monotonic character
sequences in the new password. Examples of such sequence are 12345 or fedcb. The
check is disabled if the value is 0.
Note: Most such passwords will not pass the simplicity check unless the sequence is
only a minor part of the password.
","
Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/
directory or the file /etc/security/pwquality.conf and add or modify the following
line to set maxsequence to 3 or less and not 0. Ensure setting conforms to local site
policy:
Example:
# sed -ri 's/^\s*maxsequence\s*=/# &/' /etc/security/pwquality.conf
# printf '\n%s' ""maxsequence = 3"" >> /etc/security/pwquality.conf.d/50-
pwmaxsequence.conf
- OR/IF - the pam-config tool has been used to configure the global PAM configuration
files.
Run the following command to set maxsequence to 3 or less and not 0. Ensure setting
conforms to local site policy:
Example:
# pam-config -a --cracklib-maxsequence=3
Default Value:
maxsequence = 0
",,TRUE
5.3.2.2.7,Ensure password quality is enforced for the root user,"
If the pwquality enforce_for_root option is enabled, the module will return error on
failed check even if the user changing the password is root.
This option is off by default which means that just the message about the failed check is
printed but root can change the password anyway.
Note: The root is not asked for an old password so the checks that compare the old and
new password are not performed.
","
Edit or add the following line in a *.conf file in /etc/security/pwquality.conf.d or
in /etc/security/pwquality.conf:
Example:
printf '\n%s\n' ""enforce_for_root"" >> /etc/security/pwquality.conf.d/50-
pwroot.conf
- OR/IF - the pam-config tool has been used to configure the global PAM configuration
files.
Run the following command to set the enforce_for_root option to enabled:
# pam-config -a --cracklib-enforce_for_root
Default Value:
disabled
",,TRUE
5.3.2.3.1,Ensure password history remember is configured,"
The /etc/security/opasswd file stores the users' old passwords and can be checked
to ensure that users are not recycling recent passwords. The number of passwords
remembered is set via the remember argument value in set for the pam_pwhistory
module.
• remember=<N> - <N> is the number of old passwords to remember
","
Run the following command to add the remember option to 24 or more and meets local
site policy:
# pam-config -a --pwhistory --pwhistory-remember=24
",,TRUE
5.3.2.3.2,Ensure password history is enforced for the root user,"
If the pwhistory enforce_for_root option is enabled, the module will enforce
password history for the root user as well
","
Run the following command to add enforce_for_root option:
# pam-config -a --pwhistory --pwhistory-enforce_for_root
Default Value:
disabled
",,TRUE
5.3.2.3.3,Ensure pam_pwhistory includes use_authtok,"
use_authtok - When password changing enforce the module to set the new password
to the one provided by a previously stacked password module
","
Run the following command to add the use_authtok option to the password stack's
pam_pwhistory.so module lines:
# pam-config -a --pwhistory --pwhistory-use_authtok
",,TRUE
5.3.2.4.1,Ensure pam_unix does not include nullok,"
The nullok argument overrides the default action of pam_unix.so to not permit the
user access to a service if their official password is blank.
","
Run the following command to delete the nullok argument from the pam_unix.so
module:
# pam-config -d --unix-nullok
",,TRUE
5.3.2.4.2,Ensure pam_unix does not include remember,"
The remember=n argument saves the last n passwords for each user in
/etc/security/opasswd in order to force password change history and keep the user
from alternating between the same password too frequently. The MD5 password hash
algorithm is used for storing the old passwords. Instead of this option the
pam_pwhistory module should be used. The pam_pwhistory module saves the last n
passwords for each user in /etc/security/opasswd using the password hash
algorithm set on the pam_unix module. This allows for the sha512 hash algorithm to be
used.
","
Edit a file in /etc/pam.d/* and remove the remember argument on the pam_unix.so
module lines:
/etc/pam.d/common-password:password required pam_unix.so
use_authtok shadow sha512
/etc/pam.d/common-password-pc:password required pam_unix.so
use_authtok shadow sha512
",,TRUE
5.3.2.4.3,Ensure pam_unix includes a strong password hashing algorithm,"
A cryptographic hash function converts an arbitrary-length input into a fixed length
output. Password hashing performs a one-way transformation of a password, turning
the password into another string, called the hashed password.
","
Notes:
• If yescrypt becomes available in a future release, this would also be acceptable.
It is highly recommended that the chosen hashing algorithm is consistent across
/etc/libuser.conf, /etc/login.defs, /etc/pam.d/password-auth, and
/etc/pam.d/system-auth.
• This only effects local users and passwords created after updating the files to
use sha512 or yescrypt. If it is determined that the password algorithm being
used is not sha512 or yescrypt, once it is changed, it is recommended that all
user ID's be immediately expired and forced to change their passwords on next
login.
Run one of the following commands to add a strong password hashing algorithm on the
password stack's pam_unix.so module lines:
# pam-config -a --unix --unix-sha512
- OR -
# pam-config -a --unix --unix-yescrypt
",,TRUE
5.3.2.4.4,Ensure pam_unix includes use_authtok,"
use_authtok - When password changing enforce the module to set the new password
to the one provided by a previously stacked password module
","
Edit or create the line use_authtok on the password stack's pam_unix.so module
lines:
/etc/pam.d/common-password:password required pam_unix.so
use_authtok shadow sha512
/etc/pam.d/common-password-pc:password required pam_unix.so
use_authtok shadow sha512
",,TRUE
5.4.1.1,Ensure password expiration is configured,"
The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force
passwords to expire once they reach a defined age.

PASS_MAX_DAYS <N> - The maximum number of days a password may be used. If the
password is older than this, a password change will be forced. If not specified, -1 will be
assumed (which disables the restriction).
","
Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs :
PASS_MAX_DAYS 365
Modify user parameters for all users with a password set to match:
# chage --maxdays 365 <user>
Edit /etc/login.defs and set PASS_MAX_DAYS to a value greater than 0 that follows
local site policy:
Example:
PASS_MAX_DAYS 365
Run the following command to modify user parameters for all users with a password set
to a maximum age no greater than 365 or less than 1 that follows local site policy:
# chage --maxdays <N> <user>
Example:
# awk -F: '($2~/^\$.+\$/) {if($5 > 365 || $5 < 1)system (""chage --maxdays 365
"" $1)}' /etc/shadow
Warning: If a password has been set at system install or kickstart, the last change
date field is not set, In this case, setting PASS_MAX_DAYS will immediately expire the
password. One possible solution is to populate the last change date field through a
command like: chage -d ""$(date +%Y-%m-%d)"" root
Default Value:
PASS_MAX_DAYS 99999
",,TRUE
5.4.1.3,Ensure password expiration warning days is configured,"
The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify
users that their password will expire in a defined number of days.
PASS_WARN_AGE <N> - The number of days warning given before a password expires. A
zero means warning is given only upon the day of expiration, a negative value means
no warning is given. If not specified, no warning will be provided.
","
Edit /etc/login.defs and set PASS_WARN_AGE to a value of 7 or more that follows
local site policy:
Example:
PASS_WARN_AGE 7
Run the following command to modify user parameters for all users with a password set
to a minimum warning to 7 or more days that follows local site policy:
# chage --warndays <N> <user>
Example:
# awk -F: '($2~/^\$.+\$/) {if($6 < 7)system (""chage --warndays 7 "" $1)}'
/etc/shadow
Default Value:
PASS_WARN_AGE 7
",,TRUE
5.4.1.4,Ensure strong password hashing algorithm is configured,"
A cryptographic hash function converts an arbitrary-length input into a fixed length
output. Password hashing performs a one-way transformation of a password, turning
the password into another string, called the hashed password.
ENCRYPT_METHOD (string) - This defines the system default encryption algorithm for
encrypting passwords (if no algorithm are specified on the command line). It can take
one of these values:
• MD5 - MD5-based algorithm will be used for encrypting password
• SHA256 - SHA256-based algorithm will be used for encrypting password
• SHA512 - SHA512-based algorithm will be used for encrypting password
• BCRYPT - BCRYPT-based algorithm will be used for encrypting password
• YESCRYPT - YESCRYPT-based algorithm will be used for encrypting password
• DES - DES-based algorithm will be used for encrypting password (default)
Note:
• This parameter overrides the deprecated MD5_CRYPT_ENAB variable.
• This parameter will only affect the generation of group passwords.
• The generation of user passwords is done by PAM and subject to the PAM
configuration.
• It is recommended to set this variable consistently with the PAM configuration.
","
Edit /etc/login.defs and set the ENCRYPT_METHOD to SHA512 or YESCRYPT:
ENCRYPT_METHOD <HASHING_ALGORITHM>
Example:
ENCRYPT_METHOD YESCRYPT
Note:
• This only effects local groups' passwords created after updating the file to use
sha512 or yescrypt.
• If it is determined that the password algorithm being used is not sha512 or
yescrypt, once it is changed, it is recommended that all group passwords be
updated to use the stronger hashing algorithm.
• It is recommended that the chosen hashing algorithm is consistent across
/etc/login.defs and the PAM configuration
Default Value:
ENCRYPT_METHOD SHA512
",,TRUE
5.4.1.5,Ensure inactive password lock is configured,"
User accounts that have been inactive for over a given period of time can be
automatically disabled.

INACTIVE - Defines the number of days after the password exceeded its maximum age
where the user is expected to replace this password.

The value is stored in the shadow password file. An input of 0 will disable an expired
password with no delay. An input of -1 will blank the respective field in the shadow
password file.
","
Run the following command to set the default password inactivity period to 45 days or
less that meets local site policy:
# useradd -D -f <N>
Example:
# useradd -D -f 45
Run the following command to modify user parameters for all users with a password set
to a inactive age of 45 days or less that follows local site policy:
# chage --inactive <N> <user>
Example:
# awk -F: '($2~/^\$.+\$/) {if($7 > 45 || $7 < 0)system (""chage --inactive 45
"" $1)}' /etc/shadow
Default Value:
INACTIVE=-1
",,TRUE
5.4.1.6,Ensure all users last password change date is in the past,"
All users should have a password change date in the past.
","
Investigate any users with a password change date in the future and correct them.
Locking the account, expiring the password, or resetting the password manually may be
appropriate.
",,TRUE
5.4.2.1,Ensure root is the only UID 0 account,"
Any account with UID 0 has superuser privileges on the system.
","
Run the following command to change the root account UID to 0:
# usermod -u 0 root
Modify any users other than root with UID 0 and assign them a new UID.
",,TRUE
5.4.2.2,Ensure root is the only GID 0 account,"
The usermod command can be used to specify which group the root account belongs
to. This affects permissions of files that are created by the root account.
","
Run the following command to set the root user's GID to 0:
# usermod -g 0 root
Run the following command to set the root group's GID to 0:
# groupmod -g 0 root
Remove any users other than the root user with GID 0 or assign them a new GID if
appropriate.
",,TRUE
5.4.2.3,Ensure group root is the only GID 0 group,"
The groupmod command can be used to specify which group the root group belongs
to. This affects permissions of files that are group owned by the root group.
","
Run the following command to set the root group's GID to 0:
# groupmod -g 0 root
Remove any groups other than the root group with GID 0 or assign them a new GID if
appropriate.
",,TRUE
5.4.2.4,Ensure root account access is controlled,"
There are a number of methods to access the root account directly. Without a password
set any user would be able to gain access and thus control over the entire system.
","
Run the following command to set a password for the root user:
# passwd root
- OR -
Run the following command to lock the root user account:
# usermod -L root
",,TRUE
5.4.2.5,Ensure root path integrity,"
The root user can execute any command on the system and could be fooled into
executing programs unintentionally if the PATH is not set correctly.
","
Correct or justify any:
• Locations that are not directories
• Empty directories (::)
• Trailing (:)
• Current working directory (.)
• Non root owned directories
• Directories that less restrictive than mode 0755
",,TRUE
5.4.2.6,Ensure root user umask is configured,"
The user file-creation mode mask (umask) is used to determine the file permission for
newly created directories and files. In Linux, the default permissions for any newly
created directory is 0777 (rwxrwxrwx), and for any newly created file it is 0666 (rw-rw-
rw-). The umask modifies the default Linux permissions by restricting (masking) these
permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in
the umask are cleared in the resulting file mode.
umask can be set with either Octal or Symbolic values:
• Octal (Numeric) Value - Represented by either three or four digits. ie umask
0027 or umask 027. If a four digit umask is used, the first digit is ignored. The
remaining three digits effect the resulting permissions for user, group, and
world/other respectively.
• Symbolic Value - Represented by a comma separated list for User u, group g,
and world/other o. The permissions listed are not masked by umask. ie a umask
set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask
027. This umask would set a newly created directory with file mode drwxr-x---
and a newly created file with file mode rw-r-----.
root user Shell Configuration Files:
• /root/.bash_profile - Is executed to configure the root users' shell before the
initial command prompt. Is only read by login shells.
• /root/.bashrc - Is executed for interactive shells. only read by a shell that's
both interactive and non-login
umask is set by order of precedence. If umask is set in multiple locations, this order of
precedence will determine the system's default umask.
Order of precedence:
1. /root/.bash_profile
2. /root/.bashrc
3. The system default umask
","
Edit /root/.bash_profile and /root/.bashrc and remove, comment out, or update
any line with umask to be 0027 or more restrictive.
Default Value:
System default umask
",,TRUE
5.4.2.7,Ensure system accounts do not have a valid login shell,"
There are a number of accounts provided with most distributions that are used to
manage applications and are not intended to provide an interactive shell. Furthermore,
a user may add special accounts that are not intended to provide an interactive shell.
","
Run the following command to set the shell for any service accounts returned by the
audit to nologin:
# usermod -s $(command -v nologin) <user>
Example script:
#!/usr/bin/env bash
{
l_valid_shells=""^($( awk -F\/ '$NF != ""nologin"" {print}' /etc/shells | sed
-rn '/^\//{s,/,\\\\/,g;p}' | paste -s -d '|' - ))$""
awk -v pat=""$l_valid_shells"" -F:
'($1!~/^(root|halt|sync|shutdown|nfsnobody)$/ && ($3<'""$(awk
'/^\s*UID_MIN/{print $2}' /etc/login.defs)""' || $3 == 65534) && $(NF) ~ pat)
{system (""usermod -s '""$(command -v nologin)""' "" $1)}' /etc/passwd
}
",,TRUE
5.4.2.8,Ensure accounts without a valid login shell are locked,"
There are a number of accounts provided with most distributions that are used to
manage applications. Additionally, a administrator may add special accounts that are
not intended for interactive use.
","
Run the following command to lock any non-root accounts without a valid login shell
returned by the audit:
# usermod -L <user>
Example script::
#!/usr/bin/env bash
{
l_valid_shells=""^($(awk -F\/ '$NF != ""nologin"" {print}' /etc/shells | sed
-rn '/^\//{s,/,\\\\/,g;p}' | paste -s -d '|' - ))$""
while IFS= read -r l_user; do
passwd -S ""$l_user"" | awk '$2 !~ /^L/ {system (""usermod -L "" $1)}'
done < <(awk -v pat=""$l_valid_shells"" -F: '($1 != ""root"" && $(NF) !~ pat)
{print $1}' /etc/passwd)
}
",,TRUE
5.4.3.1,Ensure nologin is not listed in /etc/shells,"
/etc/shells is a text file which contains the full pathnames of valid login shells. This
file is consulted by chsh and available to be queried by other programs.
Be aware that there are programs which consult this file to find out if a user is a normal
user; for example, FTP daemons traditionally disallow access to users with shells not
included in this file.
","
Edit /etc/shells and remove any lines that include nologin
",,TRUE
5.4.3.2,Ensure default user shell timeout is configured,"
TMOUT is an environmental setting that determines the timeout of a shell in seconds.
• TMOUT=n - Sets the shell timeout to n seconds. A setting of TMOUT=0 disables
timeout.
• readonly TMOUT- Sets the TMOUT environmental variable as readonly,
preventing unwanted modification during run-time.
• export TMOUT - exports the TMOUT variable
System Wide Shell Configuration Files:
• /etc/profile - used to set system wide environmental variables on users
shells. The variables are sometimes the same ones that are in the
.bash_profile, however this file is used to set an initial PATH or PS1 for all
shell users of the system. is only executed for interactive login shells, or
shells executed with the --login parameter.
• /etc/profile.d - /etc/profile will execute the scripts within
/etc/profile.d/*.sh. It is recommended to place your configuration in a shell
script within /etc/profile.d to set your own system wide environmental
variables.
• /etc/bash.bashrc - System wide version of .bashrc. In Fedora derived
distributions, /etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, but
redirects output to /dev/null if non-interactive. Is only executed for
interactive shells or if BASH_ENV is set to /etc/bash.bashrc.
","
Review /etc/bashrc, /etc/profile, and all files ending in *.sh in the
/etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site
policy. TMOUT should not exceed 900 or be equal to 0.
Configure TMOUT in one of the following files:
• A file in the /etc/profile.d/ directory ending in .sh
• /etc/profile
• /etc/bashrc
Example command to set TMOUT to 900 seconds in a file in /etc/profile.d/:
# printf '%s\n' ""# Set TMOUT to 900 seconds"" ""typeset -xr TMOUT=900"" >
/etc/profile.d/50-tmout.sh
TMOUT configuration examples:
typeset -xr TMOUT=900
Deprecated methods:
• As multiple lines:
TMOUT=900
readonly TMOUT
export TMOUT
• As a single line:
readonly TMOUT=900 ; export TMOUT
",,TRUE
5.4.3.3,Ensure default user umask is configured,"
The user file-creation mode mask (umask) is used to determine the file permission for
newly created directories and files. In Linux, the default permissions for any newly
created directory is 0777 (rwxrwxrwx), and for any newly created file it is 0666 (rw-rw-
rw-). The umask modifies the default Linux permissions by restricting (masking) these
permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in
the umask are cleared in the resulting file mode.
umask can be set with either Octal or Symbolic values:
• Octal (Numeric) Value - Represented by either three or four digits. ie umask
0027 or umask 027. If a four digit umask is used, the first digit is ignored. The
remaining three digits effect the resulting permissions for user, group, and
world/other respectively.
• Symbolic Value - Represented by a comma separated list for User u, group g,
and world/other o. The permissions listed are not masked by umask. ie a umask
set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask
027. This umask would set a newly created directory with file mode drwxr-x---
and a newly created file with file mode rw-r-----.
The default umask can be set to use the pam_umask module or in a System Wide
Shell Configuration File. The user creating the directories or files has the
discretion of changing the permissions via the chmod command, or choosing a different
default umask by adding the umask command into a User Shell Configuration
File, ( .bash_profile or .bashrc), in their home directory.
Setting the default umask:
• pam_umask module:
o will set the umask according to the system default in /etc/login.defs
and user settings, solving the problem of different umask settings with
different shells, display managers, remote sessions etc.
o umask=<mask> value in the /etc/login.defs file is interpreted as Octal
o Setting USERGROUPS_ENAB to yes in /etc/login.defs (default):
▪ will enable setting of the umask group bits to be the same as owner
bits. (examples: 022 -> 002, 077 -> 007) for non-root users, if the
uid is the same as gid, and username is the same as the
<primary group name>
▪ userdel will remove the user's group if it contains no more
members, and useradd will create by default a group with the name
of the user
• System Wide Shell Configuration File:
o /etc/profile - used to set system wide environmental variables on
users shells. The variables are sometimes the same ones that are in the
.bash_profile, however this file is used to set an initial PATH or PS1 for
all shell users of the system. is only executed for interactive login
shells, or shells executed with the --login parameter.
o /etc/profile.d - /etc/profile will execute the scripts within
/etc/profile.d/*.sh. It is recommended to place your configuration in
a shell script within /etc/profile.d to set your own system wide
environmental variables.
o /etc/bashrc - System wide version of .bashrc. In Fedora derived
distributions, etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell,
but redirects output to /dev/null if non-interactive. Is only executed for
interactive shells or if BASH_ENV is set to /etc/bashrc.
User Shell Configuration Files:
• ~/.bash_profile - Is executed to configure your shell before the initial
command prompt. Is only read by login shells.
• ~/.bashrc - Is executed for interactive shells. only read by a shell that's both
interactive and non-login
umask is set by order of precedence. If umask is set in multiple locations, this order of
precedence will determine the system's default umask.
Order of precedence:
1. A file in /etc/profile.d/ ending in .sh - This will override any other system-
wide umask setting
2. In the file /etc/profile
3. On the pam_umask.so module in /etc/pam.d/postlogin
4. In the file /etc/login.defs
5. In the file /etc/default/login
","
Run the following script and perform the instructions in the output to set the default
umask to 027 or more restrictive:
#!/usr/bin/env bash
{
l_output="""" l_output2="""" l_out=""""
file_umask_chk()
{
if grep -Psiq -- '^\h*umask\h+(0?[0-7][2-
7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(\h*#.*)?$' ""$l_file""; then
l_out=""$l_out\n - umask is set correctly in \""$l_file\""""
elif grep -Psiq -- '^\h*umask\h+(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-
7][0-6]\b)|([0-7][01][0-7]\b|[0-7][0-7][0-
6]\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\b)(,o=[rwx]{1,3})?)|((g=[wrx
]{1,3},)?o=[wrx]{1,3}\b)))' ""$l_file""; then
l_output2=""$l_output2\n - \""$l_file\""""
fi
}
while IFS= read -r -d $'\0' l_file; do
file_umask_chk
done < <(find /etc/profile.d/ -type f -name '*.sh' -print0)
[ -n ""$l_out"" ] && l_output=""$l_out""
l_file=""/etc/profile"" && file_umask_chk
l_file=""/etc/bashrc"" && file_umask_chk
l_file=""/etc/bash.bashrc"" && file_umask_chk
l_file=""/etc/pam.d/postlogin""
if grep -Psiq
'^\h*session\h+[^#\n\r]+\h+pam_umask\.so\h+([^#\n\r]+\h+)?umask=(([0-7][0-
7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b))' ""$l_file""; then
l_output2=""$l_output2\n - \""$l_file\""""
fi
l_file=""/etc/login.defs"" && file_umask_chk
l_file=""/etc/default/login"" && file_umask_chk
if [ -z ""$l_output2"" ]; then
echo -e "" - No files contain a UMASK that is not restrictive enough\n
No UMASK updates required to existing files""
else
echo -e ""\n - UMASK is not restrictive enough in the following
file(s):$l_output2\n\n- Remediation Procedure:\n - Update these files and
comment out the UMASK line\n or update umask to be \""0027\"" or more
restrictive""
fi
if [ -n ""$l_output"" ]; then
echo -e ""$l_output""
else
echo -e "" - Configure UMASK in a file in the \""/etc/profile.d/\""
directory ending in \"".sh\""\n\n Example Command (Hash to represent being
run at a root prompt):\n\n# printf '%s\\\n' \""umask 027\"" >
/etc/profile.d/50-systemwide_umask.sh\n""
fi
}
Notes:
• This method only applies to bash and shell. If other shells are supported on the
system, it is recommended that their configuration files also are checked
• If the pam_umask.so module is going to be used to set umask, ensure that it's not
being overridden by another setting. Refer to the PAM_UMASK(8) man page for
more information
Default Value:
UMASK 022
",,TRUE
6.1.1,Ensure AIDE is installed,"
Advanced Intrusion Detection Environment (AIDE) is a intrusion detection tool that uses
predefined rules to check the integrity of files and directories in the Linux operating
system. AIDE has its own database to check the integrity of files and directories.
aide takes a snapshot of files and directories including modification times, permissions,
and file hashes which can then be used to compare against the current state of the
filesystem to detect modifications to the system.
","
Run the following command to install aide:
# zypper install aide
Configure aide as appropriate for your environment. Consult the aide documentation
for options.
Initialize aide:
Run the following commands:
# aide -i
# mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db
",,TRUE
6.1.2,Ensure filesystem integrity is regularly checked,"
Periodic checking of the filesystem integrity is needed to detect changes to the
filesystem.
","
- IF - cron will be used to schedule and run aide check
Run the following command:
# crontab -u root -e
Add the following line to the crontab:
0 5 * * * /usr/bin/aide --check
- OR -
- IF - aidecheck.service and aidecheck.timer will be used to schedule and run aide
check:
Create or edit the file /etc/systemd/system/aidecheck.service and add the
following lines:
[Unit]
Description=Aide Check
[Service]
Type=simple
ExecStart=/usr/bin/aide --check
[Install]
WantedBy=multi-user.target
Create or edit the file /etc/systemd/system/aidecheck.timer and add the following
lines:
[Unit]
Description=Aide check every day at 5AM
[Timer]
OnCalendar=*-*-* 05:00:00
Unit=aidecheck.service
[Install]
WantedBy=multi-user.target
Run the following commands:
# chown root:root /etc/systemd/system/aidecheck.*
# chmod 0644 /etc/systemd/system/aidecheck.*
# systemctl daemon-reload
# systemctl enable aidecheck.service
# systemctl --now enable aidecheck.timer
",,TRUE
6.1.3,Ensure cryptographic mechanisms are used to protect the integrity of audit tools,"
Audit tools include, but are not limited to, vendor-provided and open source audit tools
needed to successfully view and manipulate audit information system activity and
records. Audit tools include custom queries and report generators.
","
Run the following command to determine the absolute path to the non-symlinked
version on the audit tools:
# readlink -f /sbin
The output will be either /usr/sbin - OR - /sbin. Ensure the correct path is used.
Edit /etc/aide.conf and add or update the following selection lines replacing <PATH>
with the correct path returned in the command above:
# Audit Tools
<PATH>/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
<PATH>/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
<PATH>/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
<PATH>/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
<PATH>/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
<PATH>/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512
Example
# printf '\n%s' ""# Audit Tools"" ""$(readlink -f /sbin/auditctl)
p+i+n+u+g+s+b+acl+xattrs+sha512"" ""$(readlink -f /sbin/auditd)
p+i+n+u+g+s+b+acl+xattrs+sha512"" ""$(readlink -f /sbin/ausearch)
p+i+n+u+g+s+b+acl+xattrs+sha512"" ""$(readlink -f /sbin/aureport)
p+i+n+u+g+s+b+acl+xattrs+sha512"" ""$(readlink -f /sbin/autrace)
p+i+n+u+g+s+b+acl+xattrs+sha512"" ""$(readlink -f /sbin/augenrules)
p+i+n+u+g+s+b+acl+xattrs+sha512"" >> /etc/aide.conf
Note: - IF - /etc/aide.conf includes a @@x_include statement:
Example:
@@x_include /etc/aide.conf.d ^[a-zA-Z0-9_-]+$
• @@x_include FILE
• @@x_include DIRECTORY REGEX
o @@x_include is identical to @@include, except that if a config file is
executable it is run and the output is used as config.
o If the executable file exits with status greater than zero or writes to stderr
aide stops with an error.
o For security reasons DIRECTORY and each executable config file must
be owned by the current user and must not be group or world-writable.
",,TRUE
6.2.1.1,Ensure journald service is enabled and active,"
Ensure that the systemd-journald service is enabled to allow capturing of logging
events.
","
Run the following commands to unmask and start systemd-journald.service
# systemctl unmask systemd-journald.service
# systemctl start systemd-journald.service
",,TRUE
6.2.1.4,Ensure only one logging system is in use,"
Best practices recommend that a single centralized logging system be used for log
management, choose a single service either rsyslog - OR - journald to be used as a
single centralized logging system.
","
1. Determine whether to use journald - OR - rsyslog depending on site needs
2. Configure systemd-jounald.service
3. Configure only ONE either journald - OR - rsyslog and complete the
recommendations in that subsection
4. Return to this recommendation to ensure only one logging system is in use
",,TRUE
6.2.2.1.1,Ensure systemd-journal-remote is installed,"
Journald systemd-journal-remote supports the ability to send log events it gathers to
a remote log host or to receive messages from remote hosts, thus enabling centralized
log management.
","
Run the following command to install systemd-journal-remote:
# zypper install systemd-journal-remote
",,TRUE
6.2.2.1.3,Ensure systemd-journal-upload is enabled and active,"
Journald systemd-journal-upload supports the ability to send log events it gathers to
a remote log host.
","
Run the following commands to unmask, enable and start systemd-journal-upload:
# systemctl unmask systemd-journal-upload.service
# systemctl --now enable systemd-journal-upload.service
",,TRUE
6.2.2.1.4,Ensure systemd-journal-remote service is not in use,"
Journald systemd-journal-remote supports the ability to receive messages from
remote hosts, thus acting as a log server. Clients should not receive data from other
hosts.
Note:
• The same package, systemd-journal-remote, is used for both sending logs to
remote hosts and receiving incoming logs.
• With regards to receiving logs, there are two services; systemd-journal-
remote.socket and systemd-journal-remote.service.
","
Run the following commands to stop and mask systemd-journal-remote.socket and
systemd-journal-remote.service:
# systemctl stop systemd-journal-remote.socket systemd-journal-remote.service
# systemctl mask systemd-journal-remote.socket systemd-journal-remote.service
",,TRUE
6.2.2.2,Ensure journald ForwardToSyslog is disabled,"
Data from journald should be kept in the confines of the service and not forwarded to
other services.
","
- IF - rsyslog is the preferred method for capturing logs, this section and
Recommendation should be skipped and the ""Configure rsyslog"" section followed.
- IF - journald is the preferred method for capturing logs:
Set the following parameter in the [Journal] section in
/etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending in
.conf:
ForwardToSyslog=no
Example:
#!/usr/bin/env bash
{
[ ! -d /etc/systemd/journald.conf.d/ ] && mkdir
/etc/systemd/journald.conf.d/
if grep -Psq -- '^\h*\[Journal\]' /etc/systemd/journald.conf.d/60-
journald.conf; then
printf '%s\n' ""ForwardToSyslog=no"" >> /etc/systemd/journald.conf.d/60-
journald.conf
else
printf '%s\n' ""[Journal]"" ""ForwardToSyslog=no"" >>
/etc/systemd/journald.conf.d/60-journald.conf
fi
}
Note: If this setting appears in a canonically later file, or later in the same file, the
setting will be overwritten
Run to following command to update the parameters in the service:
# systemctl reload-or-restart systemd-journald
Default Value:
ForwardToSyslog=no
",,TRUE
6.2.2.3,Ensure journald Compress is configured,"
The journald system includes the capability of compressing overly large files to avoid
filling up the system with logs or making the logs unmanageably large.
","
Set the following parameter in the [Journal] section in
/etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending
in .conf:
Compress=yes
Example:
#!/usr/bin/env bash
{
[ ! -d /etc/systemd/journald.conf.d/ ] && mkdir
/etc/systemd/journald.conf.d/
if grep -Psq -- '^\h*\[Journal\]' /etc/systemd/journald.conf.d/60-
journald.conf; then
printf '%s\n' ""Compress=yes"" >> /etc/systemd/journald.conf.d/60-
journald.conf
else
printf '%s\n' ""[Journal]"" ""Compress=yes"" >>
/etc/systemd/journald.conf.d/60-journald.conf
fi
}
Note: If this setting appears in a canonically later file, or later in the same file, the
setting will be overwritten
Run to following command to update the parameters in the service:
# systemctl reload-or-restart systemd-journald
",,TRUE
6.2.2.4,Ensure journald Storage is configured,"
Data from journald may be stored in volatile memory or persisted locally on the server.
Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the
server they are protected from loss due to a reboot.
","
Set the following parameter in the [Journal] section in
/etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending
in .conf:
Storage=persistent
Example:
#!/usr/bin/env bash
{
[ ! -d /etc/systemd/journald.conf.d/ ] && mkdir
/etc/systemd/journald.conf.d/
if grep -Psq -- '^\h*\[Journal\]' /etc/systemd/journald.conf.d/60-
journald.conf; then
printf '%s\n' ""Storage=persistent"" >> /etc/systemd/journald.conf.d/60-
journald.conf
else
printf '%s\n' ""[Journal]"" ""Storage=persistent"" >>
/etc/systemd/journald.conf.d/60-journald.conf
fi
}
Note: If this setting appears in a canonically later file, or later in the same file, the
setting will be overwritten
Run to following command to update the parameters in the service:
# systemctl reload-or-restart systemd-journald
",,TRUE
6.2.3.1.2,Ensure rsyslog is not configured to receive logs from a remote client,"
rsyslog supports the ability to receive messages from remote hosts, thus acting as a
log server. Clients should not receive data from other hosts.
","
Should there be any active log server configuration found in the auditing section, modify
those files and remove the specific lines highlighted by the audit. Verify none of the
following entries are present in any of /etc/rsyslog.conf or
/etc/rsyslog.d/*.conf.
advanced format
module(load=""imtcp"")
input(type=""imtcp"" port=""514"")
deprecated legacy format
$ModLoad imtcp
$InputTCPServerRun
Restart the service:
# systemctl restart rsyslog
",,TRUE
6.2.3.2,Ensure rsyslog is installed,"
The rsyslog software is recommended in environments where journald does not
meet operation requirements.
","
Run the following command to install rsyslog:
# zypper install rsyslog
Default Value:
Installed
",,TRUE
6.2.3.3,Ensure rsyslog service is enabled and active,"
Once the rsyslog package is installed, ensure that the service is enabled.
","
 -IF - rsyslog is being used for logging on the system:
Run the following commands to unmask, enable, and start rsyslog.service:
# systemctl unmask rsyslog.service
# systemctl enable rsyslog.service
# systemctl start rsyslog.service
",,TRUE
6.2.3.4,Ensure journald is configured to send logs to rsyslog,"
Data from systemd-journald may be stored in volatile memory or persisted locally on
the server. Utilities exist to accept remote export of systemd-journald logs, however,
use of the rsyslog service provides a consistent means of log collection and export.
","
- IF - rsyslog is the preferred method for capturing logs:
Set the following parameter in the [Journal] section in
/etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending
in .conf:
ForwardToSyslog=yes
Example:
#!/usr/bin/env bash
{
[ ! -d /etc/systemd/journald.conf.d/ ] && mkdir
/etc/systemd/journald.conf.d/
if grep -Psq -- '^\h*\[Journal\]' /etc/systemd/journald.conf.d/60-
journald.conf; then
printf '%s\n' ""ForwardToSyslog=yes"" >> /etc/systemd/journald.conf.d/60-
journald.conf
else
printf '%s\n' ""[Journal]"" ""ForwardToSyslog=yes"" >>
/etc/systemd/journald.conf.d/60-journald.conf
fi
}
Note: If this setting appears in a canonically later file, or later in the same file, the
setting will be overwritten
Run to following command to update the parameters in the service:
Restart systemd-journald.service:
# systemctl reload-or-restart systemd-journald.service
",,TRUE
6.2.3.5,Ensure rsyslog log file creation mode is configured,"
rsyslog will create logfiles that do not already exist on the system.

The $FileCreateMode parameter allows you to specify the creation mode with which
rsyslog creates new files. If not specified, the value 0644 is used (which retains
backward-compatibility with earlier releases). The value given must always be a 4-digit
octal number, with the initial digit being zero.

Please note that the actual permission depend on rsyslogd's process umask.

$FileCreateMode may be specified multiple times. If so, it specifies the creation mode
for all selector lines that follow until the next $FileCreateMode parameter. Order of lines
is vitally important.
","
Edit either /etc/rsyslog.conf or a dedicated .conf file in /etc/rsyslog.d/ and set
$FileCreateMode to 0640 or more restrictive:
$FileCreateMode 0640
Restart the service:
# systemctl restart rsyslog
",,TRUE
6.2.4.1,Ensure access to all logfiles has been configured,"
Log files contain information from many services on the the local system, or in the event
of a centralized log server, others systems logs as well.
In general log files are found in /var/log/, although application can be configured to
store logs elsewhere. Should your application store logs in another, ensure to run the
same test on that location.
","
Run the following script to update permissions and ownership on files in /var/log.
Although the script is not destructive, ensure that the output is captured in the event that
the remediation causes issues.
#!/usr/bin/env bash
{
a_output2=()
f_file_test_fix()
{
a_out2=()
maxperm=""$( printf '%o' $(( 0777 & ~$perm_mask)) )""
if [ $(( $l_mode & $perm_mask )) -gt 0 ]; then
a_out2+=("" o Mode: \""$l_mode\"" should be \""$maxperm\"" or more
restrictive"" "" x Removing excess permissions"")
chmod ""$l_rperms"" ""$l_fname""
fi
if [[ ! ""$l_user"" =~ $l_auser ]]; then
a_out2+=("" o Owned by: \""$l_user\"" and should be owned by
\""${l_auser//|/ or }\"""" "" x Changing ownership to: \""$l_fix_account\"""")
chown ""$l_fix_account"" ""$l_fname""
fi
if [[ ! ""$l_group"" =~ $l_agroup ]]; then
a_out2+=("" o Group owned by: \""$l_group\"" and should be group
owned by \""${l_agroup//|/ or }\"""" "" x Changing group ownership to:
\""$l_fix_account\"""")
chgrp ""$l_fix_account"" ""$l_fname""
fi
[ ""${#a_out2[@]}"" -gt 0 ] && a_output2+=("" - File: \""$l_fname\"" is:""
""${a_out2[@]}"")
}
l_fix_account='root'
while IFS= read -r -d $'\0' l_file; do
while IFS=: read -r l_fname l_mode l_user l_group; do
if grep -Pq -- '\/(apt)\h*$' <<< ""$(dirname ""$l_fname"")""; then
perm_mask='0133' l_rperms=""u-x,go-wx"" l_auser=""root""
l_agroup=""(root|adm)""; f_file_test_fix
else
case ""$(basename ""$l_fname"")"" in
lastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* |
btmp-* | README)
perm_mask='0113' l_rperms=""ug-x,o-wx"" l_auser=""root""
l_agroup=""(root|utmp)""
f_file_test_fix ;;
cloud-init.log* | localmessages* | waagent.log*)
perm_mask='0133' l_rperms=""u-x,go-wx""
l_auser=""(root|syslog)"" l_agroup=""(root|adm)""
file_test_fix ;;
secure | auth.log | syslog | messages)
perm_mask='0137' l_rperms=""u-x,g-wx,o-rwx""
l_auser=""(root|syslog)"" l_agroup=""(root|adm)""
f_file_test_fix ;;
SSSD | sssd)
perm_mask='0117' l_rperms=""ug-x,o-rwx""
l_auser=""(root|SSSD)"" l_agroup=""(root|SSSD)""
f_file_test_fix ;;
gdm | gdm3)
perm_mask='0117' l_rperms=""ug-x,o-rwx"" l_auser=""root""
l_agroup=""(root|gdm|gdm3)""
f_file_test_fix ;;
*.journal | *.journal~)
perm_mask='0137' l_rperms=""u-x,g-wx,o-rwx"" l_auser=""root""
l_agroup=""(root|systemd-journal)""
f_file_test_fix ;;
*)
perm_mask='0137' l_rperms=""u-x,g-wx,o-rwx""
l_auser=""(root|syslog)"" l_agroup=""(root|adm)""
if [ ""$l_user"" = ""root"" ] || ! grep -Pq -- ""^\h*$(awk -F:
'$1==""'""$l_user""'"" {print $7}' /etc/passwd)\b"" /etc/shells; then
! grep -Pq -- ""$l_auser"" <<< ""$l_user"" &&
l_auser=""(root|syslog|$l_user)""
! grep -Pq -- ""$l_agroup"" <<< ""$l_group"" &&
l_agroup=""(root|adm|$l_group)""
fi
f_file_test_fix ;;
esac
fi
done < <(stat -Lc '%n:%#a:%U:%G' ""$l_file"")
done < <(find -L /var/log -type f \( -perm /0137 -o ! -user root -o ! -
group root \) -print0)
if [ ""${#a_output2[@]}"" -le 0 ]; then # If all files passed, then we
report no changes
a_output+=("" - All files in \""/var/log/\"" have appropriate permissions
and ownership"")
printf '\n%s' ""- All files in \""/var/log/\"" have appropriate
permissions and ownership"" "" o No changes required"" """"
else
printf '\n%s' ""${a_output2[@]}"" """"
fi
}
Note: You may also need to change the configuration for your logging software or
services for any logs that had incorrect permissions.
If there are services that log to other locations, ensure that those log files have the
appropriate access configured.
",,TRUE
6.3.1.1,Ensure auditd packages are installed,"
auditd is the userspace component to the Linux Auditing System. It's responsible for
writing audit records to the disk.
","
Run the following command to install audit:
# zypper install audit
",,TRUE
6.3.1.2,Ensure auditing for processes that start prior to auditd is enabled,"
Configure grub2 so that processes that are capable of being audited can be audited
even if they start up prior to auditd startup.
","
Edit /etc/default/grub and add audit=1 to the GRUB_CMDLINE_LINUX= line between
the opening and closing double quotes:
Example:
GRUB_CMDLINE_LINUX=""quiet audit=1""
Note: Other parameters may also be listed
Run the following command to update the grub2 configuration:
# grub2-mkconfig -o /boot/grub2/grub.cfg
",,TRUE
6.3.1.3,Ensure audit_backlog_limit is sufficient,"
The audit_backlog_limit parameter determines how auditd records can be held in
the auditd backlog. The default setting of 64 may be insufficient to store all audit events
during boot.
","
Edit /etc/default/grub and add audit_backlog_limit=<BACKLOG SIZE> to the
GRUB_CMDLINE_LINUX= line between the opening and closing double quotes:
Example:
GRUB_CMDLINE_LINUX=""quiet audit_backlog_limit=8192""
Note: Other parameters may also be listed
Run the following command to update the grub2 configuration:
# grub2-mkconfig -o /boot/grub2/grub.cfg
",,TRUE
6.3.1.4,Ensure auditd service is enabled and active,"
Turn on the auditd daemon to record system events.
","
Run the following commands to unmask, enable and start auditd:
# systemctl unmask auditd
# systemctl enable auditd
# systemctl start auditd
",,TRUE
6.3.2.1,Ensure audit log storage size is configured,"
Configure the maximum size of the audit log file. Once the log reaches the maximum
size, it will be rotated and a new log file will be started.
","
Set the following parameter in /etc/audit/auditd.conf in accordance with site
policy:
max_log_file = <MB>
Default Value:
max_log_file = 8
",,TRUE
6.3.2.2,Ensure audit logs are not automatically deleted,"
The max_log_file_action setting determines how to handle the audit log file reaching
the max file size. A value of keep_logs will rotate the logs but never delete old logs.
","
Set the following parameter in /etc/audit/auditd.conf:
max_log_file_action = keep_logs
Default Value:
max_log_file_action = ROTATE
",,TRUE
6.3.2.3,Ensure system is disabled when audit logs are full,"
The auditd daemon can be configured to halt the system or put the system in single
user mode, if no free space is available or an error is detected on the partition that holds
the audit log files.
The disk_full_action parameter tells the system what action to take when no free
space is available on the partition that holds the audit log files. Valid values are ignore,
syslog, rotate, exec, suspend, single, and halt.
• ignore, the audit daemon will issue a syslog message but no other action is
taken
• syslog, the audit daemon will issue a warning to syslog
• rotate, the audit daemon will rotate logs, losing the oldest to free up space
• exec, /path-to-script will execute the script. You cannot pass parameters to the
script. The script is also responsible for telling the auditd daemon to resume
logging once its completed its action
• suspend, the audit daemon will stop writing records to the disk
• single, the audit daemon will put the computer system in single user mode
• halt, the audit daemon will shut down the system
The disk_error_action parameter tells the system what action to take when an error
is detected on the partition that holds the audit log files. Valid values are ignore,
syslog, exec, suspend, single, and halt.
• ignore, the audit daemon will not take any action
• syslog, the audit daemon will issue no more than 5 consecutive warnings to
syslog
• exec, /path-to-script will execute the script. You cannot pass parameters to the
script
• suspend, the audit daemon will stop writing records to the disk
• single, the audit daemon will put the computer system in single user mode
• halt, the audit daemon will shut down the system
","
Set one of the following parameters in /etc/audit/auditd.conf depending on your
local security policies.
disk_full_action = <halt|single>
disk_error_action = <syslog|single|halt>
Example:
disk_full_action = halt
disk_error_action = halt
",,TRUE
6.3.2.4,Ensure system warns when audit logs are low on space,"
The auditd daemon can be configured to halt the system, put the system in single user
mode or send a warning message, if the partition that holds the audit log files is low on
space.
The space_left_action parameter tells the system what action to take when the
system has detected that it is starting to get low on disk space. Valid values are ignore,
syslog, rotate, email, exec, suspend, single, and halt.
• ignore, the audit daemon does nothing
• syslog, the audit daemon will issue a warning to syslog
• rotate, the audit daemon will rotate logs, losing the oldest to free up space
• email, the audit daemon will send a warning to the email account specified in
action_mail_acct as well as sending the message to syslog
• exec, /path-to-script will execute the script. You cannot pass parameters to the
script. The script is also responsible for telling the auditd daemon to resume
logging once its completed its action
• suspend, the audit daemon will stop writing records to the disk
• single, the audit daemon will put the computer system in single user mode
• halt, the audit daemon will shut down the system
The admin_space_left_action parameter tells the system what action to take when
the system has detected that it is low on disk space. Valid values are ignore, syslog,
rotate, email, exec, suspend, single, and halt.
• ignore, the audit daemon does nothing
• syslog, the audit daemon will issue a warning to syslog
• rotate, the audit daemon will rotate logs, losing the oldest to free up space
• email, the audit daemon will send a warning to the email account specified in
action_mail_acct as well as sending the message to syslog
• exec, /path-to-script will execute the script. You cannot pass parameters to the
script. The script is also responsible for telling the auditd daemon to resume
logging once its completed its action
• suspend, the audit daemon will stop writing records to the disk
• single, the audit daemon will put the computer system in single user mode
• halt, the audit daemon will shut down the system
","
Set the space_left_action parameter in /etc/audit/auditd.conf to email, exec,
single, or halt:
Example:
space_left_action = email
Set the admin_space_left_action parameter in /etc/audit/auditd.conf to
single or halt:
Example:
admin_space_left_action = single
Note: A Mail Transfer Agent (MTA) must be installed and configured properly to set
space_left_action = email
Default Value:
space_left_action = SYSLOG
admin_space_left_action = SUSPEND
",,TRUE
6.3.3.1,Ensure changes to system administration scope (sudoers) is collected,"
Monitor scope changes for system administrators. If the system has been properly
configured to force system administrators to log in as themselves first and then use the
sudo command to execute privileged commands, it is possible to monitor changes in
scope. The file /etc/sudoers, or files in /etc/sudoers.d, will be written to when the
file(s) or related attributes have changed. The audit records will be tagged with the
identifier ""scope"".
","
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor scope changes for system administrators.
Example:
# printf '%s\n' ""-w /etc/sudoers -p wa -k scope"" ""-w /etc/sudoers.d -p wa -k
scope"" >> /etc/audit/rules.d/50-scope.rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.2,Ensure actions as another user are always logged,"
sudo provides users with temporary elevated privileges to perform operations, either as
the superuser or another user.
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor elevated privileges.
Example:
# printf ""
-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k
user_emulation
-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k
user_emulation
"" >> /etc/audit/rules.d/50-user_emulation.rules
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.3,Ensure events that modify the sudo log file are collected,"
Monitor the sudo log file. If the system has been properly configured to disable the use
of the su command and force all administrators to have to log in first and then use sudo
to execute privileged commands, then all administrator commands will be logged to
/var/log/sudo.log . Any time a command is executed, an audit event will be
triggered as the /var/log/sudo.log file will be opened for write and the executed
administration command will be written to the log.
","
Note: This recommendation requires that the sudo logfile is configured. See guidance
provided in the recommendation ""Ensure sudo log file exists""
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor events that modify the sudo log file.
Example:
# {
SUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,?
.*//' -e 's/""//g')
[ -n ""${SUDO_LOG_FILE}"" ] && printf ""
-w ${SUDO_LOG_FILE} -p wa -k sudo_log_file
"" >> /etc/audit/rules.d/50-sudo.rules || printf ""ERROR: Variable
'SUDO_LOG_FILE' is unset.\n""
}
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.4,Ensure events that modify date and time information are collected,"
Capture events where the system date and/or time has been modified. The parameters
in this section are set to determine if the;
• adjtimex - tune kernel clock
• settimeofday - set time using timeval and timezone structures
• stime - using seconds since 1/1/1970
• clock_settime - allows for the setting of several internal clocks and timers
system calls have been executed. Further, ensure to write an audit record to the
configured audit log file upon exit, tagging the records with a unique identifier such as
""time-change"".
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor events that modify date and time information.
Example:
# printf ""
-a always,exit -F arch=b64 -S adjtimex,settimeofday -k time-change
-a always,exit -F arch=b32 -S adjtimex,settimeofday -k time-change
-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -k time-change
-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -k time-change
-w /etc/localtime -p wa -k time-change
"" >> /etc/audit/rules.d/50-time-change.rules
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.5,Ensure events that modify the system's network environment are collected,"
Record changes to network environment files or system calls. The below parameters
monitors the following system calls, and write an audit event on system call exit:
• sethostname - set the systems host name
• setdomainname - set the systems domain name
The files being monitored are:
• /etc/issue and /etc/issue.net - messages displayed pre-login
• /etc/hosts - file containing host names and associated IP addresses
• /etc/hostname - file contains the system's host name
• /etc/sysconfig/network - additional information that is valid to all network
interfaces
• /etc/sysconfig/network-scripts/ - directory containing network interface
scripts and configurations files
• /etc/NetworkManager/ - directory contains configuration files and settings used
by the NetworkManager
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor events that modify the system's network environment.
Example:
# printf ""
-a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale
-a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/hostname -p wa -k system-locale
-w /etc/sysconfig/network -p wa -k system-locale
-w /etc/sysconfig/network-scripts/ -p wa -k system-locale
-w /etc/NetworkManager -p wa -k system-locale
"" >> /etc/audit/rules.d/50-system_locale.rules
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then 
# printf ""Reboot required to load rules\n""; fi
",,TRUE
6.3.3.6,Ensure use of privileged commands are collected,"
Monitor privileged programs, those that have the setuid and/or setgid bit set on
execution, to determine if unprivileged users are running these commands.
","
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor the use of privileged commands.
Example script:
#!/usr/bin/env bash
{
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
AUDIT_RULE_FILE=""/etc/audit/rules.d/50-privileged.rules""
NEW_DATA=()
for PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }'
/proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid"" | awk '{print
$1}'); do
readarray -t DATA < <(find ""${PARTITION}"" -xdev -perm /6000 -type f | awk
-v UID_MIN=${UID_MIN} '{print ""-a always,exit -F path="" $1 "" -F perm=x -F
auid>=""UID_MIN"" -F auid!=unset -k privileged"" }')
for ENTRY in ""${DATA[@]}""; do
NEW_DATA+=(""${ENTRY}"")
done
done
readarray &> /dev/null -t OLD_DATA < ""${AUDIT_RULE_FILE}""
COMBINED_DATA=( ""${OLD_DATA[@]}"" ""${NEW_DATA[@]}"" )
printf '%s\n' ""${COMBINED_DATA[@]}"" | sort -u > ""${AUDIT_RULE_FILE}""
}
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
Special mount points
If there are any special mount points that are not visible by default from just scanning /,
change the PARTITION variable to the appropriate partition and re-run the remediation.
",,TRUE
6.3.3.7,Ensure unsuccessful file access attempts are collected,"
Monitor for unsuccessful attempts to access files. The following parameters are
associated with system calls that control files:
• creation - creat
• opening - open , openat
• truncation - truncate , ftruncate
An audit log record will only be written if all of the following criteria is met for the user
when trying to access a file:
• a non-privileged user (auid>=UID_MIN)
• is not a Daemon event (auid=4294967295/unset/-1)
• if the system call returned EACCES (permission denied) or EPERM (some other
permanent error associated with the specific system call)
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor unsuccessful file access attempts.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-
EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-
EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-
EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-
EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
"" >> /etc/audit/rules.d/50-access.rules || printf ""ERROR: Variable 'UID_MIN'
is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.8,Ensure events that modify user/group information are collected,"
Record events affecting the modification of user or group information, including that of
passwords and old passwords if in use.
• /etc/group - system groups
• /etc/passwd - system users
• /etc/gshadow - encrypted password for each group
• /etc/shadow - system user passwords
• /etc/security/opasswd - storage of old passwords if the relevant PAM module
is in use
• /etc/nsswitch.conf - file configures how the system uses various databases
and name resolution mechanisms
• /etc/pam.conf - file determines the authentication services to be used, and the
order in which the services are used.
• /etc/pam.d - directory contains the PAM configuration files for each PAM-aware
application.
The parameters in this section will watch the files to see if they have been opened for
write or have had attribute changes (e.g. permissions) and tag them with the identifier
""identity"" in the audit log file.
","
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor events that modify user/group information.
Example:
# printf ""
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
-w /etc/nsswitch.conf -p wa -k identity
-w /etc/pam.conf -p wa -k identity
-w /etc/pam.d -p wa -k identity
"" >> /etc/audit/rules.d/50-identity.rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.9,Ensure discretionary access control permission modification events are collected,"
Monitor changes to file permissions, attributes, ownership and group. The parameters in
this section track changes for system calls that affect file permissions and attributes.
The following commands and system calls effect the permissions, ownership and
various attributes of files.
• chmod
• fchmod
• fchmodat
• chown
• fchown
• fchownat
• lchown
• setxattr
• lsetxattr
• fsetxattr
• removexattr
• lremovexattr
• fremovexattr
In all cases, an audit record will only be written for non-system user ids and will ignore
Daemon events. All audit records will be tagged with the identifier ""perm_mod.""
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor discretionary access control permission modification
events.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F
auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F
auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F
auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F
auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S
setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F
auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S
setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F
auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
"" >> /etc/audit/rules.d/50-perm_mod.rules || printf ""ERROR: Variable
'UID_MIN' is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.10,Ensure successful file system mounts are collected,"
Monitor the use of the mount system call. The mount (and umount ) system call controls
the mounting and unmounting of file systems. The parameters below configure the
system to create an audit record when the mount system call is used by a non-
privileged user.
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor successful file system mounts.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F arch=b32 -S mount -F auid>=$UID_MIN -F auid!=unset -k
mounts
-a always,exit -F arch=b64 -S mount -F auid>=$UID_MIN -F auid!=unset -k
mounts
"" >> /etc/audit/rules.d/50-mounts.rules || printf ""ERROR: Variable 'UID_MIN'
is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.11,Ensure session initiation information is collected,"
Monitor session initiation events. The parameters in this section track changes to the
files associated with session events.
• /var/run/utmp - tracks all currently logged in users.
• /var/log/wtmp - file tracks logins, logouts, shutdown, and reboot events.
• /var/log/btmp - keeps track of failed login attempts and can be read by
entering the command /usr/bin/last -f /var/log/btmp.
All audit records will be tagged with the identifier ""session.""
","
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor session initiation information.
Example:
# printf ""
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k session
-w /var/log/btmp -p wa -k session
"" >> /etc/audit/rules.d/50-session.rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.12,Ensure login and logout events are collected,"
Monitor login and logout events. The parameters below track changes to files
associated with login/logout events.
• /var/log/lastlog - maintain records of the last time a user successfully logged
in.
• /var/run/faillock - directory maintains records of login failures via the
pam_faillock module.
","
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor login and logout events.
Example:
# printf ""
-w /var/log/lastlog -p wa -k logins
-w /var/run/faillock -p wa -k logins
"" >> /etc/audit/rules.d/50-login.rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.13,Ensure file deletion events by users are collected,"
Monitor the use of system calls associated with the deletion or renaming of files and file
attributes. This configuration statement sets up monitoring for:
• unlink - remove a file
• unlinkat - remove a file attribute
• rename - rename a file
• renameat rename a file attribute system calls and tags them with the identifier
""delete"".
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor file deletion events by users.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F
auid>=${UID_MIN} -F auid!=unset -F key=delete
-a always,exit -F arch=b32 -S rename,unlink,unlinkat,renameat -F
auid>=${UID_MIN} -F auid!=unset -F key=delete
"" >> /etc/audit/rules.d/50-delete.rules || printf ""ERROR: Variable 'UID_MIN'
is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.14,Ensure events that modify the system's Mandatory Access Controls are collected,"
Monitor AppArmor, an implementation of mandatory access controls. The parameters
below monitor any write access (potential additional, deletion or modification of files in
the directory) or attribute changes to the /etc/apparmor/ and /usr/share/apparmor/
directories.
Note: If a different Mandatory Access Control method is used, changes to the
corresponding directories should be audited.
","
Note: If a different Mandatory Access Control method is used, changes to the
corresponding directories should be audited.
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor events that modify the system's Mandatory Access
Controls.
Example:
# printf ""
-w /etc/apparmor -p wa -k MAC-policy
-w /usr/share/apparmor -p wa -k MAC-policy
"" >> /etc/audit/rules.d/50-MAC-policy.rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.15,Ensure successful and unsuccessful attempts to use the chcon command are collected,"
The operating system must generate audit records for successful/unsuccessful uses of
the chcon command.
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor successful and unsuccessful attempts to use the
chcon command.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=${UID_MIN} -F
auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable
'UID_MIN' is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.16,Ensure successful and unsuccessful attempts to use the setfacl command are collected,"
The operating system must generate audit records for successful/unsuccessful uses of
the setfacl command
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor successful and unsuccessful attempts to use the
setfacl command.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=${UID_MIN} -F
auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable
'UID_MIN' is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.17,Ensure successful and unsuccessful attempts to use the chacl command are collected,"
The operating system must generate audit records for successful/unsuccessful uses of
the chacl command.
chacl is an IRIX-compatibility command, and is maintained for those users who are
familiar with its use from either XFS or IRIX.
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor successful and unsuccessful attempts to use the
chacl command.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=${UID_MIN} -F
auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable
'UID_MIN' is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.18,Ensure successful and unsuccessful attempts to use the usermod command are collected,"
The operating system must generate audit records for successful/unsuccessful uses of
the usermod command.
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor successful and unsuccessful attempts to use the
usermod command.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=${UID_MIN} -F
auid!=unset -k usermod
"" >> /etc/audit/rules.d/50-usermod.rules || printf ""ERROR: Variable 'UID_MIN'
is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.19,Ensure kernel module loading unloading and modification is collected,"
Monitor the loading and unloading of kernel modules. All the loading / listing /
dependency checking of modules is done by kmod via symbolic links.
The following system calls control loading and unloading of modules:
• init_module - load a module
• finit_module - load a module (used when the overhead of using
cryptographically signed modules to determine the authenticity of a module can
be avoided)
• delete_module - delete a module
• create_module - create a loadable module entry
• query_module - query the kernel for various bits pertaining to modules
Any execution of the loading and unloading module programs and system calls will
trigger an audit record with an identifier of modules.
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor kernel module modification.
Example:
#!/usr/bin/env bash
{
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F arch=b64 -S
init_module,finit_module,delete_module,create_module,query_module -F
auid>=${UID_MIN} -F auid!=unset -k kernel_modules
-a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>=${UID_MIN} -F
auid!=unset -k kernel_modules
"" >> /etc/audit/rules.d/50-kernel_modules.rules || printf ""ERROR: Variable
'UID_MIN' is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.3.20,Ensure the audit configuration is immutable,"
Set system audit so that audit rules cannot be modified with auditctl . Setting the flag
""-e 2"" forces audit to be put in immutable mode. Audit changes can only be made on
system reboot.
Note: This setting will require the system to be rebooted to update the active auditd
configuration settings.
","
Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the line -e
2 at the end of the file:
Example:
# printf '\n%s\n' ""-e 2"" >> /etc/audit/rules.d/99-finalize.rules
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",,TRUE
6.3.4.1,Ensure the audit log file directory mode is configured,"
The audit log directory contains audit log files.
","
Run the following command to configure the audit log directory to have a mode of
""0750"" or less permissive:
# chmod g-w,o-rwx ""$(dirname ""$(awk -F= '/^\s*log_file\s*/{print $2}'
/etc/audit/auditd.conf | xargs)"")""
Default Value:
750
",,TRUE
6.3.4.2,Ensure audit log files mode is configured,"
Audit log files contain information about the system and system activity.
","
Run the following command to remove more permissive mode than 0640 from audit log
files:
# [ -f /etc/audit/auditd.conf ] && find ""$(dirname $(awk -F ""=""
'/^\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f -perm
/0137 -exec chmod u-x,g-wx,o-rwx {} +
",,TRUE
6.3.4.3,Ensure audit log files owner is configured,"
Audit log files contain information about the system and system activity.
","
Run the following command to configure the audit log files to be owned by the root
user:
# [ -f /etc/audit/auditd.conf ] && find ""$(dirname $(awk -F ""=""
'/^\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f ! -user
root -exec chown root {} +
",,TRUE
6.3.4.4,Ensure audit log files group owner is configured,"
Audit log files contain information about the system and system activity.
","
Note The following scripts will set the group to either audit or root based on the
existence of the group audit. If the group audit doesn't exist, or the log_group
parameter is already set to root, the appropriate group is determined to be the group
root
Run the following script to configure the audit log files to be owned by appropriate
group:
#!/usr/bin/env bash
{
l_group=""""; grep -Pq '^audit:' /etc/group && l_group=""audit""
[ -z ""$l_group"" ] || [ ""$(awk -F= '$1~/^\s*log_group\s*$/{print $2}'
/etc/audit/auditd.conf | xargs)"" = root ] && l_group=""root""
find $(dirname $(awk -F""="" '/^\s*log_file\s*=\s*/ {print $2}'
/etc/audit/auditd.conf | xargs)) -type f \( ! -group root -a ! -group audit
\) -exec chgrp ""$l_group"" {} +
}
Run the following script to configure the audit log files to be owned by the audit
appropriate group:
#!/usr/bin/env bash
{
l_group=""""; grep -Pq '^audit:' /etc/group && l_group=""audit""
[ -z ""$l_group"" ] || [ ""$(awk -F= '$1~/^\s*log_group\s*$/{print $2}'
/etc/audit/auditd.conf | xargs)"" = root ] && l_group=""root""
chgrp ""$l_group"" /var/log/audit/
}
Run the following script to set the log_group parameter in the audit configuration file to
log_group = <appropriate_group>:
#!/usr/bin/env bash
{
l_group=""""; grep -Pq '^audit:' /etc/group && l_group=""audit""
[ -z ""$l_group"" ] || [ ""$(awk -F= '$1~/^\s*log_group\s*$/{print $2}'
/etc/audit/auditd.conf | xargs)"" = root ] && l_group=""root""
sed -ri 's/^\s*#?\s*log_group\s*=\s*\S+(\s*#.*)?.*$/log_group =
'""$l_group""'\1/' /etc/audit/auditd.conf
}
Run the following command to restart the audit daemon to reload the configuration file:
# systemctl restart auditd
",,TRUE
6.3.4.5,Ensure audit configuration files mode is configured,"
Audit configuration files control auditd and what events are audited.
","
Run the following command to remove more permissive mode than 0640 from the audit
configuration files:
# find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) -exec
chmod u-x,g-wx,o-rwx {} +
",,TRUE
6.3.4.6,Ensure audit configuration files owner is configured,"
Audit configuration files control auditd and what events are audited.
","
Run the following command to change ownership to root user:
# find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -user
root -exec chown root {} +
",,TRUE
6.3.4.7,Ensure audit configuration files group owner is configured,"
Audit configuration files control auditd and what events are audited.
","
Run the following command to change group to root:
# find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -group
root -exec chgrp root {} +
",,TRUE
6.3.4.8,Ensure audit tools mode is configured,"
Audit tools include, but are not limited to, vendor-provided and open source audit tools
needed to successfully view and manipulate audit information system activity and
records. Audit tools include custom queries and report generators.
","
Run the following command to remove more permissive mode from the audit tools:
# chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace
/sbin/auditd /sbin/augenrules
",,TRUE
6.3.4.9,Ensure audit tools owner is configured,"
Audit tools include, but are not limited to, vendor-provided and open source audit tools
needed to successfully view and manipulate audit information system activity and
records. Audit tools include custom queries and report generators.
","
Run the following command to change the owner of the audit tools to the root user:
# chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace
/sbin/auditd /sbin/augenrulesRun the following command to change the owner of the audit tools to the root user:
# chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace
/sbin/auditd /sbin/augenrules
",,TRUE
6.3.4.10,Ensure audit tools group owner is configured,"
Audit tools include, but are not limited to, vendor-provided and open source audit tools
needed to successfully view and manipulate audit information system activity and
records. Audit tools include custom queries and report generators.
","
Run the following command to change group ownership to the group root:
# chgrp root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace
/sbin/auditd /sbin/augenrules
",,TRUE
7.1.1,Ensure access to /etc/passwd is configured,"
The /etc/passwd file contains user account information that is used by many system
utilities and therefore must be readable for these utilities to operate.
","
Run the following commands to remove excess permissions, set owner, and set group
on /etc/passwd:
# chmod u-x,go-wx /etc/passwd
# chown root:root /etc/passwd
Default Value:
Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
",,TRUE
7.1.2,Ensure access to /etc/passwd- is configured,"
The /etc/passwd- file contains backup user account information.
","
Run the following commands to remove excess permissions, set owner, and set group
on /etc/passwd-:
# chmod u-x,go-wx /etc/passwd-
# chown root:root /etc/passwd-
Default Value:
Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: { 0/ root)
",,TRUE
7.1.3,Ensure access to /etc/group is configured,"
The /etc/group file contains a list of all the valid groups defined in the system. The
command below allows read/write access for root and read access for everyone else.
","
Run the following commands to remove excess permissions, set owner, and set group
on /etc/group:
# chmod u-x,go-wx /etc/group
# chown root:root /etc/group
Default Value:
Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
",,TRUE
7.1.4,Ensure access to /etc/group- is configured,"
The /etc/group- file contains a backup list of all the valid groups defined in the
system.
","
Run the following commands to remove excess permissions, set owner, and set group
on /etc/group-:
# chmod u-x,go-wx /etc/group-
# chown root:root /etc/group-
Default Value:
Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
",,TRUE
7.1.5,Ensure access to /etc/shadow is configured,"
The /etc/shadow file is used to store the information about user accounts that is critical
to the security of those accounts, such as the hashed password and other security
information.
","
Run one of the following commands to set ownership of /etc/shadow to root and
group to either root or shadow:
# chown root:shadow /etc/shadow
-OR-
# chown root:root /etc/shadow
Run the following command to remove excess permissions form /etc/shadow:
# chmod u-x,g-wx,o-rwx /etc/shadow
Default Value:
Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)
",,TRUE
7.1.6,Ensure access to /etc/shadow- is configured,"
The /etc/shadow- file is used to store backup information about user accounts that is
critical to the security of those accounts, such as the hashed password and other
security information.
","
Run one of the following commands to set ownership of /etc/shadow- to root and
group to either root or shadow:
# chown root:shadow /etc/shadow-
-OR-
# chown root:root /etc/shadow-
Run the following command to remove excess permissions form /etc/shadow-:
# chmod u-x,g-wx,o-rwx /etc/shadow-
Default Value:
Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)
",,TRUE
7.1.7,Ensure access to /etc/gshadow is configured,"
The /etc/gshadow file is used to store the information about groups that is critical to
the security of those accounts, such as the hashed password and other security
information.
","
Run one of the following commands to set ownership of /etc/gshadow to root and
group to either root or shadow:
# chown root:shadow /etc/gshadow
-OR-
# chown root:root /etc/gshadow
Run the following command to remove excess permissions form /etc/gshadow:
# chmod u-x,g-wx,o-rwx /etc/gshadow
Default Value:
Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)
",,TRUE
7.1.8,Ensure access to /etc/gshadow- is configured,"
The /etc/gshadow- file is used to store backup information about groups that is critical
to the security of those accounts, such as the hashed password and other security
information.
","
Run one of the following commands to set ownership of /etc/gshadow- to root and
group to either root or shadow:
# chown root:shadow /etc/gshadow-
-OR-
# chown root:root /etc/gshadow-
Run the following command to remove excess permissions form /etc/gshadow-:
# chmod u-x,g-wx,o-rwx /etc/gshadow-
Default Value:
Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)
",,TRUE
7.1.9,Ensure access to /etc/shells is configured,"
/etc/shells is a text file which contains the full pathnames of valid login shells. This
file is consulted by chsh and available to be queried by other programs.
","
Run the following commands to remove excess permissions, set owner, and set group
on /etc/shells:
# chmod u-x,go-wx /etc/shells
# chown root:root /etc/shells
Default Value:
Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
",,TRUE
7.1.10,Ensure access to /etc/security/opasswd is configured,"
/etc/security/opasswd and it's backup /etc/security/opasswd.old hold user's
previous passwords if pam_unix or pam_pwhistory is in use on the system
","
Run the following commands to remove excess permissions, set owner, and set group
on /etc/security/opasswd and /etc/security/opasswd.old is they exist:
# [ -e ""/etc/security/opasswd"" ] && chmod u-x,go-rwx /etc/security/opasswd
# [ -e ""/etc/security/opasswd"" ] && chown root:root /etc/security/opasswd
# [ -e ""/etc/security/opasswd.old"" ] && chmod u-x,go-rwx
/etc/security/opasswd.old
# [ -e ""/etc/security/opasswd.old"" ] && chown root:root
/etc/security/opasswd.old
Default Value:
/etc/security/opasswd Access: (0600/-rw-------) Uid: ( 0/ root) Gid: ( 0/ root)
",,TRUE
7.1.11,Ensure world writable files and directories are secured,"
World writable files are the least secure. Data in world-writable files can be modified and
compromised by any user on the system. World writable files may also indicate an
incorrectly written script or program that could potentially be the cause of a larger
compromise to the system's integrity. See the chmod(2) man page for more
information.
Setting the sticky bit on world writable directories prevents users from deleting or
renaming files in that directory that are not owned by them.
","
• World Writable Files:
o It is recommended that write access is removed from other with the
command ( chmod o-w <filename> ), but always consult relevant vendor
documentation to avoid breaking any application dependencies on a given
file.
• World Writable Directories:
o Set the sticky bit on all world writable directories with the command (
chmod a+t <directory_name> )
Run the following script to:
• Remove other write permission from any world writable files
• Add the sticky bit to all world writable directories
#!/usr/bin/env bash
{
l_smask='01000'
a_file=(); a_dir=() # Initialize arrays
a_path=(! -path ""/run/user/*"" -a ! -path ""/proc/*"" -a ! -path
""*/containerd/*"" -a ! -path ""*/kubelet/pods/*"" -a ! -path
""*/kubelet/plugins/*"" -a ! -path ""/sys/*"" -a ! -path ""/snap/*"")
while IFS= read -r l_mount; do
while IFS= read -r -d $'\0' l_file; do
if [ -e ""$l_file"" ]; then
l_mode=""$(stat -Lc '%#a' ""$l_file"")""
if [ -f ""$l_file"" ]; then # Remove excess permissions from WW
files
echo -e "" - File: \""$l_file\"" is mode: \""$l_mode\""\n -
removing write permission on \""$l_file\"" from \""other\""""
chmod o-w ""$l_file""
fi
if [ -d ""$l_file"" ]; then # Add sticky bit
if [ ! $(( $l_mode & $l_smask )) -gt 0 ]; then
echo -e "" - Directory: \""$l_file\"" is mode: \""$l_mode\"" and
doesn't have the sticky bit set\n - Adding the sticky bit""
chmod a+t ""$l_file""
fi
fi
fi
done < <(find ""$l_mount"" -xdev \( ""${a_path[@]}"" \) \( -type f -o -type
d \) -perm -0002 -print0 2> /dev/null)
done < <(findmnt -Dkerno fstype,target | awk '($1 !~
/^\s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ && $2 !~
/^(\/run\/user\/|\/tmp|\/var\/tmp)/){print $2}')
}
",,TRUE
7.1.12,Ensure no files or directories without an owner and a group exist,"
Administrators may delete users or groups from the system and neglect to remove all
files and/or directories owned by those users or groups.
","
Remove or set ownership and group ownership of these files and/or directories to an
active user on the system as appropriate.
",,TRUE
7.2.1,Ensure accounts in /etc/passwd use shadowed passwords,"
Local accounts can uses shadowed passwords. With shadowed passwords, The
passwords are saved in shadow password file, /etc/shadow, encrypted by a salted
one-way hash. Accounts with a shadowed password have an x in the second field in
/etc/passwd.
","
Run the following command to set accounts to use shadowed passwords and migrate
passwords in /etc/passwd to /etc/shadow:
# pwconv
Investigate to determine if the account is logged in and what it is being used for, to
determine if it needs to be forced off.
",,TRUE
7.2.2,Ensure /etc/shadow password fields are not empty,"
An account with an empty password field means that anybody may log in as that user
without providing a password.
","
If any accounts in the /etc/shadow file do not have a password, run the following
command to lock the account until it can be determined why it does not have a
password:
# passwd -l <username>
Also, check to see if the account is logged in and investigate what it is being used for to
determine if it needs to be forced off.
",,TRUE
7.2.3,Ensure all groups in /etc/passwd exist in /etc/group,"
Over time, system administration errors and changes can lead to groups being defined
in /etc/passwd but not in /etc/group.
","
Analyze the output of the Audit and perform the appropriate action to correct
any discrepancies found.
",,TRUE
7.2.4,Ensure no duplicate UIDs exist,"
Although the useradd program will not let you create a duplicate User ID (UID), it is
possible for an administrator to manually edit the /etc/passwd file and change the UID
field.
","
Based on the results of the audit script, establish unique UIDs and review all files owned
by the shared UIDs to determine which UID they are supposed to belong to.
",,TRUE
7.2.5,Ensure no duplicate GIDs exist,"
Although the groupadd program will not let you create a duplicate Group ID (GID), it is
possible for an administrator to manually edit the /etc/group file and change the GID
field.
","
Based on the results of the audit script, establish unique GIDs and review all files
owned by the shared GID to determine which group they are supposed to belong to.
",,TRUE
7.2.6,Ensure no duplicate user names exist,"
Although the useradd program will not let you create a duplicate user name, it is
possible for an administrator to manually edit the /etc/passwd file and change the user
name.
","
Based on the results of the audit script, establish unique user names for the users. File
ownerships will automatically reflect the change as long as the users have unique UIDs.
",,TRUE
7.2.7,Ensure no duplicate group names exist,"
Although the groupadd program will not let you create a duplicate group name, it is
possible for an administrator to manually edit the /etc/group file and change the group
name.
","
Based on the results of the audit script, establish unique names for the user groups. File
group ownerships will automatically reflect the change as long as the groups have
unique GIDs.
",,TRUE
7.2.8,Ensure local interactive user home directories are configured,"
The user home directory is space defined for the particular user to set local environment
variables and to store personal files. While the system administrator can establish
secure permissions for users' home directories, the users can easily override these.
Users can be defined in /etc/passwd without a home directory or with a home directory
that does not actually exist.
","
If a local interactive users' home directory is undefined and/or doesn't exist, follow local
site policy and perform one of the following:
• Lock the user account
• Remove the user from the system
• create a directory for the user. If undefined, edit /etc/passwd and add the
absolute path to the directory to the last field of the user.
Run the following script to:
• Remove excessive permissions from local interactive users home directories
• Update the home directory's owner
#!/usr/bin/env bash
{
a_output=() a_output2=() a_exists2=() a_mode2=() a_owner2=()
l_valid_shells=""^($( awk -F\/ '$NF != ""nologin"" {print}' /etc/shells | sed
-rn '/^\//{s,/,\\\\/,g;p}' | paste -s -d '|' - ))$""
l_mask='0027'; l_max=""$( printf '%o' $(( 0777 & ~$l_mask)) )""
l_users=""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" ""
$(NF-1) }' /etc/passwd | wc -l)""
[ ""$l_users"" -gt 10000 ] && printf '%s\n' """" "" ** INFO **"" \
"" $l_users Local interactive users found on the system"" "" This may be a
long running process"" "" **********""
while IFS="" "" read -r l_user l_home; do
if [ -d ""$l_home"" ]; then
while IFS=: read -r l_own l_mode; do
if [ ""$l_user"" != ""$l_own"" ]; then
a_owner2+=("" - User: \""$l_user\"" Home \""$l_home\"" is owned
by: \""$l_own\"""" \
"" changing owner to: \""$l_user\"""") && chown ""$l_user""
""$l_home""
fi
if [ $(( $l_mode & $l_mask )) -gt 0 ]; then
a_mode2+=("" - User: \""$l_user\"" Home \""$l_home\"" is mode:
\""$l_mode\"""" \
"" changing to mode: \""$l_max\"" or more restrictive"")
chmod g-w,o-rwx ""$l_home""
fi
done <<< ""$(stat -Lc '%U:%#a' ""$l_home"")""
else
a_exists2+=("" - User: \""$l_user\"" Home Directory: \""$l_home\""
Doesn't exist"")
fi
done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" ""
$(NF-1) }' /etc/passwd)""
[ ""${#a_exists2[@]}"" -gt 0 ] && a_output2+=(""${a_exists2[@]}"")
[ ""${#a_mode2[@]}"" -gt 0 ] && a_output2+=(""${a_mode2[@]}"")
[ ""${#a_owner2[@]}"" -gt 0 ] && a_output2+=(""${a_owner2[@]}"")
if [ ""${#a_output2[@]}"" -gt 0 ]; then
printf '%s\n' """" ""${a_output2[@]}""
else
printf '%s\n' """" ""- No changes required""
fi
}
",,TRUE
7.2.9,Ensure local interactive user dot files access is configured,"
While the system administrator can establish secure permissions for users' ""dot"" files,
the users can easily override these.
• .forward file specifies an email address to forward the user's mail to.
• .rhost file provides the ""remote authentication"" database for the rcp, rlogin, and
rsh commands and the rcmd() function. These files bypass the standard
password-based user authentication mechanism. They specify remote hosts and
users that are considered trusted (i.e. are allowed to access the local system
without supplying a password)
• .netrc file contains data for logging into a remote host or passing authentication
to an API.
• .bash_history file keeps track of the user's commands
","
Making global modifications to users' files without alerting the user community can result
in unexpected outages and unhappy users. Therefore, it is recommended that a
monitoring policy be established to report user dot file permissions and determine the
action to be taken in accordance with site policy.
The following script will:
• remove excessive permissions on dot files within interactive users' home
directories
• change ownership of dot files within interactive users' home directories to the
user
• change group ownership of dot files within interactive users' home directories to
the user's primary group
• list .forward and .rhost files to be investigated and manually deleted
#!/usr/bin/env bash
{
a_output2=(); a_output3=()
l_maxsize=""1000"" # Maximum number of local interactive users before
warning (Default 1,000)
l_valid_shells=""^($( awk -F\/ '$NF != ""nologin"" {print}' /etc/shells | sed
-rn '/^\//{s,/,\\\\/,g;p}' | paste -s -d '|' - ))$""
a_user_and_home=() # Create array with local users and their home
directories
while read -r l_local_user l_local_user_home; do # Populate array with
users and user home location
[[ -n ""$l_local_user"" && -n ""$l_local_user_home"" ]] &&
a_user_and_home+=(""$l_local_user:$l_local_user_home"")
done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" ""
$(NF-1) }' /etc/passwd)""
l_asize=""${#a_user_and_home[@]}"" # Here if we want to look at number of
users before proceeding
[ ""${#a_user_and_home[@]}"" -gt ""$l_maxsize"" ] && printf '%s\n' """" "" **
INFO **"" \
"" - \""$l_asize\"" Local interactive users found on the system"" \
"" - This may be a long running check"" """"
file_access_fix()
{
a_access_out=()
l_max=""$( printf '%o' $(( 0777 & ~$l_mask)) )""
if [ $(( $l_mode & $l_mask )) -gt 0 ]; then
printf '%s\n' """" "" - File: \""$l_hdfile\"" is mode: \""$l_mode\"" and
should be mode: \""$l_max\"" or more restrictive"" \
"" Updating file: \""$l_hdfile\"" to be mode: \""$l_max\"" or more
restrictive""
chmod ""$l_change"" ""$l_hdfile""
fi
if [[ ! ""$l_owner"" =~ ($l_user) ]]; then
printf '%s\n' """" "" - File: \""$l_hdfile\"" owned by: \""$l_owner\"" and
should be owned by \""${l_user//|/ or }\"""" \
"" Updating file: \""$l_hdfile\"" to be owned by \""${l_user//|/ or
}\""""
chown ""$l_user"" ""$l_hdfile""
fi
if [[ ! ""$l_gowner"" =~ ($l_group) ]]; then
printf '%s\n' """" "" - File: \""$l_hdfile\"" group owned by:
\""$l_gowner\"" and should be group owned by \""${l_group//|/ or }\"""" \
"" Updating file: \""$l_hdfile\"" to be group owned by
\""${l_group//|/ or }\""""
chgrp ""$l_group"" ""$l_hdfile""
fi
}
while IFS=: read -r l_user l_home; do
a_dot_file=(); a_netrc=(); a_netrc_warn=(); a_bhout=(); a_hdirout=()
if [ -d ""$l_home"" ]; then
l_group=""$(id -gn ""$l_user"" | xargs)"";l_group=""${l_group// /|}""
while IFS= read -r -d $'\0' l_hdfile; do
while read -r l_mode l_owner l_gowner; do
case ""$(basename ""$l_hdfile"")"" in
.forward | .rhost )
a_dot_file+=("" - File: \""$l_hdfile\"" exists"" ""
Please review and manually delete this file"") ;;
.netrc )
l_mask='0177'; l_change=""u-x,go-rwx""; file_access_fix
a_netrc_warn+=("" - File: \""$l_hdfile\"" exists"") ;;
.bash_history )
l_mask='0177'; l_change=""u-x,go-rwx""; file_access_fix ;;
* )
l_mask='0133'; l_change=""u-x,go-wx""; file_access_fix ;;
esac
done < <(stat -Lc '%#a %U %G' ""$l_hdfile"")
done < <(find ""$l_home"" -xdev -type f -name '.*' -print0)
fi
[ ""${#a_dot_file[@]}"" -gt 0 ] && a_output2+=("" - User: \""$l_user\"" Home
Directory: \""$l_home\"""" ""${a_dot_file[@]}"")
[ ""${#a_netrc_warn[@]}"" -gt 0 ] && a_output3+=("" - User: \""$l_user\""
Home Directory: \""$l_home\"""" ""${a_netrc_warn[@]}"")
done <<< ""$(printf '%s\n' ""${a_user_and_home[@]}"")""
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" ** WARNING **""
""${a_output3[@]}"" """"
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}""
}
",,TRUE
