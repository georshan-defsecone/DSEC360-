audit_id: "6.1.3"
audit_name: "Ensure cryptographic mechanisms are used to protect the integrity of audit tools"
audit_script: """
{
a_output=(); a_output2=(); a_output3=(); a_parlist=()
l_systemd_analyze="$(command -v systemd-analyze)"
a_audit_files=("auditctl" "auditd" "ausearch" "aureport" "autrace" "augenrules")

# Check audit tool configuration block
f_parameter_chk() {
  for l_tool_file in "${a_parlist[@]}"; do
    if grep -Pq -- "\b$l_tool_file\b" <<< "${!A_out[*]}"; then
      for l_string in "${!A_out[@]}"; do
        l_check="$(grep -Po -- "^\h*(/usr)?/sbin/$l_tool_file\b" <<< "$l_string")"
        if [ -n "$l_check" ]; then
          l_fname="${A_out[$l_string]}"
          # Warn if path is a symlink
          if [ "$l_check" != "$(readlink -f "$l_check")" ]; then
            a_output3+=(" - \"$l_check\" should be updated to: \"$(readlink -f "$l_check")\" in: \"$l_fname\"")
          fi

          # Check for all required options
          a_missing=()
          for l_var in "${a_items[@]}"; do
            if ! grep -Pq -- "\b$l_var\b" <<< "$l_string"; then
              a_missing+=("\"$l_var\"")
            fi
          done

          if [ "${#a_missing[@]}" -gt 0 ]; then
            a_output2+=(" - Option(s): ( ${a_missing[*]} ) are missing from: \"$l_tool_file\" in: \"$l_fname\"")
          else
            a_output+=(" - Audit tool \"$l_tool_file\" is correctly listed in: \"$l_fname\" as: $l_string")
          fi
        fi
      done
    else
      a_output2+=(" - Audit tool file \"$l_tool_file\" not listed in any AIDE config")
    fi
  done
}

# Parse aide.conf
f_aide_conf() {
  l_config_file="$(command -v aide.conf || echo "/etc/aide.conf")"
  [ ! -f "$l_config_file" ] && l_config_file="/etc/aide.conf"

  if [ -f "$l_config_file" ]; then
    a_items=("p" "i" "n" "u" "g" "s" "b" "acl" "xattrs" "sha512")
    declare -A A_out

    while IFS= read -r l_out; do
      if grep -Pq -- '^\h*\#\h*/[^#\n\r]+\.conf\b' <<< "$l_out"; then
        l_file="${l_out//# /}"
      else
        for i in "${a_parlist[@]}"; do
          if grep -Pq -- "^\h*(/usr)?/sbin/$i\b" <<< "$l_out"; then
            A_out["$l_out"]="$l_file"
          fi
        done
      fi
    done < <("$l_systemd_analyze" cat-config "$l_config_file" | grep -Pio '^\h*([^#\n\r]+|#\h*/[^#\n\r\h]+\.conf\b)')

    if [ "${#A_out[@]}" -gt 0 ]; then
      f_parameter_chk
    else
      a_output2+=(" - No audit tool paths are configured in the AIDE config")
    fi
  else
    a_output2+=(" - AIDE configuration file not found. Please ensure AIDE is installed.")
  fi
}

# Check if audit tools exist
for l_audit_file in "${a_audit_files[@]}"; do
  l_bin_path="$(readlink -f "/sbin/$l_audit_file" 2>/dev/null)"
  if [ -f "$l_bin_path" ]; then
    a_parlist+=("$l_audit_file")
  else
    a_output+=(" - Audit tool \"$l_audit_file\" not found at: $l_bin_path")
  fi
done

[ "${#a_parlist[@]}" -gt 0 ] && f_aide_conf

# Final output
if [ "${#a_output2[@]}" -eq 0 ]; then
  echo -e "\n- Audit Result:\n ** PASS **"
  printf '%s\n' "${a_output[@]}"
  [ "${#a_output3[@]}" -gt 0 ] && echo -e "\n ** WARNING **" && printf '%s\n' "${a_output3[@]}"
else
  echo -e "\n- Audit Result:\n ** FAIL **\n - * Reasons for audit failure *"
  printf '%s\n' "${a_output2[@]}"
  [ "${#a_output3[@]}" -gt 0 ] && echo -e "\n ** WARNING **" && printf '%s\n' "${a_output3[@]}"
  [ "${#a_output[@]}" -gt 0 ] && echo -e "\n- Correctly set:" && printf '%s\n' "${a_output[@]}"
fi
}
""""