audit_id: "6.3.3.9"
audit_name: "Ensure discretionary access control permission modification events are collected"
audit_script: """
{
echo "### Audit Check: Permission and Ownership Modification Syscalls"

UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -z "$UID_MIN" ] && {
  echo -e "\n- Audit Result:"
  echo " ** FAIL **"
  echo " - Could not determine UID_MIN from /etc/login.defs"
  exit 1
}

expected_rules_disk=(
  "-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod"
  "-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod"
  "-a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod"
  "-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod"
  "-a always,exit -F arch=b32 -S chown,fchown,lchown,fchownat -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod"
  "-a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=unset -F key=perm_mod"
)

expected_rules_run=(
  "-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=-1 -F key=perm_mod"
  "-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=${UID_MIN} -F auid!=-1 -F key=perm_mod"
  "-a always,exit -F arch=b64 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=-1 -F key=perm_mod"
  "-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F auid!=-1 -F key=perm_mod"
  "-a always,exit -F arch=b32 -S chown,fchown,lchown,fchownat -F auid>=${UID_MIN} -F auid!=-1 -F key=perm_mod"
  "-a always,exit -F arch=b32 -S setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F auid>=${UID_MIN} -F auid!=-1 -F key=perm_mod"
)

echo -e "\n Checking On-Disk Audit Rules..."
missing_disk=()
on_disk_rules=$(awk '
  /^\s*-a\s+always,exit/ &&
  /-F\s+arch=b(32|64)/ &&
  /-S/ &&
  (/chmod/ || /fchmod/ || /fchmodat/ ||
   /chown/ || /fchown/ || /fchownat/ || /lchown/ ||
   /setxattr/ || /lsetxattr/ || /fsetxattr/ ||
   /removexattr/ || /lremovexattr/ || /fremovexattr/) &&
  /-F\s+auid/ &&
  (/key=| -k /)
' /etc/audit/rules.d/*.rules 2>/dev/null)

for rule in "${expected_rules_disk[@]}"; do
  grep -qF -- "$rule" <<< "$on_disk_rules" || missing_disk+=("$rule")
done

if [ "${#missing_disk[@]}" -eq 0 ]; then
  echo -e " - All expected on-disk syscall audit rules are present."
  echo -e "\n- On-Disk Audit Result:"
  echo " ** PASS **"
else
  echo -e "\n- On-Disk Audit Result:"
  echo " ** FAIL **"
  echo " - Missing on-disk rules:"
  printf '   %s\n' "${missing_disk[@]}"
fi


missing_runtime=()
running_rules=$(auditctl -l 2>/dev/null)

for rule in "${expected_rules_run[@]}"; do
  grep -qF -- "$rule" <<< "$running_rules" || missing_runtime+=("$rule")
done

if [ "${#missing_runtime[@]}" -eq 0 ]; then
  echo -e " - All expected running syscall audit rules are present."
  echo -e "\n- Runtime Audit Result:"
  echo " ** PASS **"
else
  echo -e "\n- Runtime Audit Result:"
  echo "FAIL"
  echo " - Missing runtime rules:"
  printf '   %s\n' "${missing_runtime[@]}"
fi
}
""""