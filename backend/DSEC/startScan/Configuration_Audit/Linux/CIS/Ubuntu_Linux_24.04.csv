audit_id,audit_name,audit_description,audit_remediation,check
1.1.1.1,Ensure cramfs kernel module is not available,The cramfs filesystem type is a compressed read-only Linux filesystem embedded in small footprint systems. A cramfs image can be used without having to first decompress the image.,"
Run the following script to unload and disable the cramfs module:
- IF - the cramfs kernel module is available in ANY installed kernel:
• Create a file ending in .conf with install cramfs /bin/false in the
/etc/modprobe.d/ directory
• Create a file ending in .conf with blacklist cramfs in the /etc/modprobe.d/
directory
• Run modprobe -r cramfs 2>/dev/null; rmmod cramfs 2>/dev/null to
remove cramfs from the kernel
- IF - the cramfs kernel module is not available on the system, or pre-compiled into the
kernel, no remediation is necessary
#!/usr/bin/env bash
{
a_output2=() a_output3=() l_dl="""" l_mod_name=""cramfs"" l_mod_type=""fs""
l_mod_path=""$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)""
f_module_fix()
{
l_dl=""y"" a_showconfig=()
while IFS= read -r l_showconfig; do
a_showconfig+=(""$l_showconfig"")
done < <(modprobe --showconfig | grep -P --
'\b(install|blacklist)\h+'""${l_mod_chk_name//-/_}""'\b')
if lsmod | grep ""$l_mod_chk_name"" &> /dev/null; then
a_output2+=("" - unloading kernel module: \""$l_mod_name\"""")
modprobe -r ""$l_mod_chk_name"" 2>/dev/null; rmmod ""$l_mod_name""
2>/dev/null
fi
if ! grep -Pq -- '\binstall\h+'""${l_mod_chk_name//-
/_}""'\h+(\/usr)?\/bin\/(true|false)\b' <<< ""${a_showconfig[*]}""; then
a_output2+=("" - setting kernel module: \""$l_mod_name\"" to
\""$(readlink -f /bin/false)\"""")
printf '%s\n' ""install $l_mod_chk_name $(readlink -f /bin/false)"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
if ! grep -Pq -- '\bblacklist\h+'""${l_mod_chk_name//-/_}""'\b' <<<
""${a_showconfig[*]}""; then
a_output2+=("" - denylisting kernel module: \""$l_mod_name\"""")
printf '%s\n' ""blacklist $l_mod_chk_name"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
}
for l_mod_base_directory in $l_mod_path; do # Check if the module exists
on the system
if [ -d ""$l_mod_base_directory/${l_mod_name/-/\/}"" ] && [ -n ""$(ls -A
""$l_mod_base_directory/${l_mod_name/-/\/}"")"" ]; then
a_output3+=("" - \""$l_mod_base_directory\"""")
l_mod_chk_name=""$l_mod_name""
[[ ""$l_mod_name"" =~ overlay ]] && l_mod_chk_name=""${l_mod_name::-2}""
[ ""$l_dl"" != ""y"" ] && f_module_fix
else
printf '%s\n' "" - kernel module: \""$l_mod_name\"" doesn't exist in
\""$l_mod_base_directory\""""
fi
done
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" -- INFO --"" "" - module:
\""$l_mod_name\"" exists in:"" ""${a_output3[@]}""
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}"" ||
printf '%s\n' """" "" - No changes needed""
printf '%s\n' """" "" - remediation of kernel module: \""$l_mod_name\""
complete"" """"
}
",True
1.1.1.2,Ensure freevxfs kernel module is not available,"The freevxfs filesystem type is a free version of the Veritas type filesystem. This is the
primary filesystem type for HP-UX operating systems.","
Run the following script to unload and disable the freevxfs module:
- IF - the freevxfs kernel module is available in ANY installed kernel:
• Create a file ending in .conf with install freevxfs /bin/false in the
/etc/modprobe.d/ directory
• Create a file ending in .conf with blacklist freevxfs in the
/etc/modprobe.d/ directory
• Run modprobe -r freevxfs 2>/dev/null; rmmod freevxfs 2>/dev/null
to remove freevxfs from the kernel
- IF - the freevxfs kernel module is not available on the system, or pre-compiled into
the kernel, no remediation is necessary
#!/usr/bin/env bash
{
a_output2=() a_output3=() l_dl="""" l_mod_name=""freevxfs"" l_mod_type=""fs""
l_mod_path=""$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)""
f_module_fix()
{
l_dl=""y"" a_showconfig=()
while IFS= read -r l_showconfig; do
a_showconfig+=(""$l_showconfig"")
done < <(modprobe --showconfig | grep -P --
'\b(install|blacklist)\h+'""${l_mod_chk_name//-/_}""'\b')
if lsmod | grep ""$l_mod_chk_name"" &> /dev/null; then
a_output2+=("" - unloading kernel module: \""$l_mod_name\"""")
modprobe -r ""$l_mod_chk_name"" 2>/dev/null; rmmod ""$l_mod_name""
2>/dev/null
fi
if ! grep -Pq -- '\binstall\h+'""${l_mod_chk_name//-
/_}""'\h+(\/usr)?\/bin\/(true|false)\b' <<< ""${a_showconfig[*]}""; then
a_output2+=("" - setting kernel module: \""$l_mod_name\"" to
\""$(readlink -f /bin/false)\"""")
printf '%s\n' ""install $l_mod_chk_name $(readlink -f /bin/false)"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
if ! grep -Pq -- '\bblacklist\h+'""${l_mod_chk_name//-/_}""'\b' <<<
""${a_showconfig[*]}""; then
a_output2+=("" - denylisting kernel module: \""$l_mod_name\"""")
printf '%s\n' ""blacklist $l_mod_chk_name"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
}
for l_mod_base_directory in $l_mod_path; do # Check if the module exists
on the system
if [ -d ""$l_mod_base_directory/${l_mod_name/-/\/}"" ] && [ -n ""$(ls -A
""$l_mod_base_directory/${l_mod_name/-/\/}"")"" ]; then
a_output3+=("" - \""$l_mod_base_directory\"""")
l_mod_chk_name=""$l_mod_name""
[[ ""$l_mod_name"" =~ overlay ]] && l_mod_chk_name=""${l_mod_name::-2}""
[ ""$l_dl"" != ""y"" ] && f_module_fix
else
printf '%s\n' "" - kernel module: \""$l_mod_name\"" doesn't exist in
\""$l_mod_base_directory\""""
fi
done
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" -- INFO --"" "" - module:
\""$l_mod_name\"" exists in:"" ""${a_output3[@]}""
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}"" ||
printf '%s\n' """" "" - No changes needed""
printf '%s\n' """" "" - remediation of kernel module: \""$l_mod_name\""
complete"" """"
}
",True
1.1.1.3,Ensure hfs kernel module is not available,"The hfs filesystem type is a hierarchical filesystem that allows you to mount Mac OS
filesystems.","
Run the following script to unload and disable the hfs module:
- IF - the hfs kernel module is available in ANY installed kernel:
• Create a file ending in .conf with install hfs /bin/false in the
/etc/modprobe.d/ directory
• Create a file ending in .conf with blacklist hfs in the /etc/modprobe.d/
directory
• Run modprobe -r hfs 2>/dev/null; rmmod hfs 2>/dev/null to remove
hfs from the kernel
- IF - the hfs kernel module is not available on the system, or pre-compiled into the
kernel, no remediation is necessary
#!/usr/bin/env bash
{
a_output2=() a_output3=() l_dl="""" l_mod_name=""hfs"" l_mod_type=""fs""
l_mod_path=""$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)""
f_module_fix()
{
l_dl=""y"" a_showconfig=()
while IFS= read -r l_showconfig; do
a_showconfig+=(""$l_showconfig"")
done < <(modprobe --showconfig | grep -P --
'\b(install|blacklist)\h+'""${l_mod_chk_name//-/_}""'\b')
if lsmod | grep ""$l_mod_chk_name"" &> /dev/null; then
a_output2+=("" - unloading kernel module: \""$l_mod_name\"""")
modprobe -r ""$l_mod_chk_name"" 2>/dev/null; rmmod ""$l_mod_name""
2>/dev/null
fi
if ! grep -Pq -- '\binstall\h+'""${l_mod_chk_name//-
/_}""'\h+(\/usr)?\/bin\/(true|false)\b' <<< ""${a_showconfig[*]}""; then
a_output2+=("" - setting kernel module: \""$l_mod_name\"" to
\""$(readlink -f /bin/false)\"""")
printf '%s\n' ""install $l_mod_chk_name $(readlink -f /bin/false)"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
if ! grep -Pq -- '\bblacklist\h+'""${l_mod_chk_name//-/_}""'\b' <<<
""${a_showconfig[*]}""; then
a_output2+=("" - denylisting kernel module: \""$l_mod_name\"""")
printf '%s\n' ""blacklist $l_mod_chk_name"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
}
for l_mod_base_directory in $l_mod_path; do # Check if the module exists
on the system
if [ -d ""$l_mod_base_directory/${l_mod_name/-/\/}"" ] && [ -n ""$(ls -A
""$l_mod_base_directory/${l_mod_name/-/\/}"")"" ]; then
a_output3+=("" - \""$l_mod_base_directory\"""")
l_mod_chk_name=""$l_mod_name""
[[ ""$l_mod_name"" =~ overlay ]] && l_mod_chk_name=""${l_mod_name::-2}""
[ ""$l_dl"" != ""y"" ] && f_module_fix
else
printf '%s\n' "" - kernel module: \""$l_mod_name\"" doesn't exist in
\""$l_mod_base_directory\""""
fi
done
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" -- INFO --"" "" - module:
\""$l_mod_name\"" exists in:"" ""${a_output3[@]}""
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}"" ||
printf '%s\n' """" "" - No changes needed""
printf '%s\n' """" "" - remediation of kernel module: \""$l_mod_name\""
complete"" """"
}
",True
1.1.1.4,Ensure hfsplus kernel module is not available,"The hfsplus filesystem type is a hierarchical filesystem designed to replace hfs that
allows you to mount Mac OS filesystems.","
Run the following script to unload and disable the hfsplus module:
- IF - the hfsplus kernel module is available in ANY installed kernel:
• Create a file ending in .conf with install hfsplus /bin/false in the
/etc/modprobe.d/ directory
• Create a file ending in .conf with blacklist hfsplus in the
/etc/modprobe.d/ directory
• Run modprobe -r hfsplus 2>/dev/null; rmmod hfsplus 2>/dev/null to
remove hfsplus from the kernel
- IF - the hfsplus kernel module is not available on the system, or pre-compiled into the
kernel, no remediation is necessary
#!/usr/bin/env bash
{
a_output2=() a_output3=() l_dl="""" l_mod_name=""hfsplus"" l_mod_type=""fs""
l_mod_path=""$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)""
f_module_fix()
{
l_dl=""y"" a_showconfig=()
while IFS= read -r l_showconfig; do
a_showconfig+=(""$l_showconfig"")
done < <(modprobe --showconfig | grep -P --
'\b(install|blacklist)\h+'""${l_mod_chk_name//-/_}""'\b')
if lsmod | grep ""$l_mod_chk_name"" &> /dev/null; then
a_output2+=("" - unloading kernel module: \""$l_mod_name\"""")
modprobe -r ""$l_mod_chk_name"" 2>/dev/null; rmmod ""$l_mod_name""
2>/dev/null
fi
if ! grep -Pq -- '\binstall\h+'""${l_mod_chk_name//-
/_}""'\h+(\/usr)?\/bin\/(true|false)\b' <<< ""${a_showconfig[*]}""; then
a_output2+=("" - setting kernel module: \""$l_mod_name\"" to
\""$(readlink -f /bin/false)\"""")
printf '%s\n' ""install $l_mod_chk_name $(readlink -f /bin/false)"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
if ! grep -Pq -- '\bblacklist\h+'""${l_mod_chk_name//-/_}""'\b' <<<
""${a_showconfig[*]}""; then
a_output2+=("" - denylisting kernel module: \""$l_mod_name\"""")
printf '%s\n' ""blacklist $l_mod_chk_name"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
}
for l_mod_base_directory in $l_mod_path; do # Check if the module exists
on the system
if [ -d ""$l_mod_base_directory/${l_mod_name/-/\/}"" ] && [ -n ""$(ls -A
""$l_mod_base_directory/${l_mod_name/-/\/}"")"" ]; then
a_output3+=("" - \""$l_mod_base_directory\"""")
l_mod_chk_name=""$l_mod_name""
[[ ""$l_mod_name"" =~ overlay ]] && l_mod_chk_name=""${l_mod_name::-2}""
[ ""$l_dl"" != ""y"" ] && f_module_fix
else
printf '%s\n' "" - kernel module: \""$l_mod_name\"" doesn't exist in
\""$l_mod_base_directory\""""
fi
done
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" -- INFO --"" "" - module:
\""$l_mod_name\"" exists in:"" ""${a_output3[@]}""
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}"" ||
printf '%s\n' """" "" - No changes needed""
printf '%s\n' """" "" - remediation of kernel module: \""$l_mod_name\""
complete"" """"
}
",True
1.1.1.5,Ensure jffs2 kernel module is not available,"The jffs2 (journaling flash filesystem 2) filesystem type is a log-structured filesystem
used in flash memory devices.","
Run the following script to unload and disable the jffs2 module:
- IF - the jffs2 kernel module is available in ANY installed kernel:
• Create a file ending in .conf with install jffs2 /bin/false in the
/etc/modprobe.d/ directory
• Create a file ending in .conf with blacklist jffs2 in the /etc/modprobe.d/
directory
• Run modprobe -r jffs2 2>/dev/null; rmmod jffs2 2>/dev/null to
remove jffs2 from the kernel
- IF - the jffs2 kernel module is not available on the system, or pre-compiled into the
kernel, no remediation is necessary
#!/usr/bin/env bash
{
a_output2=() a_output3=() l_dl="""" l_mod_name=""jffs2"" l_mod_type=""fs""
l_mod_path=""$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)""
f_module_fix()
{
l_dl=""y"" a_showconfig=()
while IFS= read -r l_showconfig; do
a_showconfig+=(""$l_showconfig"")
done < <(modprobe --showconfig | grep -P --
'\b(install|blacklist)\h+'""${l_mod_chk_name//-/_}""'\b')
if lsmod | grep ""$l_mod_chk_name"" &> /dev/null; then
a_output2+=("" - unloading kernel module: \""$l_mod_name\"""")
modprobe -r ""$l_mod_chk_name"" 2>/dev/null; rmmod ""$l_mod_name""
2>/dev/null
fi
if ! grep -Pq -- '\binstall\h+'""${l_mod_chk_name//-
/_}""'\h+(\/usr)?\/bin\/(true|false)\b' <<< ""${a_showconfig[*]}""; then
a_output2+=("" - setting kernel module: \""$l_mod_name\"" to
\""$(readlink -f /bin/false)\"""")
printf '%s\n' ""install $l_mod_chk_name $(readlink -f /bin/false)"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
if ! grep -Pq -- '\bblacklist\h+'""${l_mod_chk_name//-/_}""'\b' <<<
""${a_showconfig[*]}""; then
a_output2+=("" - denylisting kernel module: \""$l_mod_name\"""")
printf '%s\n' ""blacklist $l_mod_chk_name"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
}
for l_mod_base_directory in $l_mod_path; do # Check if the module exists
on the system
if [ -d ""$l_mod_base_directory/${l_mod_name/-/\/}"" ] && [ -n ""$(ls -A
""$l_mod_base_directory/${l_mod_name/-/\/}"")"" ]; then
a_output3+=("" - \""$l_mod_base_directory\"""")
l_mod_chk_name=""$l_mod_name""
[[ ""$l_mod_name"" =~ overlay ]] && l_mod_chk_name=""${l_mod_name::-2}""
[ ""$l_dl"" != ""y"" ] && f_module_fix
else
printf '%s\n' "" - kernel module: \""$l_mod_name\"" doesn't exist in
\""$l_mod_base_directory\""""
fi
done
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" -- INFO --"" "" - module:
\""$l_mod_name\"" exists in:"" ""${a_output3[@]}""
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}"" ||
printf '%s\n' """" "" - No changes needed""
printf '%s\n' """" "" - remediation of kernel module: \""$l_mod_name\""
complete"" """"
}
",True
1.1.1.6,Ensure overlayfs kernel module is not available,"overlayfs is a Linux filesystem that layers multiple filesystems to create a single
unified view which allows a user to ""merge"" several mount points into a unified
filesystem.","
Run the following script to unload and disable the overlayfs module:
- IF - the overlayfs kernel module is available in ANY installed kernel:
• Create a file ending in .conf with install overlayfs /bin/false in the
/etc/modprobe.d/ directory
• Create a file ending in .conf with blacklist overlayfs in the
/etc/modprobe.d/ directory
• Run modprobe -r overlayfs 2>/dev/null; rmmod overlayfs
2>/dev/null to remove overlayfs from the kernel
- IF - the overlayfs kernel module is not available on the system, or pre-compiled into
the kernel, no remediation is necessary
#!/usr/bin/env bash
{
a_output2=() a_output3=() l_dl="""" l_mod_name=""overlayfs"" l_mod_type=""fs""
l_mod_path=""$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)""
f_module_fix()
{
l_dl=""y"" a_showconfig=()
while IFS= read -r l_showconfig; do
a_showconfig+=(""$l_showconfig"")
done < <(modprobe --showconfig | grep -P --
'\b(install|blacklist)\h+'""${l_mod_chk_name//-/_}""'\b')
if lsmod | grep ""$l_mod_chk_name"" &> /dev/null; then
a_output2+=("" - unloading kernel module: \""$l_mod_name\"""")
modprobe -r ""$l_mod_chk_name"" 2>/dev/null; rmmod ""$l_mod_name""
2>/dev/null
fi
if ! grep -Pq -- '\binstall\h+'""${l_mod_chk_name//-
/_}""'\h+(\/usr)?\/bin\/(true|false)\b' <<< ""${a_showconfig[*]}""; then
a_output2+=("" - setting kernel module: \""$l_mod_name\"" to
\""$(readlink -f /bin/false)\"""")
printf '%s\n' ""install $l_mod_chk_name $(readlink -f /bin/false)"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
if ! grep -Pq -- '\bblacklist\h+'""${l_mod_chk_name//-/_}""'\b' <<<
""${a_showconfig[*]}""; then
a_output2+=("" - denylisting kernel module: \""$l_mod_name\"""")
printf '%s\n' ""blacklist $l_mod_chk_name"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
}
for l_mod_base_directory in $l_mod_path; do # Check if the module exists
on the system
if [ -d ""$l_mod_base_directory/${l_mod_name/-/\/}"" ] && [ -n ""$(ls -A
""$l_mod_base_directory/${l_mod_name/-/\/}"")"" ]; then
a_output3+=("" - \""$l_mod_base_directory\"""")
l_mod_chk_name=""$l_mod_name""
[[ ""$l_mod_name"" =~ overlay ]] && l_mod_chk_name=""${l_mod_name::-2}""
[ ""$l_dl"" != ""y"" ] && f_module_fix
else
printf '%s\n' "" - kernel module: \""$l_mod_name\"" doesn't exist in
\""$l_mod_base_directory\""""
fi
done
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" -- INFO --"" "" - module:
\""$l_mod_name\"" exists in:"" ""${a_output3[@]}""
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}"" ||
printf '%s\n' """" "" - No changes needed""
printf '%s\n' """" "" - remediation of kernel module: \""$l_mod_name\""
complete"" """"
}
",True
1.1.1.7,Ensure squashfs kernel module is not available,"The squashfs filesystem type is a compressed read-only Linux filesystem embedded in
small footprint systems. A squashfs image can be used without having to first
decompress the image.","
Run the following script to unload and disable the udf module:
- IF - the squashfs kernel module is available in ANY installed kernel:
• Create a file ending in .conf with install squashfs /bin/false in the
/etc/modprobe.d/ directory
• Create a file ending in .conf with blacklist squashfs in the
/etc/modprobe.d/ directory
• Run modprobe -r squashfs 2>/dev/null; rmmod squashfs 2>/dev/null
to remove squashfs from the kernel
- IF - the squashfs kernel module is not available on the system, or pre-compiled into
the kernel, no remediation is necessary
#!/usr/bin/env bash
{
a_output2=() a_output3=() l_dl="""" l_mod_name=""squashfs"" l_mod_type=""fs""
l_mod_path=""$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)""
f_module_fix()
{
l_dl=""y"" a_showconfig=()
while IFS= read -r l_showconfig; do
a_showconfig+=(""$l_showconfig"")
done < <(modprobe --showconfig | grep -P --
'\b(install|blacklist)\h+'""${l_mod_chk_name//-/_}""'\b')
if lsmod | grep ""$l_mod_chk_name"" &> /dev/null; then
a_output2+=("" - unloading kernel module: \""$l_mod_name\"""")
modprobe -r ""$l_mod_chk_name"" 2>/dev/null; rmmod ""$l_mod_name""
2>/dev/null
fi
if ! grep -Pq -- '\binstall\h+'""${l_mod_chk_name//-
/_}""'\h+(\/usr)?\/bin\/(true|false)\b' <<< ""${a_showconfig[*]}""; then
a_output2+=("" - setting kernel module: \""$l_mod_name\"" to
\""$(readlink -f /bin/false)\"""")
printf '%s\n' ""install $l_mod_chk_name $(readlink -f /bin/false)"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
if ! grep -Pq -- '\bblacklist\h+'""${l_mod_chk_name//-/_}""'\b' <<<
""${a_showconfig[*]}""; then
a_output2+=("" - denylisting kernel module: \""$l_mod_name\"""")
printf '%s\n' ""blacklist $l_mod_chk_name"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
}
for l_mod_base_directory in $l_mod_path; do # Check if the module exists
on the system
if [ -d ""$l_mod_base_directory/${l_mod_name/-/\/}"" ] && [ -n ""$(ls -A
""$l_mod_base_directory/${l_mod_name/-/\/}"")"" ]; then
a_output3+=("" - \""$l_mod_base_directory\"""")
l_mod_chk_name=""$l_mod_name""
[[ ""$l_mod_name"" =~ overlay ]] && l_mod_chk_name=""${l_mod_name::-2}""
[ ""$l_dl"" != ""y"" ] && f_module_fix
else
printf '%s\n' "" - kernel module: \""$l_mod_name\"" doesn't exist in
\""$l_mod_base_directory\""""
fi
done
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" -- INFO --"" "" - module:
\""$l_mod_name\"" exists in:"" ""${a_output3[@]}""
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}"" ||
printf '%s\n' """" "" - No changes needed""
printf '%s\n' """" "" - remediation of kernel module: \""$l_mod_name\""
complete"" """"
}
",True
1.1.1.8,Ensure udf kernel module is not available,"The udf filesystem type is the universal disk format used to implement ISO/IEC 13346
and ECMA-167 specifications. This is an open vendor filesystem type for data storage
on a broad range of media. This filesystem type is necessary to support writing DVDs
and newer optical disc formats.","
Run the following script to unload and disable the udf module:
- IF - the udf kernel module is available in ANY installed kernel:
• Create a file ending in .conf with install udf /bin/false in the
/etc/modprobe.d/ directory
• Create a file ending in .conf with blacklist udf in the /etc/modprobe.d/
directory
• Run modprobe -r udf 2>/dev/null; rmmod udf 2>/dev/null to remove
udf from the kernel
- IF - the udf kernel module is not available on the system, or pre-compiled into the
kernel, no remediation is necessary
Page 61
#!/usr/bin/env bash
{
a_output2=() a_output3=() l_dl="""" l_mod_name=""udf"" l_mod_type=""fs""
l_mod_path=""$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)""
f_module_fix()
{
l_dl=""y"" a_showconfig=()
while IFS= read -r l_showconfig; do
a_showconfig+=(""$l_showconfig"")
done < <(modprobe --showconfig | grep -P --
'\b(install|blacklist)\h+'""${l_mod_chk_name//-/_}""'\b')
if lsmod | grep ""$l_mod_chk_name"" &> /dev/null; then
a_output2+=("" - unloading kernel module: \""$l_mod_name\"""")
modprobe -r ""$l_mod_chk_name"" 2>/dev/null; rmmod ""$l_mod_name""
2>/dev/null
fi
if ! grep -Pq -- '\binstall\h+'""${l_mod_chk_name//-
/_}""'\h+(\/usr)?\/bin\/(true|false)\b' <<< ""${a_showconfig[*]}""; then
a_output2+=("" - setting kernel module: \""$l_mod_name\"" to
\""$(readlink -f /bin/false)\"""")
printf '%s\n' ""install $l_mod_chk_name $(readlink -f /bin/false)"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
if ! grep -Pq -- '\bblacklist\h+'""${l_mod_chk_name//-/_}""'\b' <<<
""${a_showconfig[*]}""; then
a_output2+=("" - denylisting kernel module: \""$l_mod_name\"""")
printf '%s\n' ""blacklist $l_mod_chk_name"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
}
for l_mod_base_directory in $l_mod_path; do # Check if the module exists
on the system
if [ -d ""$l_mod_base_directory/${l_mod_name/-/\/}"" ] && [ -n ""$(ls -A
""$l_mod_base_directory/${l_mod_name/-/\/}"")"" ]; then
a_output3+=("" - \""$l_mod_base_directory\"""")
l_mod_chk_name=""$l_mod_name""
[[ ""$l_mod_name"" =~ overlay ]] && l_mod_chk_name=""${l_mod_name::-2}""
[ ""$l_dl"" != ""y"" ] && f_module_fix
else
printf '%s\n' "" - kernel module: \""$l_mod_name\"" doesn't exist in
\""$l_mod_base_directory\""""
fi
done
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" -- INFO --"" "" - module:
\""$l_mod_name\"" exists in:"" ""${a_output3[@]}""
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}"" ||
printf '%s\n' """" "" - No changes needed""
printf '%s\n' """" "" - remediation of kernel module: \""$l_mod_name\""
complete"" """"
}
",True
1.1.1.9,Ensure usb-storage kernel module is not available,"
USB storage provides a means to transfer and store files ensuring persistence and
availability of the files independent of network connection status. Its popularity and utility
has led to USB-based malware being a simple and common means for network
infiltration and a first step to establishing a persistent threat within a networked
","
Run the following script to unload and disable the usb-storage module:
- IF - the usb-storage kernel module is available in ANY installed kernel:
• Create a file ending in .conf with install usb-storage /bin/false in the
/etc/modprobe.d/ directory
• Create a file ending in .conf with blacklist usb-storage in the
/etc/modprobe.d/ directory
• Run modprobe -r usb-storage 2>/dev/null; rmmod usb-storage
2>/dev/null to remove usb-storage from the kernel
- IF - the usb-storage kernel module is not available on the system, or pre-compiled
into the kernel, no remediation is necessary
Page 66
#!/usr/bin/env bash
{
a_output2=() a_output3=() l_dl="""" l_mod_name=""usb-storage""
l_mod_type=""drivers""
l_mod_path=""$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)""
f_module_fix()
{
l_dl=""y"" a_showconfig=()
while IFS= read -r l_showconfig; do
a_showconfig+=(""$l_showconfig"")
done < <(modprobe --showconfig | grep -P --
'\b(install|blacklist)\h+'""${l_mod_chk_name//-/_}""'\b')
if lsmod | grep ""$l_mod_chk_name"" &> /dev/null; then
a_output2+=("" - unloading kernel module: \""$l_mod_name\"""")
modprobe -r ""$l_mod_chk_name"" 2>/dev/null; rmmod ""$l_mod_name""
2>/dev/null
fi
if ! grep -Pq -- '\binstall\h+'""${l_mod_chk_name//-
/_}""'\h+(\/usr)?\/bin\/(true|false)\b' <<< ""${a_showconfig[*]}""; then
a_output2+=("" - setting kernel module: \""$l_mod_name\"" to
\""$(readlink -f /bin/false)\"""")
printf '%s\n' ""install $l_mod_chk_name $(readlink -f /bin/false)"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
if ! grep -Pq -- '\bblacklist\h+'""${l_mod_chk_name//-/_}""'\b' <<<
""${a_showconfig[*]}""; then
a_output2+=("" - denylisting kernel module: \""$l_mod_name\"""")
printf '%s\n' ""blacklist $l_mod_chk_name"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
}
for l_mod_base_directory in $l_mod_path; do # Check if the module exists
on the system
if [ -d ""$l_mod_base_directory/${l_mod_name/-/\/}"" ] && [ -n ""$(ls -A
""$l_mod_base_directory/${l_mod_name/-/\/}"")"" ]; then
a_output3+=("" - \""$l_mod_base_directory\"""")
l_mod_chk_name=""$l_mod_name""
[[ ""$l_mod_name"" =~ overlay ]] && l_mod_chk_name=""${l_mod_name::-2}""
[ ""$l_dl"" != ""y"" ] && f_module_fix
else
printf '%s\n' "" - kernel module: \""$l_mod_name\"" doesn't exist in
\""$l_mod_base_directory\""""
fi
done
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" -- INFO --"" "" - module:
\""$l_mod_name\"" exists in:"" ""${a_output3[@]}""
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}"" ||
printf '%s\n' """" "" - No changes needed""
printf '%s\n' """" "" - remediation of kernel module: \""$l_mod_name\""
complete"" """"
}
",True
1.1.1.10,Ensure unused filesystems kernel modules are not available,"
Filesystem kernel modules are pieces of code that can be dynamically loaded into the
Linux kernel to extend its filesystem capabilities, or so-called base kernel, of an
operating system. Filesystem kernel modules are typically used to add support for new
hardware (as device drivers), or for adding system calls.
","
- IF - the module is available in the running kernel:
• Unload the filesystem kernel module from the kernel
• Create a file ending in .conf with install filesystem kernel modules /bin/false
in the /etc/modprobe.d/ directory
• Create a file ending in .conf with deny list filesystem kernel modules in the
/etc/modprobe.d/ directory
WARNING: unloading, disabling or denylisting filesystem modules that are in use on the
system maybe FATAL. It is extremely important to thoroughly review the filesystems
returned by the audit before following the remediation procedure.
Example of unloading the gfs2kernel module:
# modprobe -r gfs2 2>/dev/null
# rmmod gfs2 2>/dev/null
Example of fully disabling the gfs2 kernel module:
# printf '%s\n' ""blacklist gfs2"" ""install gfs2 /bin/false"" >>
/etc/modprobe.d/gfs2.conf
Note:
• Disabling a kernel module by modifying the command above for each unused
filesystem kernel module
• The example gfs2 must be updated with the appropriate module name for the
command or example script bellow to run correctly.
Below is an example Script that can be modified to use on various filesystem
kernel modules manual remediation process:
Example Script
Page 72
#!/usr/bin/env bash
{
a_output2=(); a_output3=(); l_dl="""" # Initialize arrays and clear
variables
l_mod_name=""gfs2"" # set module name
l_mod_type=""fs"" # set module type
l_mod_path=""$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)""
f_module_fix()
{
l_dl=""y"" # Set to ignore duplicate checks
a_showconfig=() # Create array with modprobe output
while IFS= read -r l_showconfig; do
a_showconfig+=(""$l_showconfig"")
done < <(modprobe --showconfig | grep -P --
'\b(install|blacklist)\h+'""${l_mod_name//-/_}""'\b')
if lsmod | grep ""$l_mod_name"" &> /dev/null; then # Check if the module
is currently loaded
a_output2+=("" - unloading kernel module: \""$l_mod_name\"""")
modprobe -r ""$l_mod_name"" 2>/dev/null; rmmod ""$l_mod_name""
2>/dev/null
fi
if ! grep -Pq -- '\binstall\h+'""${l_mod_name//-
/_}""'\h+(\/usr)?\/bin\/(true|false)\b' <<< ""${a_showconfig[*]}""; then
a_output2+=("" - setting kernel module: \""$l_mod_name\"" to
\""$(readlink -f /bin/false)\"""")
printf '%s\n' ""install $l_mod_name $(readlink -f /bin/false)"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
if ! grep -Pq -- '\bblacklist\h+'""${l_mod_name//-/_}""'\b' <<<
""${a_showconfig[*]}""; then
a_output2+=("" - denylisting kernel module: \""$l_mod_name\"""")
printf '%s\n' ""blacklist $l_mod_name"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
}
for l_mod_base_directory in $l_mod_path; do # Check if the module exists
on the system
if [ -d ""$l_mod_base_directory/${l_mod_name/-/\/}"" ] && [ -n ""$(ls -A
""$l_mod_base_directory/${l_mod_name/-/\/}"")"" ]; then
a_output3+=("" - \""$l_mod_base_directory\"""")
[[ ""$l_mod_name"" =~ overlay ]] && l_mod_name=""${l_mod_name::-2}""
[ ""$l_dl"" != ""y"" ] && f_module_fix
else
echo -e "" - kernel module: \""$l_mod_name\"" doesn't exist in
\""$l_mod_base_directory\""""
fi
done
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" -- INFO --"" "" - module:
\""$l_mod_name\"" exists in:"" ""${a_output3[@]}""
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}"" ||
printf '%s\n' """" "" - No changes needed""
printf '%s\n' """" "" - remediation of kernel module: \""$l_mod_name\""
complete"" """"
}
",True
1.1.2.1.1,Ensure /tmp is a separate partition,"
The /tmp directory is a world-writable directory used for temporary storage by all users
and some applications.
- IF - an entry for /tmp exists in /etc/fstab it will take precedence over entries in
systemd default unit file.
Note: In an environment where the main system is diskless and connected to iSCSI,
entries in /etc/fstab may not take precedence.
/tmp can be configured to use tmpfs.
tmpfs puts everything into the kernel internal caches and grows and shrinks to
accommodate the files it contains and is able to swap unneeded pages out to swap
space. It has maximum size limits which can be adjusted on the fly via mount -o
remount.
Since tmpfs lives completely in the page cache and on swap, all tmpfs pages will be
shown as ""Shmem"" in /proc/meminfo and ""Shared"" in free. Notice that these
counters also include shared memory. The most reliable way to get the count is using
df and du.
tmpfs has three mount options for sizing:
• size: The limit of allocated bytes for this tmpfs instance. The default is half of
your physical RAM without swap. If you oversize your tmpfs instances the
machine will deadlock since the OOM handler will not be able to free that
memory.
• nr_blocks: The same as size, but in blocks of PAGE_SIZE.
• nr_inodes: The maximum number of inodes for this instance. The default is half
of the number of your physical RAM pages, or (on a machine with highmem) the
number of lowmem RAM pages, whichever is the lower.
These parameters accept a suffix k, m or g and can be changed on remount. The size
parameter also accepts a suffix % to limit this tmpfs instance to that percentage of your
physical RAM. The default, when neither size nor nr_blocks is specified, is size=50%
","
First ensure that systemd is correctly configured to ensure that /tmp will be mounted at
boot time.
# systemctl unmask tmp.mount
For specific configuration requirements of the /tmp mount for your environment, modify
/etc/fstab.
Example of using tmpfs with specific mount options:
tmpfs /tmp tmpfs defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0
0
Note: the size=2G is an example of setting a specific size for tmpfs.
Example of using a volume or disk with specific mount options. The source location of
the volume or disk will vary depending on your environment:
<device> /tmp <fstype> defaults,nodev,nosuid,noexec 0 0
",True
1.1.2.1.2,Ensure nodev option set on /tmp partition,"
The nodev mount option specifies that the filesystem cannot contain special devices.
","
- IF - a separate partition exists for /tmp.
Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the
/tmp partition.
Example:
<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /tmp with the configured options:
# mount -o remount /tmp
",True
1.1.2.1.3,Ensure nosuid option set on /tmp partition,"
The nosuid mount option specifies that the filesystem cannot contain setuid files.
","
- IF - a separate partition exists for /tmp.
Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
/tmp partition.
Example:
<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /tmp with the configured options:
# mount -o remount /tmp
",True
1.1.2.1.4,Ensure noexec option set on /tmp partition,"
The noexec mount option specifies that the filesystem cannot contain executable
binaries.
","
- IF - a separate partition exists for /tmp.
Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the
/tmp partition.
Example:
<device> /tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /tmp with the configured options:
# mount -o remount /tmp
",True
1.1.2.2.1,Ensure /dev/shm is a separate partition,"
The /dev/shm directory is a world-writable directory that can function as shared
memory that facilitates inter process communication (IPC).
","
For specific configuration requirements of the /dev/shm mount for your environment,
modify /etc/fstab.
Example:
tmpfs /dev/shm tmpfs
defaults,rw,nosuid,nodev,noexec,relatime,size=2G 0 0
",True
1.1.2.2.2,Ensure nodev option set on /dev/shm partition,"
The nodev mount option specifies that the filesystem cannot contain special devices.
","
- IF - a separate partition exists for /dev/shm.
Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the
/dev/shm partition. See the fstab(5) manual page for more information.
Example:
tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /dev/shm with the configured options:
# mount -o remount /dev/shm
Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is
used as shared memory space by applications.
",True
1.1.2.2.3,Ensure nosuid option set on /dev/shm partition,"
The nosuid mount option specifies that the filesystem cannot contain setuid files.
","
 IF - a separate partition exists for /dev/shm.
Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
/dev/shm partition. See the fstab(5) manual page for more information.
Example:
tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /dev/shm with the configured options:
# mount -o remount /dev/shm
Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is
used as shared memory space by applications.
",True
1.1.2.2.4,Ensure noexec option set on /dev/shm partition,"
The noexec mount option specifies that the filesystem cannot contain executable
binaries.
","
- IF - a separate partition exists for /dev/shm.
Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the
/dev/shm partition.
Example:
tmpfs /dev/shm tmpfs defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /dev/shm with the configured options:
# mount -o remount /dev/shm
Note: It is recommended to use tmpfs as the device/filesystem type as /dev/shm is
used as shared memory space by applications.
",True
1.1.2.3.1,Ensure separate partition exists for /home,"
The /home directory is used to support disk storage needs of local users.
","
For new installations, during installation create a custom partition setup and specify a
separate partition for /home.
For systems that were previously installed, create a new partition and configure
/etc/fstab as appropriate.
",True
1.1.2.3.2,Ensure nodev option set on /home partition,"
The nodev mount option specifies that the filesystem cannot contain special devices.
","
- IF - a separate partition exists for /home.
Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the
/home partition.
Example:
<device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /home with the configured options:
# mount -o remount /home
",True
1.1.2.3.3,Ensure nosuid option set on /home partition,"
The nosuid mount option specifies that the filesystem cannot contain setuid files.
","
- IF - a separate partition exists for /home.
Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
/home partition.
Example:
<device> /home <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /home with the configured options:
# mount -o remount /home
",True
1.1.2.4.1,Ensure separate partition exists for /var,"
The /var directory is used by daemons and other system services to temporarily store
dynamic data. Some directories created by these processes may be world-writable.
","
For new installations, during installation create a custom partition setup and specify a
separate partition for /var.
For systems that were previously installed, create a new partition and configure
/etc/fstab as appropriate.
",True
1.1.2.4.2,Ensure nodev option set on /var partition,"
The nodev mount option specifies that the filesystem cannot contain special devices.
","
- IF - a separate partition exists for /var.
Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the
/var partition.
Example:
<device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /var with the configured options:
# mount -o remount /var
",True
1.1.2.4.3,Ensure nosuid option set on /var partition,"
The nosuid mount option specifies that the filesystem cannot contain setuid files
","
- IF - a separate partition exists for /var.
Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
/var partition.
Example:
<device> /var <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /var with the configured options:
# mount -o remount /var
",True
1.1.2.5.1,Ensure separate partition exists for /var/tmp,"
The /var/tmp directory is a world-writable directory used for temporary storage by all
users and some applications. Temporary files residing in /var/tmp are to be preserved
between reboots.
","
For new installations, during installation create a custom partition setup and specify a
separate partition for /var/tmp.
For systems that were previously installed, create a new partition and configure
/etc/fstab as appropriate.
",True
1.1.2.5.2,Ensure nodev option set on /var/tmp partition,"
The nodev mount option specifies that the filesystem cannot contain special devices.
","
 IF - a separate partition exists for /var/tmp.
Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the
/var/tmp partition.
Example:
<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0
0
Run the following command to remount /var/tmp with the configured options:
# mount -o remount /var/tmp
",True
1.1.2.5.3,Ensure nosuid option set on /var/tmp partition,"
The nosuid mount option specifies that the filesystem cannot contain setuid files.
","
- IF - a separate partition exists for /var/tmp.
Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
/var/tmp partition.
Example:
<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0
0
Run the following command to remount /var/tmp with the configured options:
# mount -o remount /var/tmp
",True
1.1.2.5.4,Ensure noexec option set on /var/tmp partition,"
The noexec mount option specifies that the filesystem cannot contain executable
binaries.
","
- IF - a separate partition exists for /var/tmp.
Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the
/var/tmp partition.
Example:
<device> /var/tmp <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0
0
Run the following command to remount /var/tmp with the configured options:
# mount -o remount /var/tmp
",True
1.1.2.6.1,Ensure separate partition exists for /var/log,"
The /var/log directory is used by system services to store log data.
","
For new installations, during installation create a custom partition setup and specify a
separate partition for /var/log .
For systems that were previously installed, create a new partition and configure
/etc/fstab as appropriate.
",True
1.1.2.6.2,Ensure nodev option set on /var/log partition,"
The nodev mount option specifies that the filesystem cannot contain special devices.
","
- IF - a separate partition exists for /var/log.
Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the
/var/log partition.
Example:
<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0
0
Run the following command to remount /var/log with the configured options:
# mount -o remount /var/log
",True
1.1.2.6.3,Ensure nosuid option set on /var/log partition,"
The nosuid mount option specifies that the filesystem cannot contain setuid files.
","
- IF - a separate partition exists for /var/log.
Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
/var/log partition.
Example:
<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0
0
Run the following command to remount /var/log with the configured options:
# mount -o remount /var/log
",True
1.1.2.6.4,Ensure noexec option set on /var/log partition,"
The noexec mount option specifies that the filesystem cannot contain executable
binaries.
","
- IF - a separate partition exists for /var/log.
Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the
/var/log partition.
Example:
<device> /var/log <fstype> defaults,rw,nosuid,nodev,noexec,relatime 0
0
Run the following command to remount /var/log with the configured options:
# mount -o remount /var/log
",True
1.1.2.7.1,Ensure separate partition exists for /var/log/audit,"
The auditing daemon, auditd, stores log data in the /var/log/audit directory.
","
For new installations, during installation create a custom partition setup and specify a
separate partition for /var/log/audit.
For systems that were previously installed, create a new partition and configure
/etc/fstab as appropriate.
",True
1.1.2.7.2,Ensure noexec option set on /var/log/audit partition,"
The nodev mount option specifies that the filesystem cannot contain special devices.
","
- IF - a separate partition exists for /var/log/audit.
Edit the /etc/fstab file and add nodev to the fourth field (mounting options) for the
/var/log/audit partition.
Example:
<device> /var/log/audit <fstype>
defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /var/log/audit with the configured options:
# mount -o remount /var/log/audit
",True
1.1.2.7.3,,"
The nosuid mount option specifies that the filesystem cannot contain setuid files.
","
- IF - a separate partition exists for /var/log/audit.
Edit the /etc/fstab file and add nosuid to the fourth field (mounting options) for the
/var/log/audit partition.
Example:
<device> /var/log/audit <fstype>
defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /var/log/audit with the configured options:
# mount -o remount /var/log/audit
",True
1.1.2.7.4,,"
The noexec mount option specifies that the filesystem cannot contain executable
binaries.
","
- IF - a separate partition exists for /var/log/audit.
Edit the /etc/fstab file and add noexec to the fourth field (mounting options) for the
/var/log/audit partition.
Example:
<device> /var/log/audit <fstype>
defaults,rw,nosuid,nodev,noexec,relatime 0 0
Run the following command to remount /var/log/audit with the configured options:
# mount -o remount /var/log/audit
",True
1.3.1.1,Ensure AppArmor is installed,"
AppArmor provides Mandatory Access Controls.
","
Install AppArmor.
# apt install apparmor apparmor-utils
",True
1.3.1.2,Ensure AppArmor is enabled in the bootloader configuration,"
Configure AppArmor to be enabled at boot time and verify that it has not been
overwritten by the bootloader boot parameters.
Note: This recommendation is designed around the grub bootloader, if LILO or another
bootloader is in use in your environment enact equivalent settings.
","
Edit /etc/default/grub and add the apparmor=1 and security=apparmor
parameters to the GRUB_CMDLINE_LINUX= line
GRUB_CMDLINE_LINUX=""apparmor=1 security=apparmor""
Run the following command to update the grub2 configuration:
# update-grub
",True
1.3.1.3,Ensure all AppArmor profiles are in enforce or complain mode,"
AppArmor profiles define what resources applications are able to access.
","
Run the following command to set all profiles to enforce mode:
# aa-enforce /etc/apparmor.d/*
- OR -
Run the following command to set all profiles to complain mode:
# aa-complain /etc/apparmor.d/*
Note: Any unconfined processes may need to have a profile created or activated for
them and then be restarted.
",True
1.3.1.4,Ensure all AppArmor profiles are in enforce mode,"
AppArmor profiles define what resources applications are able to access
","
Run the following command to set all profiles to enforce mode:
# aa-enforce /etc/apparmor.d/*
Note: Any unconfined processes may need to have a profile created or activated for
them and then be restarted
",True
1.4.1,Ensure bootloader password is set,"
Setting the boot loader password will require that anyone rebooting the system must
enter a password before being able to set command line boot parameters.
","
Create an encrypted password with grub-mkpasswd-pbkdf2:
# grub-mkpasswd-pbkdf2 --iteration-count=600000 --salt=64
Enter password: <password>
Reenter password: <password>
PBKDF2 hash of your password is <encrypted-password>
Add the following into a custom /etc/grub.d configuration file:
cat <<EOF
exec tail -n +2 $0
set superusers=""<username>""
password_pbkdf2 <username> <encrypted-password>
EOF
The superuser/user information and password should not be contained in the
/etc/grub.d/00_header file as this file could be overwritten in a package update.
If there is a requirement to be able to boot/reboot without entering the password, edit
/etc/grub.d/10_linux and add --unrestricted to the line CLASS=
Example:
CLASS=""--class gnu-linux --class gnu --class os --unrestricted""
Run the following command to update the grub2 configuration:
# update-grub
Default Value:
This recommendation is designed around the grub bootloader, if LILO or another
bootloader is in use in your environment enact equivalent settings.
Replace /boot/grub/grub.cfg with the appropriate grub configuration file for your
environment.
",True
1.4.2,Ensure access to bootloader config is configured,"
The grub configuration file contains information on boot settings and passwords for
unlocking boot options.
","
Run the following commands to set permissions on your grub configuration:
# chown root:root /boot/grub/grub.cfg
# chmod u-x,go-rwx /boot/grub/grub.cfg
Default Value:
Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
",True
1.5.1,Ensure address space layout randomization is enabled,"
Address space layout randomization (ASLR) is an exploit mitigation technique which
randomly arranges the address space of key data areas of a process.
","
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• kernel.randomize_va_space = 2
Example:
# printf ""%s\n"" ""kernel.randomize_va_space = 2"" >> /etc/sysctl.d/60-
kernel_sysctl.conf
Run the following command to set the active kernel parameter:
# sysctl -w kernel.randomize_va_space=2
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
kernel.randomize_va_space = 2
",True
1.5.2,Ensure ptrace_scope is restricted,"
The ptrace() system call provides a means by which one process (the ""tracer"") may
observe and control the execution of another process (the ""tracee""), and examine and
change the tracee's memory and registers.
The sysctl settings (writable only with CAP_SYS_PTRACE) are:
• 0 - classic ptrace permissions: a process can PTRACE_ATTACH to any other
process running under the same uid, as long as it is dumpable (i.e. did not
transition uids, start privileged, or have called prctl(PR_SET_DUMPABLE...)
already). Similarly, PTRACE_TRACEME is unchanged.
• 1 - restricted ptrace: a process must have a predefined relationship with the
inferior it wants to call PTRACE_ATTACH on. By default, this relationship is that
of only its descendants when the above classic criteria is also met. To change
the relationship, an inferior can call prctl(PR_SET_PTRACER, debugger, ...) to
declare an allowed debugger PID to call PTRACE_ATTACH on the inferior.
Using PTRACE_TRACEME is unchanged.
• 2 - admin-only attach: only processes with CAP_SYS_PTRACE may use ptrace
with PTRACE_ATTACH, or through children calling PTRACE_TRACEME.
• 3 - no attach: no processes may use ptrace with PTRACE_ATTACH nor via
PTRACE_TRACEME. Once set, this sysctl value cannot be changed.
","
Set the kernel.yama.ptrace_scope parameter in /etc/sysctl.conf or a file in
/etc/sysctl.d/ ending in .conf to a value of 1, 2, or 3:
kernel.yama.ptrace_scope = 1
- OR -
kernel.yama.ptrace_scope = 2
- OR -
kernel.yama.ptrace_scope = 3
Example:
# printf ""%s\n"" ""kernel.yama.ptrace_scope = 1"" >> /etc/sysctl.d/60-
kernel_sysctl.conf
Run the following command to set the active kernel parameter:
# sysctl -w kernel.yama.ptrace_scope=1
Note:
• If a value of 2 or 3 is preferred, or required by local site policy, replace the 1 with
the desired value of 2 or 3 in the example above
• If this setting appears in a canonically later file, or later in the same file, the
setting will be overwritten
Page 174
Default Value:
kernel.yama.ptrace_scope = 0
",True
1.5.3,Ensure core dumps are restricted,"
A core dump is the memory of an executable program. It is generally used to determine
why a program aborted. It can also be used to glean confidential information from a core
file. The system provides the ability to set a soft limit for core dumps, but this can be
overridden by the user.
","
Add the following line to /etc/security/limits.conf or a
/etc/security/limits.d/* file:
* hard core 0
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• fs.suid_dumpable = 0
Example:
# printf ""\n%s"" ""fs.suid_dumpable = 0"" >> /etc/sysctl.d/60-fs_sysctl.conf
Run the following command to set the active kernel parameter:
# sysctl -w fs.suid_dumpable=0
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
-IF- systemd-coredump is installed:
edit /etc/systemd/coredump.conf and add/modify the following lines:
Storage=none
ProcessSizeMax=0
Run the command:
systemctl daemon-reload
",True
1.5.4,Ensure prelink is not installed,"
prelink is a program that modifies ELF shared libraries and ELF dynamically linked
binaries in such a way that the time needed for the dynamic linker to perform relocations
at startup significantly decreases.
","
Run the following command to restore binaries to normal:
# prelink -ua
Uninstall prelink using the appropriate package manager or manual installation:
# apt purge prelink
",True
1.5.5,Ensure Automatic Error Reporting is not enabled,"
The Apport Error Reporting Service automatically generates crash reports for
debugging.
","
Edit /etc/default/apport and add or edit the enabled parameter to equal 0:
enabled=0
Run the following commands to stop and mask the apport service
# systemctl stop apport.service
# systemctl mask apport.service
- OR -
Run the following command to remove the apport package:
# apt purge apport
Default Value:
enabled=1
",True
1.6.1,Ensure message of the day is configured properly,"
The contents of the /etc/motd file are displayed to users after login and function as a
message of the day for authenticated users.
Unix-based systems have typically displayed information about the OS release and
patch level upon logging in to the system. This information can be useful to developers
who are developing software for a particular OS platform. If mingetty(8) supports the
following options, they display operating system information: \m - machine architecture
\r - operating system release \s - operating system name \v - operating system
version
","
Edit the /etc/motd file with the appropriate contents according to your site policy,
remove any instances of \m , \r , \s , \v or references to the OS platform
- OR -
- IF - the motd is not used, this file can be removed.
Run the following command to remove the motd file:
# rm /etc/motd
",True
1.6.2,Ensure local login warning banner is configured properly,"
The contents of the /etc/issue file are displayed to users prior to login for local
terminals.
Unix-based systems have typically displayed information about the OS release and
patch level upon logging in to the system. This information can be useful to developers
who are developing software for a particular OS platform. If mingetty(8) supports the
following options, they display operating system information: \m - machine architecture
\r - operating system release \s - operating system name \v - operating system
version - or the operating system's name
","
Edit the /etc/issue file with the appropriate contents according to your site policy,
remove any instances of \m , \r , \s , \v or references to the OS platform
Example:
# echo ""Authorized users only. All activity may be monitored and reported."" >
/etc/issue
",True
1.6.3,Ensure remote login warning banner is configured properly,"
The contents of the /etc/issue.net file are displayed to users prior to login for remote
connections from configured services.
Unix-based systems have typically displayed information about the OS release and
patch level upon logging in to the system. This information can be useful to developers
who are developing software for a particular OS platform. If mingetty(8) supports the
following options, they display operating system information: \m - machine architecture
\r - operating system release \s - operating system name \v - operating system
version.
","
Edit the /etc/issue.net file with the appropriate contents according to your site policy,
remove any instances of \m , \r , \s , \v or references to the OS platform
Example:
# echo ""Authorized users only. All activity may be monitored and reported."" >
/etc/issue.net
",True
1.6.4,Ensure access to /etc/motd is configured,"
The contents of the /etc/motd file are displayed to users after login and function as a
message of the day for authenticated users.
","
Run the following commands to set mode, owner, and group on /etc/motd:
# chown root:root $(readlink -e /etc/motd)
# chmod u-x,go-wx $(readlink -e /etc/motd)
- OR -
Run the following command to remove the /etc/motd file:
# rm /etc/motd
",True
1.6.5,Ensure access to /etc/issue is configured,"
The contents of the /etc/issue file are displayed to users prior to login for local
terminals.
","
Run the following commands to set mode, owner, and group on /etc/issue:
# chown root:root $(readlink -e /etc/issue)
# chmod u-x,go-wx $(readlink -e /etc/issue)
Default Value:
Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
",True
1.6.6,Ensure access to /etc/issue.net is configured,"
The contents of the /etc/issue.net file are displayed to users prior to login for remote
connections from configured services.
","
Run the following commands to set mode, owner, and group on /etc/issue.net:
# chown root:root $(readlink -e /etc/issue.net)
# chmod u-x,go-wx $(readlink -e /etc/issue.net)
Default Value:
Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
",True
1.7.1,Ensure GDM login banner is configured,"
The GNOME Display Manager (GDM) is a program that manages graphical display
servers and handles graphical user logins.
","
Run the following commands to uninstall gdm3 and remove unused dependencies:
# apt purge gdm3
# apt autoremove gdm3
",True
1.7.2,Ensure GDM login banner is configured,"
GDM is the GNOME Display Manager which handles graphical login for GNOME based
systems.
","
- IF - A user profile is already created run the following commands to set and enable the
text banner message on the login screen:
# gsettings set org.gnome.login-screen banner-message-text 'Authorized uses
only. All activity may be monitored and reported'
# gsettings set org.gnome.login-screen banner-message-enable true
Note:
• banner-message-text may be set in accordance with local site policy
• gsettings commands in this section MUST be done from a command window
on a graphical desktop or an error will be returned.
• The system must be restarted after all gsettings configurations have been set
in order for CIS-CAT Assessor to appropriately assess.
- OR/IF - A user profile does not exist:
1. Create or edit the gdm profile in the /etc/dconf/profile/gdm with the following
lines:
user-db:user
system-db:gdm
file-db:/usr/share/gdm/greeter-dconf-defaults
Note: gdm is the name of a dconf database.
2. Create a gdm keyfile for machine-wide settings in /etc/dconf/db/gdm.d/01-
banner-message:
[org/gnome/login-screen]
banner-message-enable=true
banner-message-text='Type the banner message here.'
3. Update the system databases
# dconf update
Note:
• Users must log out and back in again before the system-wide settings take effect.
• There is no character limit for the banner message. gnome-shell autodetects
longer stretches of text and enters two column mode.
• The banner message cannot be read from an external file.
Default Value:
disabled
",True
1.7.3,Ensure GDM disable-user-list option is enabled,"
GDM is the GNOME Display Manager which handles graphical login for GNOME based
systems.
The disable-user-list option controls if a list of users is displayed on the login
screen.
","
- IF - A user profile exists run the following command to enable the disable-user-
list:
# gsettings set org.gnome.login-screen disable-user-list true
Note:
• gsettings commands in this section MUST be done from a command window
on a graphical desktop or an error will be returned.
• The system must be restarted after all gsettings configurations have been set
in order for CIS-CAT Assessor to appropriately assess.
- OR/IF - A user profile does not exist:
1. Create or edit the gdm profile in /etc/dconf/profile/gdm with the following
lines:
user-db:user
system-db:gdm
file-db:/usr/share/gdm/greeter-dconf-defaults
Note: gdm is the name of a dconf database.
2. Create a gdm keyfile for machine-wide settings in /etc/dconf/db/gdm.d/00-
login-screen:
[org/gnome/login-screen]
# Do not show the user list
disable-user-list=true
3. Update the system databases:
# dconf update
Note: When the user profile is created or changed, the user will need to log out and log
in again before the changes will be applied.
Default Value:
false
",True
1.7.4,Ensure GDM screen locks when the user is idle,"
GNOME Desktop Manager can make the screen lock automatically whenever the user
is idle for some amount of time.
","
- IF - A user profile is already created run the following commands to enable screen
locks when the user is idle:
# gsettings set org.gnome.desktop.screensaver lock-delay 5
# gsettings set org.gnome.desktop.session idle-delay 900
Note:
• gsettings commands in this section MUST be done from a command window
on a graphical desktop or an error will be returned.
• The system must be restarted after all gsettings configurations have been set
in order for CIS-CAT Assessor to appropriately assess.
- OR/IF- A user profile does not exist:
1. Create or edit the user profile in the /etc/dconf/profile/ and verify it includes
the following:
user-db:user
system-db:{NAME_OF_DCONF_DATABASE}
Note: local is the name of a dconf database used in the examples.
2. Create the directory /etc/dconf/db/local.d/ if it doesn't already exist:
3. Create the key file /etc/dconf/db/local.d/00-screensaver to provide
information for the local database:
Example key file:
# Specify the dconf path
[org/gnome/desktop/session]
# Number of seconds of inactivity before the screen goes blank
# Set to 0 seconds if you want to deactivate the screensaver.
idle-delay=uint32 180
# Specify the dconf path
[org/gnome/desktop/screensaver]
# Number of seconds after the screen is blank before locking the screen
lock-delay=uint32 0
Note: You must include the uint32 along with the integer key values as shown.
4. Run the following command to update the system databases:
# dconf update
5. Users must log out and back in again before the system-wide settings take effect.
",True
1.7.5,Ensure GDM screen locks cannot be overridden,"
GNOME Desktop Manager can lock down specific settings by using the lockdown mode
in dconf to prevent users from changing specific settings.
To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory.
The files inside this directory contain a list of keys or subpaths to lock. Just as with the
keyfiles, you may add any number of files to this directory.
","
1. To prevent the user from overriding these settings, create the file
/etc/dconf/db/local.d/locks/00-screensaver with the following content:
# Lock desktop screensaver settings
/org/gnome/desktop/session/idle-delay
/org/gnome/desktop/screensaver/lock-delay
2. Update the system databases:
# dconf update
Note:
• A user profile must exist in order to apply locks.
• Users must log out and back in again before the system-wide settings take effect.
",True
1.7.6,Ensure GDM automatic mounting of removable media is disabled,"
By default GNOME automatically mounts removable media when inserted as a
convenience to the user.
","
- IF - A user profile exists run the following commands to ensure automatic mounting is
disabled:
# gsettings set org.gnome.desktop.media-handling automount false
# gsettings set org.gnome.desktop.media-handling automount-open false
Note:
• gsettings commands in this section MUST be done from a command window
on a graphical desktop or an error will be returned.
• The system must be restarted after all gsettings configurations have been set
in order for CIS-CAT Assessor to appropriately assess.
- OR/IF - A user profile does not exist:
1. Create a file /etc/dconf/db/local.d/00-media-automount with following
content:
[org/gnome/desktop/media-handling]
automount=false
automount-open=false
2. After creating the file, apply the changes using below command :
# dconf update
Note: Users must log out and back in again before the system-wide settings take effect.
",True
1.7.7,Ensure GDM disabling automatic mounting of removable media is not overridden,"
By default GNOME automatically mounts removable media when inserted as a
convenience to the user.
By using the lockdown mode in dconf, you can prevent users from changing specific
settings. To lock down a dconf key or subpath, create a locks subdirectory in the keyfile
directory. The files inside this directory contain a list of keys or subpaths to lock. Just as
with the keyfiles, you may add any number of files to this directory.
","
1. To prevent the user from overriding these settings, create the file
/etc/dconf/db/local.d/locks/00-media-automount with the following
content:
[org/gnome/desktop/media-handling]
automount=false
automount-open=false
2. Update the systems databases:
# dconf update
Note:
• A user profile must exist in order to apply locks.
• Users must log out and back in again before the system-wide settings take effect.
",True
1.7.8,Ensure GDM autorun-never is enabled,"
The autorun-never setting allows the GNOME Desktop Display Manager to disable
autorun through GDM.
","
- IF - A user profile exists run the following command to set autorun-never to true for
GDM users:
# gsettings set org.gnome.desktop.media-handling autorun-never true
Note:
• gsettings commands in this section MUST be done from a command window
on a graphical desktop or an error will be returned.
• The system must be restarted after all gsettings configurations have been set
in order for CIS-CAT Assessor to appropriately assess.
- OR/IF - A user profile does not exist:
1. create the file /etc/dconf/db/local.d/locks/00-media-autorun with the
following content:
[org/gnome/desktop/media-handling]
autorun-never=true
2. Update the systems databases:
# dconf update
Note: Users must log out and back in again before the system-wide settings take effect.
Default Value:
false
",True
1.7.9,Ensure GDM autorun-never is not overridden,"
The autorun-never setting allows the GNOME Desktop Display Manager to disable
autorun through GDM.
By using the lockdown mode in dconf, you can prevent users from changing specific
settings.
To lock down a dconf key or subpath, create a locks subdirectory in the keyfile directory.
The files inside this directory contain a list of keys or subpaths to lock. Just as with the
keyfiles, you may add any number of files to this directory.
","
1. To prevent the user from overriding these settings, create the file
/etc/dconf/db/local.d/locks/00-media-autorun with the following content:
[org/gnome/desktop/media-handling]
autorun-never=true
2. Update the systems databases:
# dconf update
Note:
• A user profile must exist in order to apply locks.
• Users must log out and back in again before the system-wide settings take effect.
",True
1.7.10,Ensure XDMCP is not enabled,"
X Display Manager Control Protocol (XDMCP) is designed to provide authenticated
access to display management services for remote displays
","
Edit all files returned by the audit and remove or commend out the Enable=true line in
the [xdmcp] block:
Example file:
# GDM configuration storage
#
# See /usr/share/gdm/gdm.schemas for a list of available options.
[daemon]
# Uncomment the line below to force the login screen to use Xorg
#WaylandEnable=false
# Enabling automatic login
# AutomaticLoginEnable = true
# AutomaticLogin = user1
# Enabling timed login
# TimedLoginEnable = true
# TimedLogin = user1
# TimedLoginDelay = 10
[security]
[xdmcp]
# Enable=true <- **This line should be removed or commented out**
[chooser]
[debug]
# Uncomment the line below to turn on debugging
# More verbose logs
# Additionally lets the X server dump core if it crashes
#Enable=true
Default Value:
false (This is denoted by no Enabled= entry in the [xdmcp] block
",True
2.1.1,Ensure autofs services are not in use,"
autofs allows automatic mounting of devices, typically including CD/DVDs and USB
drives.
","
Run the following commands to stop autofs.service and remove the autofs
package:
# systemctl stop autofs.service
# apt purge autofs
- OR -
- IF - the autofs package is required as a dependency:
Run the following commands to stop and mask autofs.service:
# systemctl stop autofs.service
# systemctl mask autofs.service
",True
2.1.2,Ensure avahi daemon services are not in use,"
Avahi is a free zeroconf implementation, including a system for multicast DNS/DNS-SD
service discovery. Avahi allows programs to publish and discover services and hosts
running on a local network with no specific configuration. For example, a user can plug
a computer into a network and Avahi automatically finds printers to print to, files to look
at and people to talk to, as well as network services running on the machine.
","
Run the following commands to stop avahi-daemon.socket and avahi-
daemon.service, and remove the avahi-daemon package:
# systemctl stop avahi-daemon.socket avahi-daemon.service
# apt purge avahi-daemon
- OR -
- IF - the avahi-daemon package is required as a dependency:
Run the following commands to stop and mask the avahi-daemon.socket and avahi-
daemon.service:
# systemctl stop avahi-daemon.socket avahi-daemon.service
# systemctl mask avahi-daemon.socket avahi-daemon.service
",True
2.1.3,Ensure dhcp server services are not in use,"
The Dynamic Host Configuration Protocol (DHCP) is a service that allows machines to
be dynamically assigned IP addresses. There are two versions of the DHCP protocol
DHCPv4 and DHCPv6. At startup the server may be started for one or the other via the -4
or -6 arguments.
","
Run the following commands to stop isc-dhcp-server.service and isc-dhcp-
server6.service and remove the isc-dhcp-server package:
# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service
# apt purge isc-dhcp-server
- OR -
- IF - the isc-dhcp-server package is required as a dependency:
Run the following commands to stop and mask isc-dhcp-server.service and isc-
dhcp-server6.service:
# systemctl stop isc-dhcp-server.service isc-dhcp-server6.service
# systemctl mask isc-dhcp-server isc-dhcp-server6.service
",True
2.1.4,Ensure dns server services are not in use,"
The Domain Name System (DNS) is a hierarchical naming system that maps names to
IP addresses for computers, services and other resources connected to a network.
Note: bind9 is the package and bind.service is the alias for named.service.
","
Run the following commands to stop named.service and remove the bind9 package:
# systemctl stop named.service
# apt purge bind9
- OR -
- IF - the bind9 package is required as a dependency:
Run the following commands to stop and mask bind9.service:
# systemctl stop named.service
# systemctl mask named.service
",True
2.1.5,Ensure dnsmasq services are not in use,"
dnsmasq is a lightweight tool that provides DNS caching, DNS forwarding and DHCP
(Dynamic Host Configuration Protocol) services.
","
Run the following commands to stop dnsmasq.service and remove dnsmasq package:
# systemctl stop dnsmasq.service
# apt purge dnsmasq
- OR -
- IF - the dnsmasq package is required as a dependency:
Run the following commands to stop and mask the dnsmasq.service:
# systemctl stop dnsmasq.service
# systemctl mask dnsmasq.service
",True
2.1.6,Ensure ftp server services are not in use,"
The File Transfer Protocol (FTP) provides networked computers with the ability to
transfer files. vsftpd is the Very Secure File Transfer Protocol Daemon.
","
Run the following commands to stop vsftpd.service and remove the vsftpd
package:
# systemctl stop vsftpd.service
# apt purge vsftpd
- OR -
- IF - the vsftpd package is required as a dependency:
Run the following commands to stop and mask the vsftpd.service:
# systemctl stop vsftpd.service
# systemctl mask vsftpd.service
Note: Other ftp server packages may exist. If not required and authorized by local site
policy, they should also be removed. If the package is required for a dependency, the
service should be stopped and masked.
",True
2.1.7,Ensure ldap server services are not in use,"
The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for
NIS/YP. It is a service that provides a method for looking up information from a central
database.
","
Run the following commands to stop slapd.service and remove the slapd package:
# systemctl stop slapd.service
# apt purge slapd
- OR -
- IF - the slapd package is required as a dependency:
Run the following commands to stop and mask slapd.service:
# systemctl stop slapd.service
# systemctl mask slapd.service
",True
2.1.8,,"
dovecot-imapd and dovecot-pop3d are an open source IMAP and POP3 server for
Linux based systems.
","
Run one of the following commands to remove dovecot-imapd and dovecot-pop3d:
Run the following commands to stop dovecot.socket and dovecot.service, and
remove the dovecot-imapd and dovecot-pop3d packages:
# systemctl stop dovecot.socket dovecot.service
# apt purge dovecot-imapd dovecot-pop3d
- OR -
- IF - a package is installed and is required for dependencies:
Run the following commands to stop and mask dovecot.socket and
dovecot.service:
# systemctl stop dovecot.socket dovecot.service
# systemctl mask dovecot.socket dovecot.service
",True
2.1.9,Ensure network file system services are not in use,"
The Network File System (NFS) is one of the first and most widely distributed file
systems in the UNIX environment. It provides the ability for systems to mount file
systems of other servers through the network.
","
Run the following command to stop nfs-server.service and remove nfs-kernel-
server package:
# systemctl stop nfs-server.service
# apt purge nfs-kernel-server
- OR -
- IF - the nfs-kernel-server package is required as a dependency:
Run the following commands to stop and mask the nfs-server.service:
# systemctl stop nfs-server.service
# systemctl mask nfs-server.service
",True
2.1.10,Ensure nis server services are not in use,"
The Network Information Service (NIS) (formally known as Yellow Pages) is a client-
server directory service protocol for distributing system configuration files. The NIS
server is a collection of programs that allow for the distribution of configuration files. The
NIS client (ypbind) was used to bind a machine to an NIS server and receive the
distributed configuration files.
","
Run the following commands to stop ypserv.service and remove ypserv package:
# systemctl stop ypserv.service
# apt purge ypserv
- OR -
- IF - the ypserv package is required as a dependency:
Run the following commands to stop and mask ypserv.service:
# systemctl stop ypserv.service
# systemctl mask ypserv.service
",True
2.1.11,Ensure print server services are not in use,"
The Common Unix Print System (CUPS) provides the ability to print to both local and
network printers. A system running CUPS can also accept print jobs from remote
systems and print them to local printers. It also provides a web based remote
administration capability.
","
Run the following commands to stop cups.socket and cups.service, and remove the
cups package:
# systemctl stop cups.socket cups.service
# apt purge cups
- OR -
- IF - the cups package is required as a dependency:
Run the following commands to stop and mask the cups.socket and cups.service:
# systemctl stop cups.socket cups.service
# systemctl mask cups.socket cups.service
",True
2.1.12,Ensure rpcbind services are not in use,"
The rpcbind utility maps RPC services to the ports on which they listen. RPC
processes notify rpcbind when they start, registering the ports they are listening on and
the RPC program numbers they expect to serve. The client system then contacts
rpcbind on the server with a particular RPC program number. The rpcbind.service
redirects the client to the proper port number so it can communicate with the requested
service.
Portmapper is an RPC service, which always listens on tcp and udp 111, and is used to
map other RPC services (such as nfs, nlockmgr, quotad, mountd, etc.) to their
corresponding port number on the server. When a remote host makes an RPC call to
that server, it first consults with portmap to determine where the RPC server is listening.
","
Run the following commands to stop rpcbind.socket and rpcbind.service, and
remove the rpcbind package:
# systemctl stop rpcbind.socket rpcbind.service
# apt purge rpcbind
- OR -
- IF - the rpcbind package is required as a dependency:
Run the following commands to stop and mask the rpcbind.socket and
rpcbind.service:
# systemctl stop rpcbind.socket rpcbind.service
# systemctl mask rpcbind.socket rpcbind.service
",True
2.1.13,Ensure rsync services are not in use,"
The rsync service can be used to synchronize files between systems over network
links.
","
Run the following commands to stop rsync.service, and remove the rsync package:
# systemctl stop rsync.service
# apt purge rsync
- OR -
- IF - the rsync package is required as a dependency:
Run the following commands to stop and mask rsync.service:
# systemctl stop rsync.service
# systemctl mask rsync.service
",True
2.1.14,,"
The Samba daemon allows system administrators to configure their Linux systems to
share file systems and directories with Windows desktops. Samba will advertise the file
systems and directories via the Server Message Block (SMB) protocol. Windows
desktop users will be able to mount these directories and file systems as letter drives on
their systems.
","
Run the following commands to stop smbd.service and remove samba package:
# systemctl stop smbd.service
# apt purge samba
- OR -
- IF - the samba package is required as a dependency:
Run the following commands to stop and mask the smbd.service:
# systemctl stop smbd.service
# systemctl mask smbd.service
",True
2.1.15,Ensure snmp services are not in use,"
Simple Network Management Protocol (SNMP) is a widely used protocol for monitoring
the health and welfare of network equipment, computer equipment and devices like
UPSs.
Net-SNMP is a suite of applications used to implement SNMPv1 (RFC 1157), SNMPv2
(RFCs 1901-1908), and SNMPv3 (RFCs 3411-3418) using both IPv4 and IPv6.
Support for SNMPv2 classic (a.k.a. ""SNMPv2 historic"" - RFCs 1441-1452) was dropped
with the 4.0 release of the UCD-snmp package.
The Simple Network Management Protocol (SNMP) server is used to listen for SNMP
commands from an SNMP management system, execute the commands or collect the
information and then send results back to the requesting system.
","
Run the following commands to stop snmpd.service and remove the snmpd package:
# systemctl stop snmpd.service
# apt purge snmpd
- OR - If the package is required for dependencies:
Run the following commands to stop and mask the snmpd.service:
# systemctl stop snmpd.service
# systemctl mask snmpd.service
",True
2.1.16,Ensure tftp server services are not in use,"
Trivial File Transfer Protocol (TFTP) is a simple protocol for exchanging files between
two TCP/IP machines. TFTP servers allow connections from a TFTP Client for sending
and receiving files.
","
Run the following commands to stop tftpd-hpa.service, and remove the tftpd-hpa
package:
# systemctl stop tftpd-hpa.service
# apt purge tftpd-hpa
- OR -
- IF - the tftpd-hpa package is required as a dependency:
Run the following commands to stop and mask tftpd-hpa.service:
# systemctl stop tftpd-hpa.service
# systemctl mask tftpd-hpa.service
",True
2.1.17,Ensure web proxy server services are not in use,"
Squid is a standard proxy server used in many distributions and environments.
","
Run the following commands to stop squid.service and remove the squid package:
# systemctl stop squid.service
# apt purge squid
- OR - If the squid package is required as a dependency:
Run the following commands to stop and mask the squid.service:
# systemctl stop squid.service
# systemctl mask squid.service
",True
2.1.18,Ensure web server services are not in use,"
Web servers provide the ability to host web site content.
","
Run the following commands to stop httpd.socket, httpd.service, and
nginx.service, and remove apache2 and nginx packages:
# systemctl stop apache2.socket apache2.service nginx.service
# apt purge apache2 nginx
- OR -
- IF - a package is installed and is required for dependencies:
Run the following commands to stop and mask apache2.socket, apache2.service,
and nginx.service:
# systemctl stop apache2.socket apache2.service nginx.service
# systemctl mask apache2.socket apache2.service nginx.service
Note: Other web server packages may exist. If not required and authorized by local site
policy, they should also be removed. If the package is required for a dependency, the
service and socket should be stopped and masked.
",True
2.1.19,Ensure xinetd services are not in use,"
The eXtended InterNET Daemon (xinetd) is an open source super daemon that
replaced the original inetd daemon. The xinetd daemon listens for well known
services and dispatches the appropriate daemon to properly respond to service
requests.
","
Run the following commands to stop xinetd.service, and remove the xinetd
package:
# systemctl stop xinetd.service
# apt purge xinetd
-OR-
-IF- the xinetd package is required as a dependency:
Run the following commands to stop and mask the xinetd.service:
# systemctl stop xinetd.service
# systemctl mask xinetd.service
",True
2.1.20,Ensure X window server services are not in use,"
The X Window System provides a Graphical User Interface (GUI) where users can have
multiple windows in which to run programs and various add on. The X Windows system
is typically used on workstations where users login, but not on servers where users
typically do not login.
","
- IF - a Graphical Desktop Manager or X-Windows server is not required and approved
by local site policy:
Run the following command to remove the X Windows Server package:
# apt purge xserver-common
",True
2.1.21,Ensure mail transfer agent is configured for local-only mode,"
Mail Transfer Agents (MTA), such as sendmail and Postfix, are used to listen for
incoming mail and transfer the messages to the appropriate user or mail server. If the
system is not intended to be a mail server, it is recommended that the MTA be
configured to only process local mail.
","
Edit /etc/postfix/main.cf and add the following line to the RECEIVING MAIL
section. If the line already exists, change it to look like the line below:
inet_interfaces = loopback-only
Run the following command to restart postfix:
# systemctl restart postfix
",True
2.2.1,Ensure NIS Client is not installed,"
The Network Information Service (NIS), formerly known as Yellow Pages, is a client-
server directory service protocol used to distribute system configuration files. The NIS
client was used to bind a machine to an NIS server and receive the distributed
configuration files.
","
Uninstall nis:
# apt purge nis
",True
2.2.2,Ensure rsh client is not installed,"
The rsh-client package contains the client commands for the rsh services.
","
Uninstall rsh:
# apt purge rsh-client
",True
2.2.3,Ensure talk client is not installed,"
The talk software makes it possible for users to send and receive messages across
systems through a terminal session. The talk client, which allows initialization of talk
sessions, is installed by default.
","
Uninstall talk:
# apt purge talk
",True
2.2.4,Ensure telnet client is not installed,"
The inetutils-telnet package contains the telnet client, which allows users to start
connections to other systems via the telnet protocol.
","
Run the following commands to uninstall telnet & inetutils-telnet:
# apt purge telnet
# apt purge inetutils-telnet
",True
2.2.5,Ensure ldap client is not installed,"
The Lightweight Directory Access Protocol (LDAP) was introduced as a replacement for
NIS/YP. It is a service that provides a method for looking up information from a central
database.
","
Uninstall ldap-utils:
# apt purge ldap-utils
",True
2.2.6,Ensure ftp client is not installed,"
tnftp an enhanced FTP client, is the user interface to the Internet standard File
Transfer Protocol. The program allows a user to transfer files to and from a remote
network site.
","
Run the following commands to uninstall tnftp & ftp:
# apt purge ftp
# apt purge tnftp
",True
2.3.1.1,Ensure a single time synchronization daemon is in use,"
System time should be synchronized between all systems in an environment. This is
typically done by establishing an authoritative time server or set of servers and having
all systems synchronize their clocks to them.
Note:
• On virtual systems where host based time synchronization is available
consult your virtualization software documentation and verify that host
based synchronization is in use and follows local site policy. In this
scenario, this section should be skipped
• Only one time synchronization method should be in use on the system.
Configuring multiple time synchronization methods could lead to unexpected or
unreliable results
","
On physical systems, and virtual systems where host based time synchronization is not
available.
Select one of the two time synchronization daemons; chrony (1) or systemd-
timesyncd (2) and following the remediation procedure for the selected daemon.
Note: enabling more than one synchronization daemon could lead to unexpected or
unreliable results:
1. chrony
Run the following command to install chrony:
# apt install chrony
Run the following commands to stop and mask the systemd-timesyncd daemon:
# systemctl stop systemd-timesyncd.service
# systemctl mask systemd-timesyncd.service
Note:
• Subsection: Configure chrony should be followed
• Subsection: Configure systemd-timesyncd should be skipped
2. systemd-timesyncd
Run the following command to remove the chrony package:
# apt purge chrony
# apt autoremove chrony
Note:
• Subsection: Configure systemd-timesyncd should be followed
• Subsection: Configure chrony should be skipped
",True
2.3.2.1,Ensure systemd-timesyncd configured with authorized timeserver,"
NTP=
• A space-separated list of NTP server host names or IP addresses. During
runtime this list is combined with any per-interface NTP servers acquired from
systemd-networkd.service(8). systemd-timesyncd will contact all configured
system or per-interface servers in turn, until one responds. When the empty
string is assigned, the list of NTP servers is reset, and all prior assignments will
have no effect. This setting defaults to an empty list.
FallbackNTP=
• A space-separated list of NTP server host names or IP addresses to be used as
the fallback NTP servers. Any per-interface NTP servers obtained from systemd-
networkd.service(8) take precedence over this setting, as do any servers set via
NTP= above. This setting is hence only relevant if no other NTP server
information is known. When the empty string is assigned, the list of NTP servers
is reset, and all prior assignments will have no effect. If this option is not given, a
compiled-in list of NTP servers is used.
","
Set NTP and/or FallbackNPT parameters to local site approved authoritative time
server(s) in /etc/systemd/timesyncd.conf or a file in
/etc/systemd/timesyncd.conf.d/ ending in .conf in the [Time] section:
Example file:
[Time]
NTP=time.nist.gov # Uses the generic name for NIST's time servers
FallbackNTP=time-a-g.nist.gov time-b-g.nist.gov time-c-g.nist.gov # Space
separated list of NIST time servers
Example script to create systemd drop-in configuration file:
#!/usr/bin/env bash
{
a_settings=(""NTP=time.nist.gov"" ""FallbackNTP=time-a-g.nist.gov time-b-
g.nist.gov time-c-g.nist.gov"")
[ ! -d /etc/systemd/timesyncd.conf.d/ ] && mkdir
/etc/systemd/timesyncd.conf.d/
if grep -Psq -- '^\h*\[Time\]' /etc/systemd/timesyncd.conf.d/60-
timesyncd.conf; then
printf '%s\n' """" ""${a_settings[@]}"" >>
/etc/systemd/timesyncd.conf.d/60-timesyncd.conf
else
printf '%s\n' """" ""[Time]"" ""${a_settings[@]}"" >>
/etc/systemd/timesyncd.conf.d/60-timesyncd.conf
fi
}
Note: If this setting appears in a canonically later file, or later in the same file, the
setting will be overwritten
Run to following command to update the parameters in the service:
# systemctl reload-or-restart systemd-journald
Default Value:
#NTP=
#FallbackNTP=
",True
2.3.2.2,Ensure systemd-timesyncd is enabled and running,"
systemd-timesyncd is a daemon that has been added for synchronizing the system
clock across the network.
","
- IF - systemd-timesyncd is in use on the system, run the following commands:
Run the following command to unmask systemd-timesyncd.service:
# systemctl unmask systemd-timesyncd.service
Run the following command to enable and start systemd-timesyncd.service:
# systemctl --now enable systemd-timesyncd.service
- OR -
If another time synchronization service is in use on the system, run the following
command to stop and mask systemd-timesyncd:
# systemctl --now mask systemd-timesyncd.service
",True
2.3.3.1,Ensure chrony is configured with authorized timeserver,"
• server
o The server directive specifies an NTP server which can be used as a time
source. The client-server relationship is strictly hierarchical: a client might
synchronize its system time to that of the server, but the server’s system
time will never be influenced by that of a client.
o This directive can be used multiple times to specify multiple servers.
o The directive is immediately followed by either the name of the server, or
its IP address.
• pool
o The syntax of this directive is similar to that for the server directive, except
that it is used to specify a pool of NTP servers rather than a single NTP
server. The pool name is expected to resolve to multiple addresses which
might change over time.
o This directive can be used multiple times to specify multiple pools.
o All options valid in the server directive can be used in this directive too.
","
Edit /etc/chrony/chrony.conf or a file ending in .sources in
/etc/chrony/sources.d/ and add or edit server or pool lines as appropriate
according to local site policy:
Edit the Chrony configuration and add or edit the server and/or pool lines returned by
the Audit Procedure as appropriate according to local site policy
<[server|pool]> <[remote-server|remote-pool]>
Example script to add a drop-in configuration for the pool directive:
#!/usr/bin/env bash
{
[ ! -d ""/etc/chrony/sources.d/"" ] && mkdir /etc/chrony/sources.d/
printf '%s\n' """" ""#The maxsources option is unique to the pool directive""
\
""pool time.nist.gov iburst maxsources 4"" >> /etc/chrony/sources.d/60-
sources.sources
chronyc reload sources &>/dev/null
}
Example script to add a drop-in configuration for the server directive:
#!/usr/bin/env bash
{
[ ! -d ""/etc/chrony/sources.d/"" ] && mkdir /etc/chrony/sources.d/
printf '%s\n' """" ""server time-a-g.nist.gov iburst"" ""server 132.163.97.3
iburst"" \
""server time-d-b.nist.gov iburst"" >> /etc/chrony/sources.d/60-
sources.sources
chronyc reload sources &>/dev/null
}
Run the following command to reload the chronyd config:
# systemctl reload-or-restart chronyd
",True
2.3.3.2,Ensure chrony is running as user _chrony,"
The chrony package is installed with a dedicated user account _chrony. This account
is granted the access required by the chronyd service.
","
Add or edit the user line to /etc/chrony/chrony.conf or a file ending in .conf in
/etc/chrony/conf.d/:
user _chrony
- OR -
If another time synchronization service is in use on the system, run the following
command to remove chrony from the system:
# apt purge chrony
# apt autoremove chrony
Default Value:
user _chrony
",True
2.3.3.3,Ensure chrony is enabled and running,"
chrony is a daemon for synchronizing the system clock across the network
","
- IF - chrony is in use on the system, run the following commands:
Run the following command to unmask chrony.service:
# systemctl unmask chrony.service
Run the following command to enable and start chrony.service:
# systemctl --now enable chrony.service
- OR -
If another time synchronization service is in use on the system, run the following
command to remove chrony:
# apt purge chrony
# apt autoremove chrony
",True
2.4.1.1,Ensure cron daemon is enabled and active,"
The cron daemon is used to execute batch jobs on the system.
","
- IF - cron is installed on the system:
Run the following commands to unmask, enable, and start cron:
# systemctl unmask ""$(systemctl list-unit-files | awk
'$1~/^crond?\.service/{print $1}')""
# systemctl --now enable ""$(systemctl list-unit-files | awk
'$1~/^crond?\.service/{print $1}')""
",True
2.4.1.2,Ensure permissions on /etc/crontab are configured,"
The /etc/crontab file is used by cron to control its own jobs. The commands in this
item make sure that root is the user and group owner of the file and that only the owner
can access the file.
","
- IF - cron is installed on the system:
Run the following commands to set ownership and permissions on /etc/crontab:
# chown root:root /etc/crontab
# chmod og-rwx /etc/crontab
Default Value:
Access: (644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
",True
2.4.1.3,Ensure permissions on /etc/cron.hourly are configured,"
This directory contains system cron jobs that need to run on an hourly basis. The files
in this directory cannot be manipulated by the crontab command, but are instead
edited by system administrators using a text editor. The commands below restrict
read/write and search access to user and group root, preventing regular users from
accessing this directory.
","
- IF - cron is installed on the system:
Run the following commands to set ownership and permissions on the
/etc/cron.hourly directory:
# chown root:root /etc/cron.hourly/
# chmod og-rwx /etc/cron.hourly/
Default Value:
Access: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)
",True
2.4.1.4,Ensure permissions on /etc/cron.daily are configured,"
The /etc/cron.daily directory contains system cron jobs that need to run on a daily
basis. The files in this directory cannot be manipulated by the crontab command, but
are instead edited by system administrators using a text editor. The commands below
restrict read/write and search access to user and group root, preventing regular users
from accessing this directory.
","
- IF - cron is installed on the system:
Run the following commands to set ownership and permissions on the
/etc/cron.daily directory:
# chown root:root /etc/cron.daily/
# chmod og-rwx /etc/cron.daily/
Default Value:
Access: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)
",True
2.4.1.5,Ensure permissions on /etc/cron.weekly are configured,"
The /etc/cron.weekly directory contains system cron jobs that need to run on a
weekly basis. The files in this directory cannot be manipulated by the crontab
command but are instead edited by system administrators using a text editor. The
commands below restrict read/write and search access to user and group root,
preventing regular users from accessing this directory.
","
- IF - cron is installed on the system:
Run the following commands to set ownership and permissions on the
/etc/cron.weekly directory:
# chown root:root /etc/cron.weekly/
# chmod og-rwx /etc/cron.weekly/
Default Value:
Access: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)
",True
2.4.1.6,Ensure permissions on /etc/cron.monthly are configured,"
The /etc/cron.monthly directory contains system cron jobs that need to run on a
monthly basis. The files in this directory cannot be manipulated by the crontab
command but are instead edited by system administrators using a text editor. The
commands below restrict read/write and search access to user and group root,
preventing regular users from accessing this directory.
","
- IF - cron is installed on the system:
Run the following commands to set ownership and permissions on the
/etc/cron.monthly directory:
# chown root:root /etc/cron.monthly/
# chmod og-rwx /etc/cron.monthly/
Default Value:
Access: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)
",True
2.4.1.7,Ensure permissions on /etc/cron.d are configured,"
The /etc/cron.d directory contains system cron jobs that need to run in a similar
manner to the hourly, daily weekly and monthly jobs from /etc/crontab, but require
more granular control as to when they run. The files in this directory cannot be
manipulated by the crontab command but are instead edited by system administrators
using a text editor. The commands below restrict read/write and search access to user
and group root, preventing regular users from accessing this directory.
","
- IF - cron is installed on the system:
Run the following commands to set ownership and permissions on the /etc/cron.d
directory:
# chown root:root /etc/cron.d/
# chmod og-rwx /etc/cron.d/
Default Value:
Access: (755/drwxr-xr-x) Uid: ( 0/ root) Gid: ( 0/ root)
",True
2.4.1.8,Ensure crontab is restricted to authorized users,"
crontab is the program used to install, deinstall, or list the tables used to drive the cron
daemon. Each user can have their own crontab, and though these are files in
/var/spool/cron/crontabs, they are not intended to be edited directly.
If the /etc/cron.allow file exists, then you must be listed (one user per line) therein in
order to be allowed to use this command. If the /etc/cron.allow file does not exist but
the /etc/cron.deny file does exist, then you must not be listed in the /etc/cron.deny
file in order to use this command.
If neither of these files exists, then depending on site-dependent configuration
parameters, only the super user will be allowed to use this command, or all users will be
able to use this command.
If both files exist then /etc/cron.allow takes precedence. Which means that
/etc/cron.deny is not considered and your user must be listed in /etc/cron.allow
in order to be able to use the crontab.
Regardless of the existence of any of these files, the root administrative user is always
allowed to setup a crontab.
The files /etc/cron.allow and /etc/cron.deny, if they exist, must be either world-
readable, or readable by group crontab. If they are not, then cron will deny access to
all users until the permissions are fixed.
There is one file for each user's crontab under the /var/spool/cron/crontabs
directory. Users are not allowed to edit the files under that directory directly to ensure
that only users allowed by the system to run periodic tasks can add them, and only
syntactically correct crontabs will be written there. This is enforced by having the
directory writable only by the crontab group and configuring crontab command with the
setgid bid set for that specific group.
Note:
• Even though a given user is not listed in cron.allow, cron jobs can still be run
as that user
• The files /etc/cron.allow and /etc/cron.deny, if they exist, only controls
administrative access to the crontab command for scheduling and modifying cron
jobs
","
- IF - cron is installed on the system:
Run the following script to:
• Create /etc/cron.allow if it doesn't exist
• Change owner to user root
• Change group owner to group root - OR - group crontab if it exists
• Change mode to 640 or more restrictive
#!/usr/bin/env bash
{
[ ! -e ""/etc/cron.deny"" ] && touch /etc/cron.allow
chmod u-x,g-wx,o-rwx /etc/cron.allow
if grep -Pq -- '^\h*crontab\:' /etc/group; then
chown root:crontab /etc/cron.allow
else
chown root:root /etc/cron.allow
fi
}
- IF - /etc/cron.deny exists, run the following script to:
• Change owner to user root
• Change group owner to group root - OR - group crontab if it exists
• Change mode to 640 or more restrictive
#!/usr/bin/env bash
{
if [ -e ""/etc/cron.deny"" ]; then
chmod u-x,g-wx,o-rwx /etc/cron.deny
if grep -Pq -- '^\h*crontab\:' /etc/group; then
chown root:crontab /etc/cron.deny
else
chown root:root /etc/cron.deny
fi
fi
}
Note: On systems where cron is configured to use the group crontab, if the group
crontab is not set as the owner of cron.allow, then cron will deny access to all users
and you will see an error similar to:
You (<USERNAME>) are not allowed to use this program (crontab)
See crontab(1) for more information
",True
2.4.2.1,,"
at allows fairly complex time specifications, extending the POSIX.2 standard. It accepts
times of the form HH:MM to run a job at a specific time of day. (If that time is already
past, the next day is assumed.) You may also specify midnight, noon, or teatime (4pm)
and you can have a time-of-day suffixed with AM or PM for running in the morning or
the evening. You can also say what day the job will be run, by giving a date in the form
month-name day with an optional year, or giving a date of the form MMDD[CC]YY,
MM/DD/[CC]YY, DD.MM.[CC]YY or [CC]YY-MM-DD. The specification of a date must
follow the specification of the time of day. You can also give times like now + count
time-units, where the time-units can be minutes, hours, days, or weeks and you can tell
at to run the job today by suffixing the time with today and to run the job tomorrow by
suffixing the time with tomorrow.
The /etc/at.allow and /etc/at.deny files determine which user can submit
commands for later execution via at or batch. The format of the files is a list of
usernames, one on each line. Whitespace is not permitted. If the file /etc/at.allow
exists, only usernames mentioned in it are allowed to use at. If /etc/at.allow does
not exist, /etc/at.deny is checked, every username not mentioned in it is then allowed
to use at. An empty /etc/at.deny means that every user may use at. If neither file
exists, only the superuser is allowed to use at.
","
- IF - at is installed on the system:
Run the following script to:
• /etc/at.allow:
o Create the file if it doesn't exist
o Change owner or user root
o If group daemon exists, change to group daemon, else change group to
root
o Change mode to 640 or more restrictive
• - IF - /etc/at.deny exists:
o Change owner or user root
o If group daemon exists, change to group daemon, else change group to
root
o Change mode to 640 or more restrictive
#!/usr/bin/env bash
{
grep -Pq -- '^daemon\b' /etc/group && l_group=""daemon"" || l_group=""root""
[ ! -e ""/etc/at.allow"" ] && touch /etc/at.allow
chown root:""$l_group"" /etc/at.allow
chmod u-x,g-wx,o-rwx /etc/at.allow
[ -e ""/etc/at.deny"" ] && chown root:""$l_group"" /etc/at.deny
[ -e ""/etc/at.deny"" ] && chmod u-x,g-wx,o-rwx /etc/at.deny
}
",True
3.1.1,,"
Internet Protocol Version 6 (IPv6) is the most recent version of Internet Protocol (IP). It's
designed to supply IP addressing and additional security to support the predicted
growth of connected devices. IPv6 is based on 128-bit addressing and can support 340
undecillion, which is 340,282,366,920,938,463,463,374,607,431,768,211,456 unique
addresses.
Features of IPv6
• Hierarchical addressing and routing infrastructure
• Statefull and Stateless configuration
• Support for quality of service (QoS)
• An ideal protocol for neighboring node interaction
","
Enable or disable IPv6 in accordance with system requirements and local site policy
Default Value:
IPv6 is enabled
",True
3.1.2,Ensure bluetooth services are not in use,"
Wireless networking is used when wired networks are unavailable.
","
Run the following script to disable any wireless interfaces:
#!/usr/bin/env bash
{
module_fix()
{
if ! modprobe -n -v ""$l_mname"" | grep -P -- '^\h*install
\/bin\/(true|false)'; then
echo -e "" - setting module: \""$l_mname\"" to be un-loadable""
echo -e ""install $l_mname /bin/false"" >>
/etc/modprobe.d/""$l_mname"".conf
fi
if lsmod | grep ""$l_mname"" > /dev/null 2>&1; then
echo -e "" - unloading module \""$l_mname\""""
modprobe -r ""$l_mname""
fi
if ! grep -Pq -- ""^\h*blacklist\h+$l_mname\b"" /etc/modprobe.d/*; then
echo -e "" - deny listing \""$l_mname\""""
echo -e ""blacklist $l_mname"" >> /etc/modprobe.d/""$l_mname"".conf
fi
}
if [ -n ""$(find /sys/class/net/*/ -type d -name wireless)"" ]; then
l_dname=$(for driverdir in $(find /sys/class/net/*/ -type d -name
wireless | xargs -0 dirname); do basename ""$(readlink -f
""$driverdir""/device/driver/module)"";done | sort -u)
for l_mname in $l_dname; do
module_fix
done
fi
}
",True
3.1.3,,"
Bluetooth is a short-range wireless technology standard that is used for exchanging
data between devices over short distances. It employs UHF radio waves in the ISM
bands, from 2.402 GHz to 2.48 GHz. It is mainly used as an alternative to wire
connections.
","
Run the following commands to stop bluetooth.service, and remove the bluez
package:
# systemctl stop bluetooth.service
# apt purge bluez
- OR -
- IF - the bluez package is required as a dependency:
Run the following commands to stop and mask bluetooth.service:
# systemctl stop bluetooth.service
# systemctl mask bluetooth.service
Note: A reboot may be required
",True
3.2.1,Ensure dccp kernel module is not available,"
The Datagram Congestion Control Protocol (DCCP) is a transport layer protocol that
supports streaming media and telephony. DCCP provides a way to gain access to
congestion control, without having to do it at the application layer, but does not provide
in-sequence delivery.
","
Run the following script to unload and disable the dccp module:
- IF - the dccp kernel module is available in ANY installed kernel:
• Create a file ending in .conf with install dccp /bin/false in the
/etc/modprobe.d/ directory
• Create a file ending in .conf with blacklist dccp in the /etc/modprobe.d/
directory
• Run modprobe -r dccp 2>/dev/null; rmmod dccp 2>/dev/null to remove
dccp from the kernel
- IF - the dccp kernel module is not available on the system, or pre-compiled into the
kernel, no remediation is necessary
Page 368
#!/usr/bin/env bash
{
a_output2=() a_output3=() l_dl="""" l_mod_name=""dccp"" l_mod_type=""net""
l_mod_path=""$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)""
f_module_fix()
{
l_dl=""y"" a_showconfig=()
while IFS= read -r l_showconfig; do
a_showconfig+=(""$l_showconfig"")
done < <(modprobe --showconfig | grep -P --
'\b(install|blacklist)\h+'""${l_mod_chk_name//-/_}""'\b')
if lsmod | grep ""$l_mod_chk_name"" &> /dev/null; then
a_output2+=("" - unloading kernel module: \""$l_mod_name\"""")
modprobe -r ""$l_mod_chk_name"" 2>/dev/null; rmmod ""$l_mod_name""
2>/dev/null
fi
if ! grep -Pq -- '\binstall\h+'""${l_mod_chk_name//-
/_}""'\h+(\/usr)?\/bin\/(true|false)\b' <<< ""${a_showconfig[*]}""; then
a_output2+=("" - setting kernel module: \""$l_mod_name\"" to
\""$(readlink -f /bin/false)\"""")
printf '%s\n' ""install $l_mod_chk_name $(readlink -f /bin/false)"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
if ! grep -Pq -- '\bblacklist\h+'""${l_mod_chk_name//-/_}""'\b' <<<
""${a_showconfig[*]}""; then
a_output2+=("" - denylisting kernel module: \""$l_mod_name\"""")
printf '%s\n' ""blacklist $l_mod_chk_name"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
}
for l_mod_base_directory in $l_mod_path; do # Check if the module exists
on the system
if [ -d ""$l_mod_base_directory/${l_mod_name/-/\/}"" ] && [ -n ""$(ls -A
""$l_mod_base_directory/${l_mod_name/-/\/}"")"" ]; then
a_output3+=("" - \""$l_mod_base_directory\"""")
l_mod_chk_name=""$l_mod_name""
[[ ""$l_mod_name"" =~ overlay ]] && l_mod_chk_name=""${l_mod_name::-2}""
[ ""$l_dl"" != ""y"" ] && f_module_fix
else
printf '%s\n' "" - kernel module: \""$l_mod_name\"" doesn't exist in
\""$l_mod_base_directory\""""
fi
done
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" -- INFO --"" "" - module:
\""$l_mod_name\"" exists in:"" ""${a_output3[@]}""
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}"" ||
printf '%s\n' """" "" - No changes needed""
printf '%s\n' """" "" - remediation of kernel module: \""$l_mod_name\""
complete"" """"
}
",True
3.2.2,Ensure tipc kernel module is not available,"
The Transparent Inter-Process Communication (TIPC) protocol is designed to provide
communication between cluster nodes.
","
Run the following script to unload and disable the tipc module:
- IF - the tipc kernel module is available in ANY installed kernel:
• Create a file ending in .conf with install tipc /bin/false in the
/etc/modprobe.d/ directory
• Create a file ending in .conf with blacklist tipc in the /etc/modprobe.d/
directory
• Run modprobe -r tipc 2>/dev/null; rmmod tipc 2>/dev/null to remove
tipc from the kernel
- IF - the tipc kernel module is not available on the system, or pre-compiled into the
kernel, no remediation is necessary
Page 373
#!/usr/bin/env bash
{
a_output2=() a_output3=() l_dl="""" l_mod_name=""tipc"" l_mod_type=""net""
l_mod_path=""$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)""
f_module_fix()
{
l_dl=""y"" a_showconfig=()
while IFS= read -r l_showconfig; do
a_showconfig+=(""$l_showconfig"")
done < <(modprobe --showconfig | grep -P --
'\b(install|blacklist)\h+'""${l_mod_chk_name//-/_}""'\b')
if lsmod | grep ""$l_mod_chk_name"" &> /dev/null; then
a_output2+=("" - unloading kernel module: \""$l_mod_name\"""")
modprobe -r ""$l_mod_chk_name"" 2>/dev/null; rmmod ""$l_mod_name""
2>/dev/null
fi
if ! grep -Pq -- '\binstall\h+'""${l_mod_chk_name//-
/_}""'\h+(\/usr)?\/bin\/(true|false)\b' <<< ""${a_showconfig[*]}""; then
a_output2+=("" - setting kernel module: \""$l_mod_name\"" to
\""$(readlink -f /bin/false)\"""")
printf '%s\n' ""install $l_mod_chk_name $(readlink -f /bin/false)"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
if ! grep -Pq -- '\bblacklist\h+'""${l_mod_chk_name//-/_}""'\b' <<<
""${a_showconfig[*]}""; then
a_output2+=("" - denylisting kernel module: \""$l_mod_name\"""")
printf '%s\n' ""blacklist $l_mod_chk_name"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
}
for l_mod_base_directory in $l_mod_path; do # Check if the module exists
on the system
if [ -d ""$l_mod_base_directory/${l_mod_name/-/\/}"" ] && [ -n ""$(ls -A
""$l_mod_base_directory/${l_mod_name/-/\/}"")"" ]; then
a_output3+=("" - \""$l_mod_base_directory\"""")
l_mod_chk_name=""$l_mod_name""
[[ ""$l_mod_name"" =~ overlay ]] && l_mod_chk_name=""${l_mod_name::-2}""
[ ""$l_dl"" != ""y"" ] && f_module_fix
else
printf '%s\n' "" - kernel module: \""$l_mod_name\"" doesn't exist in
\""$l_mod_base_directory\""""
fi
done
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" -- INFO --"" "" - module:
\""$l_mod_name\"" exists in:"" ""${a_output3[@]}""
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}"" ||
printf '%s\n' """" "" - No changes needed""
printf '%s\n' """" "" - remediation of kernel module: \""$l_mod_name\""
complete"" """"
}
",True
3.2.3,Ensure rds kernel module is not available,"
The Reliable Datagram Sockets (RDS) protocol is a transport layer protocol designed to
provide low-latency, high-bandwidth communications between cluster nodes. It was
developed by the Oracle Corporation.
","
Run the following script to unload and disable the rds module:
- IF - the rds kernel module is available in ANY installed kernel:
• Create a file ending in .conf with install rds /bin/false in the
/etc/modprobe.d/ directory
• Create a file ending in .conf with blacklist rds in the /etc/modprobe.d/
directory
• Run modprobe -r rds 2>/dev/null; rmmod rds 2>/dev/null to remove
rds from the kernel
- IF - the rds kernel module is not available on the system, or pre-compiled into the
kernel, no remediation is necessary
Page 378
#!/usr/bin/env bash
{
a_output2=() a_output3=() l_dl="""" l_mod_name=""rds"" l_mod_type=""net""
l_mod_path=""$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)""
f_module_fix()
{
l_dl=""y"" a_showconfig=()
while IFS= read -r l_showconfig; do
a_showconfig+=(""$l_showconfig"")
done < <(modprobe --showconfig | grep -P --
'\b(install|blacklist)\h+'""${l_mod_chk_name//-/_}""'\b')
if lsmod | grep ""$l_mod_chk_name"" &> /dev/null; then
a_output2+=("" - unloading kernel module: \""$l_mod_name\"""")
modprobe -r ""$l_mod_chk_name"" 2>/dev/null; rmmod ""$l_mod_name""
2>/dev/null
fi
if ! grep -Pq -- '\binstall\h+'""${l_mod_chk_name//-
/_}""'\h+(\/usr)?\/bin\/(true|false)\b' <<< ""${a_showconfig[*]}""; then
a_output2+=("" - setting kernel module: \""$l_mod_name\"" to
\""$(readlink -f /bin/false)\"""")
printf '%s\n' ""install $l_mod_chk_name $(readlink -f /bin/false)"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
if ! grep -Pq -- '\bblacklist\h+'""${l_mod_chk_name//-/_}""'\b' <<<
""${a_showconfig[*]}""; then
a_output2+=("" - denylisting kernel module: \""$l_mod_name\"""")
printf '%s\n' ""blacklist $l_mod_chk_name"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
}
for l_mod_base_directory in $l_mod_path; do # Check if the module exists
on the system
if [ -d ""$l_mod_base_directory/${l_mod_name/-/\/}"" ] && [ -n ""$(ls -A
""$l_mod_base_directory/${l_mod_name/-/\/}"")"" ]; then
a_output3+=("" - \""$l_mod_base_directory\"""")
l_mod_chk_name=""$l_mod_name""
[[ ""$l_mod_name"" =~ overlay ]] && l_mod_chk_name=""${l_mod_name::-2}""
[ ""$l_dl"" != ""y"" ] && f_module_fix
else
printf '%s\n' "" - kernel module: \""$l_mod_name\"" doesn't exist in
\""$l_mod_base_directory\""""
fi
done
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" -- INFO --"" "" - module:
\""$l_mod_name\"" exists in:"" ""${a_output3[@]}""
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}"" ||
printf '%s\n' """" "" - No changes needed""
printf '%s\n' """" "" - remediation of kernel module: \""$l_mod_name\""
complete"" """"
}
",True
3.2.4,Ensure sctp kernel module is not available,"
The Stream Control Transmission Protocol (SCTP) is a transport layer protocol used to
support message oriented communication, with several streams of messages in one
connection. It serves a similar function as TCP and UDP, incorporating features of both.
It is message-oriented like UDP, and ensures reliable in-sequence transport of
messages with congestion control like TCP.
","
Run the following script to unload and disable the sctp module:
- IF - the sctp kernel module is available in ANY installed kernel:
• Create a file ending in .conf with install sctp /bin/false in the
/etc/modprobe.d/ directory
• Create a file ending in .conf with blacklist sctp in the /etc/modprobe.d/
directory
• Run modprobe -r sctp 2>/dev/null; rmmod sctp 2>/dev/null to remove
sctp from the kernel
- IF - the sctp kernel module is not available on the system, or pre-compiled into the
kernel, no remediation is necessary
Page 383
#!/usr/bin/env bash
{
a_output2=() a_output3=() l_dl="""" l_mod_name=""sctp"" l_mod_type=""net""
l_mod_path=""$(readlink -f /lib/modules/**/kernel/$l_mod_type | sort -u)""
f_module_fix()
{
l_dl=""y"" a_showconfig=()
while IFS= read -r l_showconfig; do
a_showconfig+=(""$l_showconfig"")
done < <(modprobe --showconfig | grep -P --
'\b(install|blacklist)\h+'""${l_mod_chk_name//-/_}""'\b')
if lsmod | grep ""$l_mod_chk_name"" &> /dev/null; then
a_output2+=("" - unloading kernel module: \""$l_mod_name\"""")
modprobe -r ""$l_mod_chk_name"" 2>/dev/null; rmmod ""$l_mod_name""
2>/dev/null
fi
if ! grep -Pq -- '\binstall\h+'""${l_mod_chk_name//-
/_}""'\h+(\/usr)?\/bin\/(true|false)\b' <<< ""${a_showconfig[*]}""; then
a_output2+=("" - setting kernel module: \""$l_mod_name\"" to
\""$(readlink -f /bin/false)\"""")
printf '%s\n' ""install $l_mod_chk_name $(readlink -f /bin/false)"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
if ! grep -Pq -- '\bblacklist\h+'""${l_mod_chk_name//-/_}""'\b' <<<
""${a_showconfig[*]}""; then
a_output2+=("" - denylisting kernel module: \""$l_mod_name\"""")
printf '%s\n' ""blacklist $l_mod_chk_name"" >>
/etc/modprobe.d/""$l_mod_name"".conf
fi
}
for l_mod_base_directory in $l_mod_path; do # Check if the module exists
on the system
if [ -d ""$l_mod_base_directory/${l_mod_name/-/\/}"" ] && [ -n ""$(ls -A
""$l_mod_base_directory/${l_mod_name/-/\/}"")"" ]; then
a_output3+=("" - \""$l_mod_base_directory\"""")
l_mod_chk_name=""$l_mod_name""
[[ ""$l_mod_name"" =~ overlay ]] && l_mod_chk_name=""${l_mod_name::-2}""
[ ""$l_dl"" != ""y"" ] && f_module_fix
else
printf '%s\n' "" - kernel module: \""$l_mod_name\"" doesn't exist in
\""$l_mod_base_directory\""""
fi
done
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" -- INFO --"" "" - module:
\""$l_mod_name\"" exists in:"" ""${a_output3[@]}""
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}"" ||
printf '%s\n' """" "" - No changes needed""
printf '%s\n' """" "" - remediation of kernel module: \""$l_mod_name\""
complete"" """"
}
",True
3.3.1,Ensure ip forwarding is disabled,"
The net.ipv4.ip_forward and net.ipv6.conf.all.forwarding flags are used to
tell the system whether it can forward packets or not.
","
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.ip_forward = 0
Example:
# printf '%s\n' ""net.ipv4.ip_forward = 0"" >> /etc/sysctl.d/60-
netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.ip_forward=0
sysctl -w net.ipv4.route.flush=1
}
- IF - IPv6 is enabled on the system:
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv6.conf.all.forwarding = 0
Example:
# printf '%s\n' ""net.ipv6.conf.all.forwarding = 0"" >> /etc/sysctl.d/60-
netipv6_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv6.conf.all.forwarding=0
sysctl -w net.ipv6.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.ip_forward = 0
net.ipv6.conf.all.forwarding = 0
",True
3.3.2,Ensure packet redirect sending is disabled,"
ICMP Redirects are used to send routing information to other hosts. As a host itself
does not act as a router (in a host only configuration), there is no need to send
redirects.
","
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.conf.all.send_redirects = 0
• net.ipv4.conf.default.send_redirects = 0
Example:
# printf '%s\n' ""net.ipv4.conf.all.send_redirects = 0""
""net.ipv4.conf.default.send_redirects = 0"" >> /etc/sysctl.d/60-
netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.conf.all.send_redirects=0
sysctl -w net.ipv4.conf.default.send_redirects=0
sysctl -w net.ipv4.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.conf.all.send_redirects = 1
net.ipv4.conf.default.send_redirects = 1
",True
3.3.3,Ensure bogus icmp responses are ignored,"
Setting net.ipv4.icmp_ignore_bogus_error_responses to 1 prevents the kernel
from logging bogus responses (RFC-1122 non-compliant) from broadcast reframes,
keeping file systems from filling up with useless log messages.
","
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.icmp_ignore_bogus_error_responses = 1
Example:
# printf '%s\n' ""net.ipv4.icmp_ignore_bogus_error_responses = 1"" >>
/etc/sysctl.d/60-netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.icmp_ignore_bogus_error_responses=1
sysctl -w net.ipv4.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.icmp_ignore_bogus_error_responses = 1
",True
3.3.4,Ensure broadcast icmp requests are ignored,"
Setting net.ipv4.icmp_echo_ignore_broadcasts to 1 will cause the system to
ignore all ICMP echo and timestamp requests to broadcast and multicast addresses.
","
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.icmp_echo_ignore_broadcasts = 1
Example:
# printf '%s\n' ""net.ipv4.icmp_echo_ignore_broadcasts = 1"" >>
/etc/sysctl.d/60-netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1
sysctl -w net.ipv4.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.icmp_echo_ignore_broadcasts = 1
",True
3.3.5,Ensure icmp redirects are not accepted,"
ICMP redirect messages are packets that convey routing information and tell your host
(acting as a router) to send packets via an alternate path. It is a way of allowing an
outside routing device to update your system routing tables.
","
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.conf.all.accept_redirects = 0
• net.ipv4.conf.default.accept_redirects = 0
Example:
# printf '%s\n' ""net.ipv4.conf.all.accept_redirects = 0""
""net.ipv4.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-
netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.conf.all.accept_redirects=0
sysctl -w net.ipv4.conf.default.accept_redirects=0
sysctl -w net.ipv4.route.flush=1
}
- IF - IPv6 is enabled on the system:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv6.conf.all.accept_redirects = 0
• net.ipv6.conf.default.accept_redirects = 0
Example:
# printf '%s\n' ""net.ipv6.conf.all.accept_redirects = 0""
""net.ipv6.conf.default.accept_redirects = 0"" >> /etc/sysctl.d/60-
netipv6_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv6.conf.all.accept_redirects=0
sysctl -w net.ipv6.conf.default.accept_redirects=0
sysctl -w net.ipv6.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Page 410
Default Value:
net.ipv4.conf.all.accept_redirects = 1
net.ipv4.conf.default.accept_redirects = 1
net.ipv6.conf.all.accept_redirects = 1
net.ipv6.conf.default.accept_redirects = 1
",True
3.3.6,Ensure secure icmp redirects are not accepted,"
Secure ICMP redirects are the same as ICMP redirects, except they come from
gateways listed on the default gateway list. It is assumed that these gateways are
known to your system, and that they are likely to be secure.
","
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.conf.all.secure_redirects = 0
• net.ipv4.conf.default.secure_redirects = 0
Example:
# printf '%s\n' ""net.ipv4.conf.all.secure_redirects = 0""
""net.ipv4.conf.default.secure_redirects = 0"" >> /etc/sysctl.d/60-
netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.conf.all.secure_redirects=0
sysctl -w net.ipv4.conf.default.secure_redirects=0
sysctl -w net.ipv4.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.conf.all.secure_redirects = 1
net.ipv4.conf.default.secure_redirects = 1
",True
3.3.7,Ensure reverse path filtering is enabled,"
Setting net.ipv4.conf.all.rp_filter and net.ipv4.conf.default.rp_filter to
1 forces the Linux kernel to utilize reverse path filtering on a received packet to
determine if the packet was valid. Essentially, with reverse path filtering, if the return
packet does not go out the same interface that the corresponding source packet came
from, the packet is dropped (and logged if log_martians is set).
","
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.conf.all.rp_filter = 1
• net.ipv4.conf.default.rp_filter = 1
Example:
# printf '%s\n' ""net.ipv4.conf.all.rp_filter = 1""
""net.ipv4.conf.default.rp_filter = 1"" >> /etc/sysctl.d/60-netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.conf.all.rp_filter=1
sysctl -w net.ipv4.conf.default.rp_filter=1
sysctl -w net.ipv4.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.conf.all.rp_filter = 2
net.ipv4.conf.default.rp_filter = 1
",True
3.3.8,Ensure source routed packets are not accepted,"
In networking, source routing allows a sender to partially or fully specify the route
packets take through a network. In contrast, non-source routed packets travel a path
determined by routers in the network. In some cases, systems may not be routable or
reachable from some locations (e.g. private addresses vs. Internet routable), and so
source routed packets would need to be used.
","
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.conf.all.accept_source_route = 0
• net.ipv4.conf.default.accept_source_route = 0
Example:
# printf '%s\n' ""net.ipv4.conf.all.accept_source_route = 0""
""net.ipv4.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-
netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.conf.all.accept_source_route=0
sysctl -w net.ipv4.conf.default.accept_source_route=0
sysctl -w net.ipv4.route.flush=1
}
- IF - IPv6 is enabled on the system:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv6.conf.all.accept_source_route = 0
• net.ipv6.conf.default.accept_source_route = 0
Example:
# printf '%s\n' ""net.ipv6.conf.all.accept_source_route = 0""
""net.ipv6.conf.default.accept_source_route = 0"" >> /etc/sysctl.d/60-
netipv6_sysctl.conf
Run the following command to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv6.conf.all.accept_source_route=0
sysctl -w net.ipv6.conf.default.accept_source_route=0
sysctl -w net.ipv6.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Page 425
Default Value:
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0
",True
3.3.9,Ensure suspicious packets are logged,"
When enabled, this feature logs packets with un-routable source addresses to the
kernel log.
","
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.conf.all.log_martians = 1
• net.ipv4.conf.default.log_martians = 1
Example:
# printf '%s\n' ""net.ipv4.conf.all.log_martians = 1""
""net.ipv4.conf.default.log_martians = 1"" >> /etc/sysctl.d/60-
netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.conf.all.log_martians=1
sysctl -w net.ipv4.conf.default.log_martians=1
sysctl -w net.ipv4.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.conf.all.log_martians = 0
net.ipv4.conf.default.log_martians = 0
",True
3.3.10,Ensure tcp syn cookies is enabled,"
When tcp_syncookies is set, the kernel will handle TCP SYN packets normally until
the half-open connection queue is full, at which time, the SYN cookie functionality kicks
in. SYN cookies work by not using the SYN queue at all. Instead, the kernel simply
replies to the SYN with a SYN/ACK, but will include a specially crafted TCP sequence
number that encodes the source and destination IP address and port number and the
time the packet was sent. A legitimate connection would send the ACK packet of the
three way handshake with the specially crafted sequence number. This allows the
system to verify that it has received a valid response to a SYN cookie and allow the
connection, even though there is no corresponding SYN in the queue.
","
Set the following parameter in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv4.tcp_syncookies = 1
Example:
# printf '%s\n' ""net.ipv4.tcp_syncookies = 1"" >> /etc/sysctl.d/60-
netipv4_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv4.tcp_syncookies=1
sysctl -w net.ipv4.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv4.tcp_syncookies = 1
",True
3.3.11,Ensure ipv6 router advertisements are not accepted,"
Routers periodically multicast Router Advertisement messages to announce their
availability and convey information to neighboring nodes that enable them to be
automatically configured on the network.
net.ipv6.conf.all.accept_ra and net.ipv6.conf.default.accept_ra determine
the systems ability to accept these advertisements
","
- IF - IPv6 is enabled on the system:
Set the following parameters in /etc/sysctl.conf or a file in /etc/sysctl.d/ ending
in .conf:
• net.ipv6.conf.all.accept_ra = 0
• net.ipv6.conf.default.accept_ra = 0
Example:
# printf '%s\n' ""net.ipv6.conf.all.accept_ra = 0""
""net.ipv6.conf.default.accept_ra = 0"" >> /etc/sysctl.d/60-netipv6_sysctl.conf
Run the following script to set the active kernel parameters:
#!/usr/bin/env bash
{
sysctl -w net.ipv6.conf.all.accept_ra=0
sysctl -w net.ipv6.conf.default.accept_ra=0
sysctl -w net.ipv6.route.flush=1
}
Note: If these settings appear in a canonically later file, or later in the same file, these
settings will be overwritten
Default Value:
net.ipv6.conf.all.accept_ra = 1
net.ipv6.conf.default.accept_ra = 1
",True
4.1.1,Ensure a single firewall configuration utility is in use,"
In Linux security, employing a single, effective firewall configuration utility ensures that
only legitimate traffic gets processed, reducing the system’s exposure to potential
threats. The choice between ufw, nftables, and iptables depends on organizational
needs.
Note: iptables is being phased out, and support for iptables will be reduced over
time. It is recommended to transition towards either nftables or ufw as the default
firewall management tool.
","
Remediating to a single firewall configuration is a complex process and involves several
steps. The following provides the basic steps to follow for a single firewall configuration:
1. Determine which firewall utility best fits organizational needs
2. Follow the recommendations in the subsequent subsection for the single firewall
to be used
Note: Review the firewall subsection overview for the selected firewall to be
used, it contains a script to
simplify this process.
3. Return to this recommendation to ensure a single firewall configuration utility is in
use
",True
4.2.1,Ensure ufw is installed,"
The Uncomplicated Firewall (ufw) is a frontend for iptables and is particularly well-suited
for host-based firewalls. ufw provides a framework for managing netfilter, as well as a
command-line interface for manipulating the firewall
","
Run the following command to install Uncomplicated Firewall (UFW):
# apt install ufw
",True
4.2.2,Ensure iptables-persistent is not installed with ufw,"
The iptables-persistent is a boot-time loader for netfilter rules, iptables plugin.
","
Run the following command to remove the iptables-persistent package:
# apt purge iptables-persistent
",True
4.2.3,Ensure ufw service is enabled,"
UncomplicatedFirewall (ufw) is a frontend for iptables. ufw provides a framework for
managing netfilter, as well as a command-line and available graphical user interface for
manipulating the firewall.
Note:
• When running ufw enable or starting ufw via its initscript, ufw will flush its chains.
This is required so ufw can maintain a consistent state, but it may drop existing
connections (eg ssh). ufw does support adding rules before enabling the firewall.
• Run the following command before running ufw enable.
# ufw allow proto tcp from any to any port 22
• The rules will still be flushed, but the ssh port will be open after enabling the
firewall. Please note that once ufw is 'enabled', ufw will not flush the chains when
adding or removing rules (but will when modifying a rule or changing the default
policy)
• By default, ufw will prompt when enabling the firewall while running under ssh.
This can be disabled by using ufw --force enable
","
Run the following command to unmask the ufw daemon:
# systemctl unmask ufw.service
Run the following command to enable and start the ufw daemon:
# systemctl --now enable ufw.service
active
Run the following command to enable ufw:
# ufw enable
",True
4.2.4,Ensure ufw loopback traffic is configured,"
Configure the loopback interface to accept traffic. Configure all other interfaces to deny
traffic to the loopback network (127.0.0.0/8 for IPv4 and ::1/128 for IPv6).
","
Run the following commands to configure the loopback interface to accept traffic:
# ufw allow in on lo
# ufw allow out on lo
Run the following commands to configure all other interfaces to deny traffic to the
loopback network:
# ufw deny in from 127.0.0.0/8
# ufw deny in from ::1
",True
4.2.5,,"
Configure the firewall rules for new outbound connections.
Note:
• Changing firewall settings while connected over network can result in being
locked out of the system.
• Unlike iptables, when a new outbound rule is added, ufw automatically takes care
of associated established connections, so no rules for the latter kind are required.
","
Configure ufw in accordance with site policy. The following commands will implement a
policy to allow all outbound connections on all interfaces:
# ufw allow out on all
",True
4.2.6,Ensure ufw firewall rules exist for all open ports,"
Services and ports can be accepted or explicitly rejected.
","
For each port identified in the audit which does not have a firewall rule, evaluate the
service listening on the port and add a rule for accepting or denying inbound
connections in accordance with local site policy:
Examples:
# ufw allow in <port>/<tcp or udp protocol>
# ufw deny in <port>/<tcp or udp protocol>
Note: Examples create rules for from any, to any. More specific rules should be
concentered when allowing inbound traffic e.g only traffic from this network.
Example to allow traffic on port 443 using the tcp protocol from the 192.168.1.0 network:
ufw allow from 192.168.1.0/24 to any proto tcp port 443
",True
4.2.7,Ensure ufw default deny firewall policy,"
A default deny policy on connections ensures that any unconfigured network usage will
be rejected.
Note: Any port or protocol without a explicit allow before the default deny will be
blocked
","
Run the following commands to implement a default deny policy:
# ufw default deny incoming
# ufw default deny outgoing
# ufw default deny routed
",True
4.3.1,Ensure nftables is installed,"
nftables provides a new in-kernel packet classification framework that is based on a
network-specific Virtual Machine (VM) and a new nft userspace command line tool.
nftables reuses the existing Netfilter subsystems such as the existing hook
infrastructure, the connection tracking system, NAT, userspace queuing and logging
subsystem.
","
Run the following command to install nftables:
# apt install nftables
",True
4.3.2,Ensure ufw is uninstalled or disabled with nftables,"
Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to
be easy to use.
","
Run one of the following to either remove ufw or disable ufw and mask ufw.service:
Run the following command to remove ufw:
# apt purge ufw
-OR-
Run the following commands to disable ufw and mask ufw.service:
# ufw disable
# systemctl stop ufw.service
# systemctl mask ufw.service
Note: ufw disable needs to be run before systemctl mask ufw.service in order to
correctly disable UFW
",True
4.3.3,Ensure iptables are flushed with nftables,"
nftables is a replacement for iptables, ip6tables, ebtables and arptables.
","
Run the following commands to flush iptables:
For iptables:
# iptables -F
For ip6tables:
# ip6tables -F
",True
4.3.4,Ensure a nftables table exists,"
Tables hold chains. Each table only has one address family and only applies to packets
of this family. Tables can have one of five families.
","
Run the following command to create a table in nftables
# nft create table inet <table name>
Example:
# nft create table inet filter
",True
4.3.5,Ensure nftables base chains exist,"
Chains are containers for rules. They exist in two kinds, base chains and regular chains.
A base chain is an entry point for packets from the networking stack, a regular chain
may be used as jump target and is used for better rule organization.
","
Run the following command to create the base chains:
# nft create chain inet <table name> <base chain name> { type filter hook
<(input|forward|output)> priority 0 \; }
Example:
# nft create chain inet filter input { type filter hook input priority 0 \; }
# nft create chain inet filter forward { type filter hook forward priority 0
\; }
# nft create chain inet filter output { type filter hook output priority 0 \;
}
",True
4.3.5,Ensure nftables base chains exist,"
Chains are containers for rules. They exist in two kinds, base chains and regular chains.
A base chain is an entry point for packets from the networking stack, a regular chain
may be used as jump target and is used for better rule organization.
","
Run the following command to create the base chains:
# nft create chain inet <table name> <base chain name> { type filter hook
<(input|forward|output)> priority 0 \; }
Example:
# nft create chain inet filter input { type filter hook input priority 0 \; }
# nft create chain inet filter forward { type filter hook forward priority 0
\; }
# nft create chain inet filter output { type filter hook output priority 0 \;
}
",True
4.3.6,Ensure nftables loopback traffic is configured,"
Configure the loopback interface to accept traffic. Configure all other interfaces to deny
traffic to the loopback network
","
Run the following commands to implement the loopback rules:
# nft add rule inet filter input iif lo accept
# nft add rule inet filter input ip saddr 127.0.0.0/8 counter drop
- IF - IPv6 is enabled on the system:
Run the following command to implement the IPv6 loopback rule:
# nft add rule inet filter input ip6 saddr ::1 counter drop
",True
4.3.7,,"
Configure the firewall rules for new outbound, and established connections
","
Configure nftables in accordance with site policy. The following commands will
implement a policy to allow all outbound connections and all established connections:
# nft add rule inet filter input ip protocol tcp ct state established accept
# nft add rule inet filter input ip protocol udp ct state established accept
# nft add rule inet filter output ip protocol tcp ct state
new,related,established accept
# nft add rule inet filter output ip protocol udp ct state
new,related,established accept
",True
4.3.8,Ensure nftables default deny firewall policy,"
Base chain policy is the default verdict that will be applied to packets reaching the end
of the chain.
","
Run the following command for the base chains with the input, forward, and output
hooks to implement a default DROP policy:
# nft chain <table family> <table name> <chain name> { policy drop \; }
Example:
# nft chain inet filter input { policy drop \; }
# nft chain inet filter forward { policy drop \; }
# nft chain inet filter output { policy drop \; }
Default Value:
accept
",True
4.3.9,Ensure nftables service is enabled,"
The nftables service allows for the loading of nftables rulesets during boot, or starting on
the nftables service
","
Run the following command to enable the nftables service:
# systemctl enable nftables
",True
4.3.10,,"
nftables is a subsystem of the Linux kernel providing filtering and classification of
network packets/datagrams/frames.
The nftables service reads the /etc/nftables.conf file for a nftables file or files to
include in the nftables ruleset.
A nftables ruleset containing the input, forward, and output base chains allow network
traffic to be filtered.
Note: Saving the script and following the instruction in the Configure nftables section
overview will implement the rules in the configure nftable section, open port 22(ssh)
from anywhere, and applies nftables ruleset on boot.
","
Edit the /etc/nftables.conf file and un-comment or add a line with include
<Absolute path to nftables rules file> for each nftables file you want included
in the nftables ruleset on boot
Example:
# vi /etc/nftables.conf
Add the line:
include ""/etc/nftables.rules""
",True
4.4.1.1,Ensure iptables packages are installed,"
iptables is a utility program that allows a system administrator to configure the tables
provided by the Linux kernel firewall, implemented as different Netfilter modules, and
the chains and rules it stores. Different kernel modules and programs are used for
different protocols; iptables applies to IPv4, ip6tables to IPv6, arptables to ARP, and
ebtables to Ethernet frames.
","
Run the following command to install iptables and iptables-persistent
# apt install iptables iptables-persistent
",True
4.4.1.2,Ensure nftables is not in use with iptables,"
nftables is a subsystem of the Linux kernel providing filtering and classification of
network packets/datagrams/frames and is the successor to iptables.
","
Run the following command to remove nftables:
# apt purge nftables
- OR -
Run the following commands to stop and mask nftables.service:
# systemctl stop nftables.service
# systemctl mask nftables.service
",True
4.4.1.3,Ensure ufw is not in use with iptables,"
Uncomplicated Firewall (UFW) is a program for managing a netfilter firewall designed to
be easy to use.
• Uses a command-line interface consisting of a small number of simple
commands
• Uses iptables for configuration
","
Run the following command to remove ufw:
# apt purge ufw
- OR -
Run the following commands to disable ufw, and stop and mask ufw.service:
# ufw disable
# systemctl stop ufw.service
# systemctl mask ufw.service
Note: ufw disable needs to be run before systemctl mask ufw.service in order to
correctly disable UFW
",True
4.4.2.1,Ensure iptables default deny firewall policy,"
A default deny all policy on connections ensures that any unconfigured network usage
will be rejected
","
Run the following commands to implement a default DROP policy:
# iptables -P INPUT DROP
# iptables -P OUTPUT DROP
# iptables -P FORWARD DROP
",True
4.4.2.2,Ensure iptables loopback traffic is configured,"
Configure the loopback interface to accept traffic. Configure all other interfaces to deny
traffic to the loopback network (127.0.0.0/8).
","
Run the following commands to implement the loopback rules:
# iptables -A INPUT -i lo -j ACCEPT
# iptables -A OUTPUT -o lo -j ACCEPT
# iptables -A INPUT -s 127.0.0.0/8 -j DROP
",True
4.4.2.3,,"
Configure the firewall rules for new outbound, and established connections.
Note:
• Changing firewall settings while connected over network can result in being
locked out of the system
• Remediation will only affect the active system firewall, be sure to configure the
default policy in your firewall management to apply on boot as well
","
Configure iptables in accordance with site policy. The following commands will
implement a policy to allow all outbound connections and all established connections:
# iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
",True
4.4.2.4,,"
Any ports that have been opened on non-loopback addresses need firewall rules to
govern traffic.
Notes:
• Changing firewall settings while connected over network can result in being
locked out of the system
• Remediation will only affect the active system firewall, be sure to configure the
default policy in your firewall management to apply on boot as well
• The remediation command opens up the port to traffic from all sources. Consult
iptables documentation and set any restrictions in compliance with site policy
","
For each port identified in the audit which does not have a firewall rule establish a
proper rule for accepting inbound connections:
# iptables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j
ACCEPT
",True
4.4.3.1,Ensure ip6tables default deny firewall policy,"
A default deny all policy on connections ensures that any unconfigured network usage
will be rejected.
Note:
• Changing firewall settings while connected over network can result in being
locked out of the system
• Remediation will only affect the active system firewall, be sure to configure the
default policy in your firewall management to apply on boot as well
","
- IF - IPv6 is enabled on your system:
Run the following commands to implement a default DROP policy:
# ip6tables -P INPUT DROP
# ip6tables -P OUTPUT DROP
# ip6tables -P FORWARD DROP
",True
4.4.3.2,Ensure ip6tables loopback traffic is configured,"
Configure the loopback interface to accept traffic. Configure all other interfaces to deny
traffic to the loopback network (::1).
Note:
• Changing firewall settings while connected over network can result in being
locked out of the system
• Remediation will only affect the active system firewall, be sure to configure the
default policy in your firewall management to apply on boot as well
","
Run the following commands to implement the loopback rules:
# ip6tables -A INPUT -i lo -j ACCEPT
# ip6tables -A OUTPUT -o lo -j ACCEPT
# ip6tables -A INPUT -s ::1 -j DROP
",True
4.4.3.3,,"
Configure the firewall rules for new outbound, and established IPv6 connections.
Note:
• Changing firewall settings while connected over network can result in being
locked out of the system
• Remediation will only affect the active system firewall, be sure to configure the
default policy in your firewall management to apply on boot as well
","
Configure iptables in accordance with site policy. The following commands will
implement a policy to allow all outbound connections and all established connections:
# ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
# ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
",True
4.4.3.4,,"
Any ports that have been opened on non-loopback addresses need firewall rules to
govern traffic.
Notes:
• Changing firewall settings while connected over network can result in being
locked out of the system
• Remediation will only affect the active system firewall, be sure to configure the
default policy in your firewall management to apply on boot as well
• The remediation command opens up the port to traffic from all sources. Consult
iptables documentation and set any restrictions in compliance with site policy
","
For each port identified in the audit which does not have a firewall rule establish a
proper rule for accepting inbound connections:
# ip6tables -A INPUT -p <protocol> --dport <port> -m state --state NEW -j
ACCEPT
",True
5.1.1,Ensure permissions on /etc/ssh/sshd_config are configured,"
The file /etc/ssh/sshd_config, and files ending in .conf in the
/etc/ssh/sshd_config.d directory, contain configuration specifications for sshd.
","
Run the following script to set ownership and permissions on /etc/ssh/sshd_config
and files ending in .conf in the /etc/ssh/sshd_config.d directory:
#!/usr/bin/env bash
{
chmod u-x,og-rwx /etc/ssh/sshd_config
chown root:root /etc/ssh/sshd_config
while IFS= read -r -d $'\0' l_file; do
if [ -e ""$l_file"" ]; then
chmod u-x,og-rwx ""$l_file""
chown root:root ""$l_file""
fi
done < <(find /etc/ssh/sshd_config.d -type f -print0 2>/dev/null)
}
- IF - other locations are listed in an Include statement, *.conf files in these locations
access should also be modified.
",True
5.1.2,Ensure permissions on SSH private host key files are configured,"
An SSH private key is one of two files used in SSH public key authentication. In this
authentication method, the possession of the private key is proof of identity. Only a
private key that corresponds to a public key will be able to authenticate successfully.
The private keys need to be stored and handled carefully, and no copies of the private
key should be distributed.
","
Run the following script to set mode, ownership, and group on the private SSH host key
files:
#!/usr/bin/env bash
{
a_output=(); a_output2=(); l_ssh_group_name=""$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/)
{print $1}' /etc/group)""
f_file_access_fix()
{
while IFS=: read -r l_file_mode l_file_owner l_file_group; do
a_out2=()
[ ""$l_file_group"" = ""$l_ssh_group_name"" ] && l_pmask=""0137"" || l_pmask=""0177""
l_maxperm=""$( printf '%o' $(( 0777 & ~$l_pmask )) )""
if [ $(( $l_file_mode & $l_pmask )) -gt 0 ]; then
a_out2+=("" Mode: \""$l_file_mode\"" should be mode: \""$l_maxperm\"" or
more restrictive"" \
"" updating to mode: \:$l_maxperm\"""")
if [ ""l_file_group"" = ""$l_ssh_group_name"" ]; then
chmod u-x,g-wx,o-rwx ""$l_file""
else
chmod u-x,go-rwx ""$l_file""
fi
fi
if [ ""$l_file_owner"" != ""root"" ]; then
a_out2+=("" Owned by: \""$l_file_owner\"" should be owned by \""root\"""" \
"" Changing ownership to \""root\"""")
chown root ""$l_file""
fi
if [[ ! ""$l_file_group"" =~ ($l_ssh_group_name|root) ]]; then
[ -n ""$l_ssh_group_name"" ] && l_new_group=""$l_ssh_group_name"" ||
l_new_group=""root""
a_out2+=("" Owned by group \""$l_file_group\"" should be group owned by:
\""$l_ssh_group_name\"" or \""root\"""" \
"" Changing group ownership to \""$l_new_group\"""")
chgrp ""$l_new_group"" ""$l_file""
fi
if [ ""${#a_out2[@]}"" -gt ""0"" ]; then
a_output2+=("" - File: \""$l_file\"""" ""${a_out2[@]}"")
else
a_output+=("" - File: \""$l_file\"""" \
""Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"", and group
owner: \""$l_file_group\"" configured"")
fi
done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
}
while IFS= read -r -d $'\0' l_file; do
if ssh-keygen -lf &>/dev/null ""$l_file""; then
file ""$l_file"" | grep -Piq -- '\bopenssh\h+([^#\n\r]+\h+)?private\h+key\b' &&
f_file_access_fix
fi
done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
if [ ""${#a_output2[@]}"" -le ""0"" ]; then
printf '%s\n' """" "" - No access changes required"" """"
else
printf '%s\n' """" "" - Remediation results:"" ""${a_output2[@]}"" """"
fi
}

",True
5.1.3,Ensure permissions on SSH public host key files are configured,"
An SSH public key is one of two files used in SSH public key authentication. In this
authentication method, a public key is a key that can be used for verifying digital
signatures generated using a corresponding private key. Only a public key that
corresponds to a private key will be able to authenticate successfully.
","
Run the following script to set mode, ownership, and group on the public SSH host key
files:
#!/usr/bin/env bash
{
a_output=(); a_output2=()
l_pmask=""0133""; l_maxperm=""$( printf '%o' $(( 0777 & ~$l_pmask )) )""
f_file_access_fix()
{
while IFS=: read -r l_file_mode l_file_owner l_file_group; do
a_out2=()
[ $(( $l_file_mode & $l_pmask )) -gt 0 ] && \
a_out2+=("" Mode: \""$l_file_mode\"" should be mode:
\""$l_maxperm\"" or more restrictive"" \
"" updating to mode: \""$l_maxperm\"""") && chmod u-x,go-wx
""$l_file""
[ ""$l_file_owner"" != ""root"" ] && \
a_out2+=("" Owned by: \""$l_file_owner\"" should be owned by
\""root\"""" \
"" Changing ownership to \""root\"""") && chown root ""$l_file""
[ ""$l_file_group"" != ""root"" ] && \
a_out2+=("" Owned by group \""$l_file_group\"" should be group
owned by: \""root\"""" \
"" Changing group ownership to \""root\"""") && chgrp root
""$l_file""
if [ ""${#a_out2[@]}"" -gt ""0"" ]; then
a_output2+=("" - File: \""$l_file\"""" ""${a_out2[@]}"")
else
a_output+=("" - File: \""$l_file\"""" \
"" Correct: mode: \""$l_file_mode\"", owner: \""$l_file_owner\"",
and group owner: \""$l_file_group\"" configured"")
fi
done < <(stat -Lc '%#a:%U:%G' ""$l_file"")
}
while IFS= read -r -d $'\0' l_file; do
if ssh-keygen -lf &>/dev/null ""$l_file""; then
file ""$l_file"" | grep -Piq --
'\bopenssh\h+([^#\n\r]+\h+)?public\h+key\b' && f_file_access_fix
fi
done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)
if [ ""${#a_output2[@]}"" -le ""0"" ]; then
printf '%s\n' """" "" - No access changes required"" """"
else
printf '%s\n' "" - Remediation results:"" ""${a_output2[@]}"" """"
fi
}
Default Value:
644 0/root 0/root
",True
5.1.4,Ensure sshd access is configured,"
There are several options available to limit which users and group can access the
system via SSH. It is recommended that at least one of the following options be
leveraged:
• AllowUsers:
o The AllowUsers variable gives the system administrator the option of
allowing specific users to ssh into the system. The list consists of space
separated user names. Numeric user IDs are not recognized with this
variable. If a system administrator wants to restrict user access further by
only allowing the allowed users to log in from a particular host, the entry
can be specified in the form of user@host.
• AllowGroups:
o The AllowGroups variable gives the system administrator the option of
allowing specific groups of users to ssh into the system. The list consists
of space separated group names. Numeric group IDs are not recognized
with this variable.
• DenyUsers:
o The DenyUsers variable gives the system administrator the option of
denying specific users to ssh into the system. The list consists of space
separated user names. Numeric user IDs are not recognized with this
variable. If a system administrator wants to restrict user access further by
specifically denying a user's access from a particular host, the entry can
be specified in the form of user@host.
• DenyGroups:
o The DenyGroups variable gives the system administrator the option of
denying specific groups of users to ssh into the system. The list consists
of space separated group names. Numeric group IDs are not recognized
with this variable.
","
Edit the /etc/ssh/sshd_config file to set one or more of the parameters above any
Include and Match set statements as follows:
AllowUsers <userlist>
- AND/OR -
AllowGroups <grouplist>
Note:
• First occurrence of a option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a .conf file in an
Include directory.
• Be advised that these options are ""ANDed"" together. If both AllowUsers and
AllowGroups are set, connections will be limited to the list of users that are also
a member of an allowed group. It is recommended that only one be set for clarity
and ease of administration.
• It is easier to manage an allow list than a deny list. In a deny list, you could
potentially add a user or group and forget to add it to the deny list.
Page 536
Default Value:
None
",True
5.1.5,Ensure sshd Banner is configured,"
The Banner parameter specifies a file whose contents must be sent to the remote user
before authentication is permitted. By default, no banner is displayed.
","
Edit the /etc/ssh/sshd_config file to set the Banner parameter above any Include
and Match entries as follows:
Banner /etc/issue.net
Note: First occurrence of a option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Edit the file being called by the Banner argument with the appropriate contents
according to your site policy, remove any instances of \m , \r , \s , \v or references to
the OS platform
Example:
# printf '%s\n' ""Authorized users only. All activity may be monitored and
reported."" > ""$(sshd -T | awk '$1 == ""banner"" {print $2}')""
",True
5.1.6,Ensure sshd Ciphers are configured,"
This variable limits the ciphers that SSH can use during communication.
Notes:
• Some organizations may have stricter requirements for approved ciphers.
• Ensure that ciphers used are in compliance with site policy.
• The only ""strong"" ciphers currently FIPS 140 compliant are:
o aes256-gcm@openssh.com
o aes128-gcm@openssh.com
o aes256-ctr
o aes192-ctr
o aes128-ctr
","
Edit the /etc/ssh/sshd_config file and add/modify the Ciphers line to contain a comma
separated list of the site unapproved (weak) Ciphers preceded with a - above any
Include entries:
Example:
Ciphers -3des-cbc,aes128-cbc,aes192-cbc,aes256-cbc,chacha20-
poly1305@openssh.com
- IF - CVE-2023-48795 has been addressed, and it meets local site policy, chacha20-
poly1305@openssh.com may be removed from the list of excluded ciphers.
Note: First occurrence of an option takes precedence. If Include locations are enabled,
used, and order of precedence is understood in your environment, the entry may be
created in a file in Include location.
Default Value:
Ciphers chacha20-poly1305@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr,aes128-
gcm@openssh.com,aes256-gcm@openssh.com
",True
5.1.7,Ensure sshd ClientAliveInterval and ClientAliveCountMax are configured,"
Note: To clarify, the two settings described below are only meant for idle connections
from a protocol perspective and are not meant to check if the user is active or not. An
idle user does not mean an idle connection. SSH does not and never had, intentionally,
the capability to drop idle users. In SSH versions before 8.2p1 there was a bug that
caused these values to behave in such a manner that they were abused to disconnect
idle users. This bug has been resolved in 8.2p1 and thus it can no longer be abused
disconnect idle users.
The two options ClientAliveInterval and ClientAliveCountMax control the timeout
of SSH sessions. Taken directly from man 5 sshd_config:
• ClientAliveInterval Sets a timeout interval in seconds after which if no data
has been received from the client, sshd(8) will send a message through the
encrypted channel to request a response from the client. The default is 0,
indicating that these messages will not be sent to the client.
• ClientAliveCountMax Sets the number of client alive messages which may be
sent without sshd(8) receiving any messages back from the client. If this
threshold is reached while client alive messages are being sent, sshd will
disconnect the client, terminating the session. It is important to note that the use
of client alive messages is very different from TCPKeepAlive. The client alive
messages are sent through the encrypted channel and therefore will not be
spoofable. The TCP keepalive option en‐abled by TCPKeepAlive is spoofable.
The client alive mechanism is valuable when the client or server depend on
knowing when a connection has become unresponsive. The default value is 3. If
ClientAliveInterval is set to 15, and ClientAliveCountMax is left at the default,
unresponsive SSH clients will be disconnected after approximately 45 seconds.
Setting a zero ClientAliveCountMax disables connection termination.
","
Edit the /etc/ssh/sshd_config file to set the ClientAliveInterval and
ClientAliveCountMax parameters above any Include and Match entries according to
site policy.
Example:
ClientAliveInterval 15
ClientAliveCountMax 3
Note: First occurrence of a option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Page 545
Default Value:
ClientAliveInterval 0
ClientAliveCountMax 3
",True
5.1.9,Ensure sshd GSSAPIAuthentication is disabled,"
The GSSAPIAuthentication parameter specifies whether user authentication based on
GSSAPI is allowed.
","
Edit the /etc/ssh/sshd_config file to set the GSSAPIAuthentication parameter to
no above any Include and Match entries as follows:
GSSAPIAuthentication no
Note: First occurrence of an option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
",True
5.1.10,Ensure sshd HostbasedAuthentication is disabled,"
The HostbasedAuthentication parameter specifies if authentication is allowed
through trusted hosts via the user of .rhosts, or /etc/hosts.equiv, along with
successful public key client host authentication.
","
Edit the /etc/ssh/sshd_config file to set the HostbasedAuthentication parameter
to no above any Include and Match entries as follows:
HostbasedAuthentication no
Note: First occurrence of a option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Default Value:
HostbasedAuthentication no
",True
5.1.11,Ensure sshd IgnoreRhosts is enabled,"
The IgnoreRhosts parameter specifies that .rhosts and .shosts files will not be used
in RhostsRSAAuthentication or HostbasedAuthentication.
","
Edit the /etc/ssh/sshd_config file to set the IgnoreRhosts parameter to yes above
any Include and Match entries as follows:
IgnoreRhosts yes
Note: First occurrence of a option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Default Value:
IgnoreRhosts yes
",True
5.1.12,Ensure sshd KexAlgorithms is configured,"
Key exchange is any method in cryptography by which cryptographic keys are
exchanged between two parties, allowing use of a cryptographic algorithm. If the sender
and receiver wish to exchange encrypted messages, each must be equipped to encrypt
messages to be sent and decrypt messages received.
","
Edit the /etc/ssh/sshd_config file and add/modify the KexAlgorithms line to contain
a comma separated list of the site unapproved (weak) KexAlgorithms preceded with a -
above any Include entries:
Example:
KexAlgorithms -diffie-hellman-group1-sha1,diffie-hellman-group14-sha1,diffie-
hellman-group-exchange-sha1
Note: First occurrence of an option takes precedence. If Include locations are enabled,
used, and order of precedence is understood in your environment, the entry may be
created in a file in Include location.
Default Value:
KexAlgorithms sntrup761x25519-sha512@openssh.com,curve25519-
sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-
sha2-nistp521,diffie-hellman-group-exchange-sha256,diffie-hellman-group16-
sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256
",True
5.1.13,Ensure sshd LoginGraceTime is configured,"
The LoginGraceTime parameter specifies the time allowed for successful
authentication to the SSH server. The longer the Grace period is the more open
unauthenticated connections can exist. Like other session controls in this session the
Grace Period should be limited to appropriate organizational limits to ensure the service
is available for needed access.
","
Edit the /etc/ssh/sshd_config file to set the LoginGraceTime parameter to 60
seconds or less above any Include entry as follows:
LoginGraceTime 60
Note: First occurrence of a option takes precedence. If Include locations are enabled,
used, and order of precedence is understood in your environment, the entry may be
created in a file in Include location.
Default Value:
LoginGraceTime 120
",True
5.1.14,Ensure sshd LogLevel is configured,"
SSH provides several logging levels with varying amounts of verbosity. The DEBUG
options are specifically not recommended other than strictly for debugging SSH
communications. These levels provide so much data that it is difficult to identify
important security information, and may violate the privacy of users.
","
Edit the /etc/ssh/sshd_config file to set the LogLevel parameter to VERBOSE or
INFO above any Include and Match entries as follows:
LogLevel VERBOSE
- OR -
LogLevel INFO
Note: First occurrence of an option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Default Value:
LogLevel INFO
",True
5.1.15,Ensure sshd MACs are configured,"
This variable limits the types of MAC algorithms that SSH can use during
communication.
","
Edit the /etc/ssh/sshd_config file and add/modify the MACs line to contain a comma
separated list of the site unapproved (weak) MACs preceded with a - above any
Include entries:
Example:
MACs -hmac-md5,hmac-md5-96,hmac-ripemd160,hmac-sha1-96,umac-
64@openssh.com,hmac-md5-etm@openssh.com,hmac-md5-96-etm@openssh.com,hmac-
ripemd160-etm@openssh.com,hmac-sha1-96-etm@openssh.com,umac-64-
etm@openssh.com,umac-128-etm@openssh.com
- IF - CVE-2023-48795 has not been reviewed and addressed, the following etm MACs
should be added to the exclude list: hmac-sha1-etm@openssh.com,hmac-sha2-256-
etm@openssh.com,hmac-sha2-512-etm@openssh.com
Note: First occurrence of an option takes precedence. If Include locations are enabled,
used, and order of precedence is understood in your environment, the entry may be
created in a file in Include location.
Default Value:
MACs umac-64-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256-
etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha1-
etm@openssh.com,umac-64@openssh.com,umac-128@openssh.com,hmac-sha2-
256,hmac-sha2-512,hmac-sha1
",True
5.1.16,Ensure sshd MaxAuthTries is configured,"
The MaxAuthTries parameter specifies the maximum number of authentication
attempts permitted per connection. When the login failure count reaches half the
number, error messages will be written to the syslog file detailing the login failure.
","
Edit the /etc/ssh/sshd_config file to set the MaxAuthTries parameter to 4 or less
above any Include and Match entries as follows:
MaxAuthTries 4
Note: First occurrence of an option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Page 566
Default Value:
MaxAuthTries 6
",True
5.1.17,Ensure sshd MaxSessions is configured,"
The MaxSessions parameter specifies the maximum number of open sessions
permitted from a given connection.
","
Edit the /etc/ssh/sshd_config file to set the MaxSessions parameter to 10 or less
above any Include and Match entries as follows:
MaxSessions 10
Note: First occurrence of an option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Default Value:
MaxSessions 10
",True
5.1.18,Ensure sshd MaxStartups is configured,"
The MaxStartups parameter specifies the maximum number of concurrent
unauthenticated connections to the SSH daemon.
","
Edit the /etc/ssh/sshd_config file to set the MaxStartups parameter to 10:30:60 or
more restrictive above any Include entries as follows:
MaxStartups 10:30:60
Note: First occurrence of a option takes precedence. If Include locations are enabled,
used, and order of precedence is understood in your environment, the entry may be
created in a file in Include location.
Default Value:
MaxStartups 10:30:100
",True
5.1.19,Ensure sshd PermitEmptyPasswords is disabled,"
The PermitEmptyPasswords parameter specifies if the SSH server allows login to
accounts with empty password strings.
","
Edit /etc/ssh/sshd_config and set the PermitEmptyPasswords parameter to no
above any Include and Match entries as follows:
PermitEmptyPasswords no
Note: First occurrence of an option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Page 572
Default Value:
PermitEmptyPasswords no
",True
5.1.20,Ensure sshd PermitRootLogin is disabled,"
The PermitRootLogin parameter specifies if the root user can log in using SSH. The
default is prohibit-password.
","
Edit the /etc/ssh/sshd_config file to set the PermitRootLogin parameter to no
above any Include and Match entries as follows:
PermitRootLogin no
Note: First occurrence of an option takes precedence, Match set statements
withstanding. If Include locations are enabled, used, and order of precedence is
understood in your environment, the entry may be created in a file in Include location.
Page 574
Default Value:
PermitRootLogin without-password
",True
5.1.21,Ensure sshd PermitUserEnvironment is disabled,"
The PermitUserEnvironment option allows users to present environment options to
the SSH daemon.
","
Edit the /etc/ssh/sshd_config file to set the PermitUserEnvironment parameter to
no above any Include entries as follows:
PermitUserEnvironment no
Note: First occurrence of an option takes precedence. If Include locations are enabled,
used, and order of precedence is understood in your environment, the entry may be
created in a file in Include location.
Default Value:
PermitUserEnvironment no
",True
5.1.22,Ensure sshd UsePAM is enabled,"
The UsePAM directive enables the Pluggable Authentication Module (PAM) interface. If
set to yes this will enable PAM authentication using
ChallengeResponseAuthentication and PasswordAuthentication directives in
addition to PAM account and session module processing for all authentication types
","
Edit the /etc/ssh/sshd_config file to set the UsePAM parameter to yes above any
Include entries as follows:
UsePAM yes
Note: First occurrence of an option takes precedence. If Include locations are enabled,
used, and order of precedence is understood in your environment, the entry may be
created in a file in Include location.
Default Value:
UsePAM yes
",True
5.2.1,Ensure sudo is installed,"
sudo allows a permitted user to execute a command as the superuser or another user,
as specified by the security policy. The invoking user's real (not effective) user ID is
used to determine the user name with which to query the security policy.
","
First determine if LDAP functionality is required. If so, then install sudo-ldap, else
install sudo.
Example:
# apt install sudo
",True
5.2.2,Ensure sudo commands use pty,"
sudo can be configured to run only from a pseudo terminal (pseudo-pty).
","
Edit the file /etc/sudoers with visudo or a file in /etc/sudoers.d/ with visudo -f
<PATH TO FILE> and add the following line:
Defaults use_pty
Edit the file /etc/sudoers with visudo and any files in /etc/sudoers.d/ with visudo
-f <PATH TO FILE> and remove any occurrence of !use_pty
Note:
• sudo will read each file in /etc/sudoers.d, skipping file names that end in ~ or
contain a . character to avoid causing problems with package manager or editor
temporary/backup files.
• Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will
be parsed before /etc/sudoers.d/10_second.
• Be aware that because the sorting is lexical, not numeric,
/etc/sudoers.d/1_whoops would be loaded after
/etc/sudoers.d/10_second.
• Using a consistent number of leading zeroes in the file names can be used to
avoid such problems.
",True
5.2.3,Ensure sudo log file exists,"
sudo can use a custom log file.
","
Edit the file /etc/sudoers or a file in /etc/sudoers.d/ with visudo or visudo -f
<PATH TO FILE> and add the following line:
Example:
Defaults logfile=""/var/log/sudo.log""
Note:
• sudo will read each file in /etc/sudoers.d, skipping file names that end in ~ or
contain a . character to avoid causing problems with package manager or editor
temporary/backup files.
• Files are parsed in sorted lexical order. That is, /etc/sudoers.d/01_first will
be parsed before /etc/sudoers.d/10_second.
• Be aware that because the sorting is lexical, not numeric,
/etc/sudoers.d/1_whoops would be loaded after
/etc/sudoers.d/10_second.
• Using a consistent number of leading zeroes in the file names can be used to
avoid such problems.
",True
5.2.4,Ensure users must provide password for privilege escalation,"
The operating system must be configured so that users must provide a password for
privilege escalation.
","
Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit
the relevant sudoers file.
Remove any line with occurrences of NOPASSWD tags in the file.
",True
5.2.5,Ensure re-authentication for privilege escalation is not disabled globally,"
The operating system must be configured so that users must re-authenticate for
privilege escalation.
","
Configure the operating system to require users to reauthenticate for privilege
escalation.
Based on the outcome of the audit procedure, use visudo -f <PATH TO FILE> to edit
the relevant sudoers file.
Remove any occurrences of !authenticate tags in the file(s).
",True
5.2.6,Ensure sudo authentication timeout is configured correctly,"
sudo caches used credentials for a default of 15 minutes. This is for ease of use when
there are multiple administrative tasks to perform. The timeout can be modified to suit
local security policies.
This default is distribution specific. See audit section for further information.
","
If the currently configured timeout is larger than 15 minutes, edit the file listed in the
audit section with visudo -f <PATH TO FILE> and modify the entry
timestamp_timeout= to 15 minutes or less as per your site policy. The value is in
minutes. This particular entry may appear on it's own, or on the same line as
env_reset. See the following two examples:
Defaults env_reset, timestamp_timeout=15
Defaults timestamp_timeout=15
Defaults env_reset
",True
5.2.7,,"
The su command allows a user to run a command or shell as another user. The
program has been superseded by sudo, which allows for more granular control over
privileged access. Normally, the su command can be executed by any user. By
uncommenting the pam_wheel.so statement in /etc/pam.d/su, the su command will
only allow users in a specific groups to execute su. This group should be empty to
reinforce the use of sudo for privileged access.
","
Create an empty group that will be specified for use of the su command. The group
should be named according to site policy.
Example:
# groupadd sugroup
Add the following line to the /etc/pam.d/su file, specifying the empty group:
auth required pam_wheel.so use_uid group=sugroup
",True
5.3.1.1,Ensure latest version of pam is installed,"
Updated versions of PAM include additional functionality
","
- IF - the version of libpam-runtime on the system is less than version 1.5.3-5:
Run the following command to update to the latest version of PAM:
# apt upgrade libpam-runtime
",True
5.3.1.2,Ensure libpam-modules is installed,"
Pluggable Authentication Modules for PAM
","
- IF - the version of libpam-modules on the system is less than version 1.5.3-5:
Run the following command to update to the latest version of PAM:
# apt upgrade libpam-modules
",True
5.3.1.3,Ensure libpam-pwquality is installed,"
libpwquality provides common functions for password quality checking and scoring
them based on their apparent randomness. The library also provides a function for
generating random passwords with good pronounceability.
This module can be plugged into the password stack of a given service to provide some
plug-in strength-checking for passwords. The code was originally based on
pam_cracklib module and the module is backwards compatible with its options.
","
Run the following command to install libpam-pwquality:
# apt install libpam-pwquality
",True
5.3.2.1,Ensure pam_unix module is enabled,"
pam_unix is the standard Unix authentication module. It uses standard calls from the
system's libraries to retrieve and set account information as well as authentication.
Usually this is obtained from the /etc/passwd and if shadow is enabled, the
/etc/shadow file as well.
The account component performs the task of establishing the status of the user's
account and password based on the following shadow elements: expire,
last_change, max_change, min_change, warn_change. In the case of the latter, it may
offer advice to the user on changing their password or, through the
PAM_AUTHTOKEN_REQD return, delay giving service to the user until they have
established a new password. The entries listed above are documented in the shadow(5)
manual page. Should the user's record not contain one or more of these entries, the
corresponding shadow check is not performed.
The authentication component performs the task of checking the users credentials
(password). The default action of this module is to not permit the user access to a
service if their official password is blank.
","
Run the following command to enable the pam_unix module:
# pam-auth-update --enable unix
Note: If a site specific custom profile is being used in your environment to configure
PAM that includes the configuration for the pam_faillock module, enable that module
instead
",True
5.3.2.2,Ensure pam_faillock module is enabled,"
The pam_faillock.so module maintains a list of failed authentication attempts per
user during a specified interval and locks the account in case there were more than the
configured number of consecutive failed authentications (this is defined by the deny
parameter in the faillock configuration). It stores the failure records into per-user files in
the tally directory.
","
Create two pam-auth-update profiles in /usr/share/pam-configs/:
1. Create the faillock profile in /usr/share/pam-configs/ with the following
lines:
Name: Enable pam_faillock to deny access
Default: yes
Priority: 0
Auth-Type: Primary
Auth:
[default=die] pam_faillock.so authfail
Example Script:
#!/usr/bin/env bash
{
arr=('Name: Enable pam_faillock to deny access' 'Default: yes' 'Priority:
0' 'Auth-Type: Primary' 'Auth:' ' [default=die]
pam_faillock.so authfail')
printf '%s\n' ""${arr[@]}"" > /usr/share/pam-configs/faillock
}
2. Create the faillock_notify profile in /usr/share/pam-configs/ with the
following lines:
Name: Notify of failed login attempts and reset count upon success
Default: yes
Priority: 1024
Auth-Type: Primary
Auth:
requisite pam_faillock.so preauth
Account-Type: Primary
Account:
required pam_faillock.so
Example Script:
#!/usr/bin/env bash
{
arr=('Name: Notify of failed login attempts and reset count upon success'
'Default: yes' 'Priority: 1024' 'Auth-Type: Primary' 'Auth:' '
requisite pam_faillock.so preauth' 'Account-Type:
Primary' 'Account:' ' required
pam_faillock.so')
printf '%s\n' ""${arr[@]}"" > /usr/share/pam-configs/faillock_notify
}
Run the following command to update the common-auth and common-account PAM
files with the new profiles:
Page 606
# pam-auth-update --enable <profile_filename>
Example:
# pam-auth-update --enable faillock
# pam-auth-update --enable faillock_notify
Note:
• The name used for the file must be used in the pam-auth-update --enable
command
• The Name: line should be easily recognizable and understood
• The Priority: Line is important as it effects the order of the lines in the
/etc/pam.d/ files
• If a site specific custom profile is being used in your environment to configure
PAM that includes the configuration for the pam_faillock module, enable that
module instead
",True
5.3.2.3,Ensure pam_pwquality module is enabled,"
The pam_pwquality.so module performs password quality checking. This module can
be plugged into the password stack of a given service to provide strength-checking for
passwords. The code was originally based on pam_cracklib module and the module is
backwards compatible with its options.
The action of this module is to prompt the user for a password and check its strength
against a system dictionary and a set of rules for identifying poor choices.
The first action is to prompt for a single password, check its strength and then, if it is
considered strong, prompt for the password a second time (to verify that it was typed
correctly on the first occasion). All being well, the password is passed on to subsequent
modules to be installed as the new authentication token.
","
Run the following script to verify the pam_pwquality.so line exists in a pam-auth-
update profile:
# grep -P -- '\bpam_pwquality\.so\b' /usr/share/pam-configs/*
Output should be similar to:
Page 608
/usr/share/pam-configs/pwquality: requisite
pam_pwquality.so retry=3
/usr/share/pam-configs/pwquality: requisite
pam_pwquality.so retry=3
- IF - similar output is returned:
Run the following command to update /etc/pam.d/common-password with the
returned profile:
# pam-auth-update --enable {PROFILE_NAME}
Example:
# pam-auth-update pwquality
- IF - similar output is NOT returned:
Create a pam-auth-update profile in /usr/share/pam-configs/ with the following
lines:
Name: Pwquality password strength checking
Default: yes
Priority: 1024
Conflicts: cracklib
Password-Type: Primary
Password:
requisite pam_pwquality.so retry=3
Example:
#!/usr/bin/env bash
{
arr=('Name: Pwquality password strength checking' 'Default: yes'
'Priority: 1024' 'Conflicts: cracklib' 'Password-Type: Primary' 'Password:' '
requisite pam_pwquality.so retry=3')
printf '%s\n' ""${arr[@]}"" > /usr/share/pam-configs/pwquality
}
Run the following command to update /etc/pam.d/common-password with the
pwquality profile:
# pam-auth-update --enable pwquality
Note:
• The name used for the file must be used in the pam-auth-update --enable
command
• The Name: line should be easily recognizable and understood
• The Priority: Line is important as it effects the order of the lines in the
/etc/pam.d/ files
• If a site specific custom profile is being used in your environment to configure
PAM that includes the configuration for the pam_pwquality module, enable that
module instead
",True
5.3.2.4,Ensure pam_pwhistory module is enabled,"
The pam_pwhistory.so module saves the last passwords for each user in order to
force password change history and keep the user from alternating between the same
password too frequently.
This module does not work together with kerberos. In general, it does not make much
sense to use this module in conjunction with NIS or LDAP, since the old passwords are
stored on the local machine and are not available on another machine for password
history checking.
","
Run the following script to verify the pam_pwquality.so line exists in a pam-auth-
update profile:
# grep -P -- '\bpam_pwhistory\.so\b' /usr/share/pam-configs/*
Output should be similar to:
/usr/share/pam-configs/pwhistory: requisite pam_pwhistory.so remember=24
enforce_for_root try_first_pass use_authtok
- IF - similar output is returned:
Run the following command to update /etc/pam.d/common-password with the
returned profile:
# pam-auth-update --enable {PROFILE_NAME}
Example:
Page 611
# pam-auth-update pwhistory
- IF - similar output is NOT returned:
Create a pwhistory profile in /usr/share/pam-configs/ with the following lines:
Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password: requisite pam_pwhistory.so remember=24 enforce_for_root
try_first_pass use_authtok
Example Script:
#!/usr/bin/env bash
{
arr=('Name: pwhistory password history checking' 'Default: yes' 'Priority:
1024' 'Password-Type: Primary' 'Password:' ' requisite
pam_pwhistory.so remember=24 enforce_for_root try_first_pass use_authtok')
printf '%s\n' ""${arr[@]}"" > /usr/share/pam-configs/pwhistory
}
Run the following command to update /etc/pam.d/common-password with the
pwhistory profile:
# pam-auth-update --enable pwhistory
Note:
• The name used for the file must be used in the pam-auth-update --enable
command
• The Name: line should be easily recognizable and understood
• The Priority: Line is important as it effects the order of the lines in the
/etc/pam.d/ files
• If a site specific custom profile is being used in your environment to configure
PAM that includes the configuration for the pam_pwhistory module, enable that
module instead
",True
5.3.3.1.1,,"
The deny=<n> option will deny access if the number of consecutive authentication
failures for this user during the recent interval exceeds. 
","
Create or edit the following line in /etc/security/faillock.conf setting the deny
option to 5 or less:
deny = 5
Run the following command:
# grep -Pl -- '\bpam_faillock\.so\h+([^#\n\r]+\h+)?deny\b' /usr/share/pam-
configs/*
Edit any returned files and remove the deny=<N> arguments from the
pam_faillock.so line(s):
Page 616
Default Value:
deny = 3
Additional Information:
If a user has been locked out because they have reached the maximum consecutive
failure count defined by deny= in the pam_faillock.so module, the user can be
unlocked by issuing the command faillock --user <USERNAME> --reset. This
command sets the failed count to 0, effectively unlocking the user
",True
5.3.3.1.2,Ensure password unlock time is configured,"
unlock_time=<n> - The access will be re-enabled after seconds after the lock out. The
value 0 has the same meaning as value never - the access will not be re-enabled
without resetting the faillock entries by the faillock(8) command.
Note:
• The default directory that pam_faillock uses is usually cleared on system boot so
the access will be also re-enabled after system reboot. If that is undesirable a
different tally directory must be set with the dir option.
• It is usually undesirable to permanently lock out users as they can become easily
a target of denial of service attack unless the usernames are random and kept
secret to potential attackers.
• The maximum configurable value for unlock_time is 604800
","
Set password unlock time to conform to site policy. unlock_time should be 0 (never),
or 900 seconds or greater.
Edit /etc/security/faillock.conf and update or add the following line:
unlock_time = 900
Run the following command: remove the unlock_time argument from the
pam_faillock.so module in the PAM files:
# grep -Pl -- '\bpam_faillock\.so\h+([^#\n\r]+\h+)?unlock_time\b'
/usr/share/pam-configs/*
Edit any returned files and remove the unlock_time=<N> argument from the
pam_faillock.so line(s):
Default Value:
unlock_time = 600
",True
5.3.3.1.3,Ensure password failed attempts lockout includes root account,"
even_deny_root - Root account can become locked as well as regular accounts
root_unlock_time=n - This option implies even_deny_root option. Allow access after n
seconds to root account after the account is locked. In case the option is not specified
the value is the same as of the unlock_time option.
","
Edit /etc/security/faillock.conf:
• Remove or update any line containing root_unlock_time, - OR - set it to a
value of 60 or more
• Update or add the following line:
even_deny_root
Run the following command:
# grep -Pl --
'\bpam_faillock\.so\h+([^#\n\r]+\h+)?(even_deny_root|root_unlock_time)'
/usr/share/pam-configs/*
Edit any returned files and remove the even_deny_root and root_unlock_time
arguments from the pam_faillock.so line(s):
Default Value:
disabled
",True
5.3.3.2.1,Ensure password number of changed characters is configured,"
The pwquality difok option sets the number of characters in a password that must not
be present in the old password.
","
Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/
directory or the file /etc/security/pwquality.conf and add or modify the following
line to set difok to 2 or more. Ensure setting conforms to local site policy:
Example:
#!/usr/bin/env bash
{
sed -ri 's/^\s*difok\s*=/# &/' /etc/security/pwquality.conf
[ ! -d /etc/security/pwquality.conf.d/ ] && mkdir
/etc/security/pwquality.conf.d/
printf '\n%s' ""difok = 2"" > /etc/security/pwquality.conf.d/50-pwdifok.conf
}
Run the following command:
# grep -Pl -- '\bpam_pwquality\.so\h+([^#\n\r]+\h+)?difok\b' /usr/share/pam-
configs/*
Edit any returned files and remove the difok argument from the pam_pwquality.so
line(s):
Default Value:
difok = 1
",True
5.3.3.2.2,Ensure minimum password length is configured,"
The minimum password length setting determines the lowers number of characters that
make up a password for a user account. There are many different theories about how to
determine the best password length for an organization, but perhaps ""passphrase"" is a
better term than ""password"".
The minlen option sets the minimum acceptable size for the new password (plus one if
credits are not disabled which is the default). Cannot be set to lower value than 6.
","
Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/
directory or the file /etc/security/pwquality.conf and add or modify the following
line to set password length of 14 or more characters. Ensure that password length
conforms to local site policy:
Example:
#!/usr/bin/env bash
{
sed -ri 's/^\s*minlen\s*=/# &/' /etc/security/pwquality.conf
[ ! -d /etc/security/pwquality.conf.d/ ] && mkdir
/etc/security/pwquality.conf.d/
printf '\n%s' ""minlen = 14"" > /etc/security/pwquality.conf.d/50-
pwlength.conf
}
Run the following command:
# grep -Pl -- '\bpam_pwquality\.so\h+([^#\n\r]+\h+)?minlen\b' /usr/share/pam-
configs/*
Edit any returned files and remove the minlen argument from the pam_pwquality.so
line(s):
Default Value:
minlen = 8
",True
5.3.3.2.3,,"
Password complexity can be set through:
• minclass - The minimum number of classes of characters required in a new
password. (digits, uppercase, lowercase, others). e.g. minclass = 4 requires
digits, uppercase, lower case, and special characters.
• dcredit - The maximum credit for having digits in the new password. If less than
0 it is the minimum number of digits in the new password. e.g. dcredit = -1
requires at least one digit
• ucredit - The maximum credit for having uppercase characters in the new
password. If less than 0 it is the minimum number of uppercase characters in the
new password. e.g. ucredit = -1 requires at least one uppercase character
• ocredit - The maximum credit for having other characters in the new password.
If less than 0 it is the minimum number of other characters in the new password.
e.g. ocredit = -1 requires at least one special character
• lcredit - The maximum credit for having lowercase characters in the new
password. If less than 0 it is the minimum number of lowercase characters in the
new password. e.g. lcredit = -1 requires at least one lowercase character
","
Run the following command:
# grep -Pl --
'\bpam_pwquality\.so\h+([^#\n\r]+\h+)?(minclass|[dulo]credit)\b'
/usr/share/pam-configs/*
Edit any returned files and remove the minclass, dcredit, ucredit, lcredit, and
ocredit arguments from the pam_pwquality.so line(s)
Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/
directory or the file /etc/security/pwquality.conf and add or modify the following
line(s) to set complexity according to local site policy:
• minclass = _N_
• dcredit = _N_ # Value should be either 0 or a number proceeded by a minus (-
) symbol
• ucredit = -1 # Value should be either 0 or a number proceeded by a minus (-)
symbol
• ocredit = -1 # Value should be either 0 or a number proceeded by a minus (-)
symbol
• lcredit = -1 # Value should be either 0 or a number proceeded by a minus (-)
symbol
Example 1 - Set minclass = 3:
#!/usr/bin/env bash
{
sed -ri 's/^\s*minclass\s*=/# &/' /etc/security/pwquality.conf
sed -ri 's/^\s*[dulo]credit\s*=/# &/' /etc/security/pwquality.conf
[ ! -d /etc/security/pwquality.conf.d/ ] && mkdir
/etc/security/pwquality.conf.d/
printf '\n%s' ""minclass = 3"" > /etc/security/pwquality.conf.d/50-
pwcomplexity.conf
}
Example 2 - set dcredit = -1, ucredit = -1, and lcredit = -1:
#!/usr/bin/env bash
{
sed -ri 's/^\s*minclass\s*=/# &/' /etc/security/pwquality.conf
sed -ri 's/^\s*[dulo]credit\s*=/# &/' /etc/security/pwquality.conf
[ ! -d /etc/security/pwquality.conf.d/ ] && mkdir
/etc/security/pwquality.conf.d/
printf '%s\n' ""dcredit = -1"" ""ucredit = -1"" ""lcredit = -1"" >
/etc/security/pwquality.conf.d/50-pwcomplexity.conf
}
Page 636
Default Value:
minclass = 0
dcredit = 0
ucredit = 0
ocredit = 0
lcredit = 0
",True
5.3.3.2.4,Ensure password same consecutive characters is configured,"
The pwquality maxrepeat option sets the maximum number of allowed same
consecutive characters in a new password.
","
Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/
directory or the file /etc/security/pwquality.conf and add or modify the following
line to set maxrepeat to 3 or less and not 0. Ensure setting conforms to local site policy:
Example:
#!/usr/bin/env bash
{
sed -ri 's/^\s*maxrepeat\s*=/# &/' /etc/security/pwquality.conf
[ ! -d /etc/security/pwquality.conf.d/ ] && mkdir
/etc/security/pwquality.conf.d/
printf '\n%s' ""maxrepeat = 3"" > /etc/security/pwquality.conf.d/50-
pwrepeat.conf
}
Run the following command:
# grep -Pl -- '\bpam_pwquality\.so\h+([^#\n\r]+\h+)?maxrepeat\b'
/usr/share/pam-configs/*
Edit any returned files and remove the maxrepeat argument from the
pam_pwquality.so line(s):
Default Value:
maxrepeat = 0
",True
5.3.3.2.5,Ensure password maximum sequential characters is configured,"
The pwquality maxsequence option sets the maximum length of monotonic character
sequences in the new password. Examples of such sequence are 12345 or fedcb. The
check is disabled if the value is 0.
Note: Most such passwords will not pass the simplicity check unless the sequence is
only a minor part of the password.
","
Create or modify a file ending in .conf in the /etc/security/pwquality.conf.d/
directory or the file /etc/security/pwquality.conf and add or modify the following
line to set maxsequence to 3 or less and not 0. Ensure setting conforms to local site
policy:
Example:
#!/usr/bin/env bash
{
sed -ri 's/^\s*maxsequence\s*=/# &/' /etc/security/pwquality.conf
[ ! -d /etc/security/pwquality.conf.d/ ] && mkdir
/etc/security/pwquality.conf.d/
printf '\n%s' ""maxsequence = 3"" > /etc/security/pwquality.conf.d/50-
pwmaxsequence.conf
}
Run the following command:
# grep -Pl -- '\bpam_pwquality\.so\h+([^#\n\r]+\h+)?maxsequence\b'
/usr/share/pam-configs/*
Edit any returned files and remove the maxsequence argument from the
pam_pwquality.so line(s):
Default Value:
maxsequence = 0
",True
5.3.3.2.6,Ensure password dictionary check is enabled,"
The pwquality dictcheck option sets whether to check for the words from the
cracklib dictionary.
","
Edit any file ending in .conf in the /etc/security/pwquality.conf.d/ directory
and/or the file /etc/security/pwquality.conf and comment out or remove any
instance of dictcheck = 0:
Example:
# sed -ri 's/^\s*dictcheck\s*=/# &/' /etc/security/pwquality.conf
/etc/security/pwquality.conf.d/*.conf
Run the following command:
# grep -Pl -- '\bpam_pwquality\.so\h+([^#\n\r]+\h+)?dictcheck\b'
/usr/share/pam-configs/*
Edit any returned files and remove the dictcheck argument from the
pam_pwquality.so line(s)
Page 647
Default Value:
dictcheck = 1
",True
5.3.3.2.7,Ensure password quality checking is enforced,"
The pam_pwquality module can be configured to either reject a password if it fails the
checks, or only print a warning.
This is configured by setting the enforcing=<N> argument. If nonzero, a password will
be rejected if it fails the checks, otherwise only a warning message will be provided.
This setting applies only to the pam_pwquality module and possibly other applications
that explicitly change their behavior based on it. It does not affect pwmake(1) and
pwscore(1).
","
Run the following command:
# grep -Pl -- '\bpam_pwquality\.so\h+([^#\n\r]+\h+)?enforcing=0\b'
/usr/share/pam-configs/*
Edit any returned files and remove the enforcing=0 argument from the
pam_pwquality.so line(s)
Edit /etc/security/pwquality.conf and all files ending in .conf in the
/etc/security/pwquality.conf.d/ directory and remove or comment out any line
containing the enforcing = 0 argument:
Example:
# sed -ri 's/^\s*enforcing\s*=\s*0/# &/' /etc/security/pwquality.conf
/etc/security/pwquality.conf.d/*.conf
Default Value:
enforcing=1
",True
5.3.3.2.8,Ensure password quality is enforced for the root user,"
If the pwquality enforce_for_root option is enabled, the module will return error on
failed check even if the user changing the password is root.
This option is off by default which means that just the message about the failed check is
printed but root can change the password anyway.
Note: The root is not asked for an old password so the checks that compare the old and
new password are not performed.
","
Edit or add the following line in a *.conf file in /etc/security/pwquality.conf.d or
in /etc/security/pwquality.conf:
Example:
#!/urs/bin/env bash
{
[ ! -d /etc/security/pwquality.conf.d/ ] && mkdir
/etc/security/pwquality.conf.d/
printf '\n%s\n' ""enforce_for_root"" > /etc/security/pwquality.conf.d/50-
pwroot.conf
}
Default Value:
disabled
",True
5.3.3.3.1,Ensure password history remember is configured,"
The /etc/security/opasswd file stores the users' old passwords and can be checked
to ensure that users are not recycling recent passwords. The number of passwords
remembered is set via the remember argument value in set for the pam_pwhistory
module.
• remember=<N> - <N> is the number of old passwords to remember
","
Run the following command:
# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if
(/pam_pwhistory\.so/) print FILENAME}' /usr/share/pam-configs/*
Edit any returned files and edit or add the remember= argument, with a value of 24 or
more, that meets local site policy to the pam_pwhistory line in the Password section:
Example File:
Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass
use_authtok # <- **ensure line includes remember=<N>**
Run the following command to update the files in the /etc/pam.d/ directory:
# pam-auth-update --enable <MODIFIED_PROFILE_NAME>
Example:
# pam-auth-update --enable pwhistory
",True
5.3.3.3.2,Ensure password history is enforced for the root user,"
If the pwhistory enforce_for_root option is enabled, the module will enforce
password history for the root user as well
","
Run the following command:
# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if
(/pam_pwhistory\.so/) print FILENAME}' /usr/share/pam-configs/*
Edit any returned files and add the enforce_for_root argument to the
pam_pwhistory line in the Password section:
Example File:
Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass
use_authtok # <- **ensure line includes enforce_for_root**
Run the following command to update the files in the /etc/pam.d/ directory:
# pam-auth-update --enable <MODIFIED_PROFILE_NAME>
Example:
# pam-auth-update --enable pwhistory
Default Value:
disabled
",True
5.3.3.3.3,Ensure pam_pwhistory includes use_authtok,"
use_authtok - When password changing enforce the module to set the new password
to the one provided by a previously stacked password module
","
Run the following command:
# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if
(/pam_pwhistory\.so/) print FILENAME}' /usr/share/pam-configs/*
Edit any returned files and add the use_authtok argument to the pam_pwhistory line
in the Password section:
Example File:
Name: pwhistory password history checking
Default: yes
Priority: 1024
Password-Type: Primary
Password:
requisite pam_pwhistory.so remember=24 enforce_for_root try_first_pass
use_authtok # <- **ensure line includes use_authtok**
Run the following command to update the files in the /etc/pam.d/ directory:
# pam-auth-update --enable <MODIFIED_PROFILE_NAME>
Example:
# pam-auth-update --enable pwhistory
",True
5.3.3.4.1,Ensure pam_unix does not include nullok,"
The nullok argument overrides the default action of pam_unix.so to not permit the
user access to a service if their official password is blank.
","
Run the following command:
# grep -PH -- '^\h*([^#\n\r]+\h+)?pam_unix\.so\h+([^#\n\r]+\h+)?nullok\b'
/usr/share/pam-configs/*
Edit any files returned and remove the nullok argument for the pam_unix lines
Example File:
Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary
Auth:
[success=end default=ignore] pam_unix.so try_first_pass # <-
**ensure line does not include nullok nullok**
Auth-Initial:
[success=end default=ignore] pam_unix.so # <- **ensure line does
not include nullok nullok**
Account-Type: Primary
Account:
[success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
[success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional
Session:
required pam_unix.so
Session-Initial:
required pam_unix.so
Password-Type: Primary
Password:
[success=end default=ignore] pam_unix.so obscure use_authtok
try_first_pass yescrypt
Password-Initial:
[success=end default=ignore] pam_unix.so obscure yescrypt
Run the following command to update the files in the /etc/pam.d/ directory:
# pam-auth-update --enable <EDITED_PROFILE_NAME>
Example:
# pam-auth-update --enable unix
Note: If custom files are being used, the corresponding files in /etc/pam.d/ would
need to be edited directly, and the pam-auth-update --enable
<EDITED_PROFILE_NAME> command skipped
",True
5.3.3.4.2,Ensure pam_unix does not include remember,"
The remember=n argument saves the last n passwords for each user in
/etc/security/opasswd in order to force password change history and keep the user
from alternating between the same password too frequently. The MD5 password hash
algorithm is used for storing the old passwords. Instead of this option the
pam_pwhistory module should be used. The pam_pwhistory module saves the last n
passwords for each user in /etc/security/opasswd using the password hash
algorithm set on the pam_unix module. This allows for the yescrypt or sha512 hash
algorithm to be used.
","
Run the following command:
# grep -PH -- '^\h*([^#\n\r]+\h+)?pam_unix\.so\h+([^#\n\r]+\h+)?remember\b'
/usr/share/pam-configs/*
Edit any files returned and remove the remember=_<N>_ argument for the pam_unix
lines
Example output:
[success=end default=ignore] pam_unix.so obscure use_authtok try_first_pass
yescrypt remember=5 # **<- remove remember=<N>**
[success=end default=ignore] pam_unix.so obscure yescrypt remember=5 # **<-
remove remember=<N>**
Run the following command to update the files in the /etc/pam.d/ directory:
# pam-auth-update --enable <EDITED_PROFILE_NAME>
Example:
# pam-auth-update --enable unix
Note: If custom files are being used, the corresponding files in /etc/pam.d/ would
need to be edited directly, and the pam-auth-update --enable
<EDITED_PROFILE_NAME> command skipped
",True
5.3.3.4.3,Ensure pam_unix includes a strong password hashing algorithm,"
A cryptographic hash function converts an arbitrary-length input into a fixed length
output. Password hashing performs a one-way transformation of a password, turning
the password into another string, called the hashed password.
The pam_unix module can be configured to use one of the following hashing algorithms
for user's passwords:
• md5 - When a user changes their password next, encrypt it with the MD5
algorithm.
• bigcrypt - When a user changes their password next, encrypt it with the DEC C2
algorithm.
• sha256 - When a user changes their password next, encrypt it with the SHA256
algorithm. The SHA256 algorithm must be supported by the crypt(3) function.
• sha512 - When a user changes their password next, encrypt it with the SHA512
algorithm. The SHA512 algorithm must be supported by the crypt(3) function.
• blowfish - When a user changes their password next, encrypt it with the
blowfish algorithm. The blowfish algorithm must be supported by the crypt(3)
function.
• gost_yescrypt - When a user changes their password next, encrypt it with the
gost-yescrypt algorithm. The gost-yescrypt algorithm must be supported by
the crypt(3) function.
• yescrypt - When a user changes their password next, encrypt it with the
yescrypt algorithm. The yescrypt algorithm must be supported by the crypt(3)
function.
","
Run the following command:
# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if
(/pam_unix\.so/) print FILENAME}' /usr/share/pam-configs/*
Edit any returned files and edit or add a strong hashing algorithm, either sha512 or
yescrypt, that meets local site policy to the pam_unix lines in the Password section:
Example File:
Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary # <- Start of ""Auth"" section
Auth:
[success=end default=ignore] pam_unix.so try_first_pass
Auth-Initial:
[success=end default=ignore] pam_unix.so
Account-Type: Primary # <- Start of ""Account"" section
Account:
[success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
[success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional # <- Start of ""Session"" section
Session:
required pam_unix.so
Session-Initial:
required pam_unix.so
Password-Type: Primary # <- Start of ""Password"" section
Password:
[success=end default=ignore] pam_unix.so obscure use_authtok
try_first_pass yescrypt # <- **ensure hashing algorithm is either sha512 or
yescrypt**
Password-Initial:
[success=end default=ignore] pam_unix.so obscure yescrypt # <-
**ensure hashing algorithm is either sha512 or yescrypt**
Run the following command to update the files in the /etc/pam.d/ directory:
Page 671
# pam-auth-update --enable <MODIFIED_PROFILE_NAME>
Example:
# pam-auth-update --enable unix
",True
5.3.3.4.4,Ensure pam_unix includes use_authtok,"
use_authtok - When password changing enforce the module to set the new password
to the one provided by a previously stacked password module.
","
Run the following command:
# awk '/Password-Type:/{ f = 1;next } /-Type:/{ f = 0 } f {if
(/pam_unix\.so/) print FILENAME}' /usr/share/pam-configs/*
Edit any returned files add use_authtok to the pam_unix line in the Password section
under Password: subsection:
Note: The if the file's Password section includes a Password-Initial: subsection,
use_authtok should not be added to the pam_unix line in the Password-Initial:
subsection
Example File:
Name: Unix authentication
Default: yes
Priority: 256
Auth-Type: Primary # <- Start of ""Auth"" section
Auth:
[success=end default=ignore] pam_unix.so try_first_pass
Auth-Initial:
[success=end default=ignore] pam_unix.so
Account-Type: Primary # <- Start of ""Account"" section
Account:
[success=end new_authtok_reqd=done default=ignore] pam_unix.so
Account-Initial:
[success=end new_authtok_reqd=done default=ignore] pam_unix.so
Session-Type: Additional # <- Start of ""Session"" section
Session:
required pam_unix.so
Session-Initial:
required pam_unix.so
Password-Type: Primary # <- Start of ""Password"" section
Password:
[success=end default=ignore] pam_unix.so obscure use_authtok
try_first_pass yescrypt # <- **ensure line includes use_authtok**
Password-Initial:
[success=end default=ignore] pam_unix.so obscure yescrypt # <-
**Password-Initial: subsection does not include use_authtok
Run the following command to update the files in the /etc/pam.d/ directory:
# pam-auth-update --enable <MODIFIED_PROFILE_NAME>
Example:
# pam-auth-update --enable unix
",True
5.4.1.1,Ensure password expiration is configured,"
The PASS_MAX_DAYS parameter in /etc/login.defs allows an administrator to force
passwords to expire once they reach a defined age.
PASS_MAX_DAYS <N> - The maximum number of days a password may be used. If the
password is older than this, a password change will be forced. If not specified, -1 will be
assumed (which disables the restriction).
","
Set the PASS_MAX_DAYS parameter to conform to site policy in /etc/login.defs :
PASS_MAX_DAYS 365
Modify user parameters for all users with a password set to match:
# chage --maxdays 365 <user>
Edit /etc/login.defs and set PASS_MAX_DAYS to a value greater than 0 that follows
local site policy:
Example:
PASS_MAX_DAYS 365
Run the following command to modify user parameters for all users with a password set
to a maximum age no greater than 365 or less than 1 that follows local site policy:
# chage --maxdays <N> <user>
Example:
# awk -F: '($2~/^\$.+\$/) {if($5 > 365 || $5 < 1)system (""chage --maxdays 365
"" $1)}' /etc/shadow
Warning: If a password has been set at system install or kickstart, the last change
date field is not set, In this case, setting PASS_MAX_DAYS will immediately expire the
password. One possible solution is to populate the last change date field through a
command like: chage -d ""$(date +%Y-%m-%d)"" root
Default Value:
PASS_MAX_DAYS 99999
",True
5.4.1.2,Ensure minimum password days is configured,"
PASS_MIN_DAYS <N> - The minimum number of days allowed between password
changes. Any password changes attempted sooner than this will be rejected. If not
specified, 0 will be assumed (which disables the restriction).
","
Edit /etc/login.defs and set PASS_MIN_DAYS to a value greater than 0 that follows
local site policy:
Example:
PASS_MIN_DAYS 1
Run the following command to modify user parameters for all users with a password set
to a minimum days greater than zero that follows local site policy:
# chage --mindays <N> <user>
Example:
# awk -F: '($2~/^\$.+\$/) {if($4 < 1)system (""chage --mindays 1 "" $1)}'
/etc/shadow
Default Value:
PASS_MIN_DAYS 0
",True
5.4.1.3,Ensure password expiration warning days is configured,"
The PASS_WARN_AGE parameter in /etc/login.defs allows an administrator to notify
users that their password will expire in a defined number of days.
PASS_WARN_AGE <N> - The number of days warning given before a password expires. A
zero means warning is given only upon the day of expiration, a negative value means
no warning is given. If not specified, no warning will be provided.
","
Edit /etc/login.defs and set PASS_WARN_AGE to a value of 7 or more that follows
local site policy:
Example:
PASS_WARN_AGE 7
Run the following command to modify user parameters for all users with a password set
to a minimum warning to 7 or more days that follows local site policy:
# chage --warndays <N> <user>
Example:
# awk -F: '($2~/^\$.+\$/) {if($6 < 7)system (""chage --warndays 7 "" $1)}'
/etc/shadow
Default Value:
PASS_WARN_AGE 7
",True
5.4.1.4,Ensure strong password hashing algorithm is configured,"
A cryptographic hash function converts an arbitrary-length input into a fixed length
output. Password hashing performs a one-way transformation of a password, turning
the password into another string, called the hashed password.
ENCRYPT_METHOD (string) - This defines the system default encryption algorithm for
encrypting passwords (if no algorithm are specified on the command line). It can take
one of these values:
• MD5 - MD5-based algorithm will be used for encrypting password
• SHA256 - SHA256-based algorithm will be used for encrypting password
• SHA512 - SHA512-based algorithm will be used for encrypting password
• BCRYPT - BCRYPT-based algorithm will be used for encrypting password
• YESCRYPT - YESCRYPT-based algorithm will be used for encrypting password
• DES - DES-based algorithm will be used for encrypting password (default
","
Edit /etc/login.defs and set the ENCRYPT_METHOD to SHA512 or YESCRYPT:
ENCRYPT_METHOD <HASHING_ALGORITHM>
Example:
ENCRYPT_METHOD YESCRYPT
Note:
• This only effects local groups' passwords created after updating the file to use
sha512 or yescrypt.
• If it is determined that the password algorithm being used is not sha512 or
yescrypt, once it is changed, it is recommended that all group passwords be
updated to use the stronger hashing algorithm.
• It is recommended that the chosen hashing algorithm is consistent across
/etc/login.defs and the PAM configuration
Default Value:
ENCRYPT_METHOD SHA512
",True
5.4.1.5,Ensure inactive password lock is configured,"
User accounts that have been inactive for over a given period of time can be
automatically disabled.
INACTIVE - Defines the number of days after the password exceeded its maximum age
where the user is expected to replace this password.
The value is stored in the shadow password file. An input of 0 will disable an expired
password with no delay. An input of -1 will blank the respective field in the shadow
password file.
","
Run the following command to set the default password inactivity period to 45 days or
less that meets local site policy:
# useradd -D -f <N>
Example:
# useradd -D -f 45
Run the following command to modify user parameters for all users with a password set
to a inactive age of 45 days or less that follows local site policy:
# chage --inactive <N> <user>
Example:
# awk -F: '($2~/^\$.+\$/) {if($7 > 45 || $7 < 0)system (""chage --inactive 45
"" $1)}' /etc/shadow
Default Value:
INACTIVE=-1
",True
5.4.1.6,Ensure all users last password change date is in the past,"
All users should have a password change date in the past.
","
nvestigate any users with a password change date in the future and correct them.
Locking the account, expiring the password, or resetting the password manually may be
appropriate.
",True
5.4.2.1,Ensure root is the only UID 0 account,"
Any account with UID 0 has superuser privileges on the system.
","
Run the following command to change the root account UID to 0:
# usermod -u 0 root
Modify any users other than root with UID 0 and assign them a new UID.
",True
5.4.2.2,Ensure root is the only GID 0 account,"
The usermod command can be used to specify which group the root account belongs
to. This affects permissions of files that are created by the root account.
","
Run the following command to set the root user's GID to 0:
# usermod -g 0 root
Run the following command to set the root group's GID to 0:
# groupmod -g 0 root
Remove any users other than the root user with GID 0 or assign them a new GID if
appropriate
",True
5.4.2.3,Ensure group root is the only GID 0 group,"
The groupmod command can be used to specify which group the root group belongs
to. This affects permissions of files that are group owned by the root group.
","
Run the following command to set the root group's GID to 0:
# groupmod -g 0 root
Remove any groups other than the root group with GID 0 or assign them a new GID if
appropriate.
",True
5.4.2.4,Ensure root account access is controlled,"
There are a number of methods to access the root account directly. Without a password
set any user would be able to gain access and thus control over the entire system.
","
Run the following command to set a password for the root user:
# passwd root
- OR -
Run the following command to lock the root user account:
# usermod -L root
",True
5.4.2.5,Ensure root path integrity,"
The root user can execute any command on the system and could be fooled into
executing programs unintentionally if the PATH is not set correctly.
","
Correct or justify any:
• Locations that are not directories
• Empty directories (::)
• Trailing (:)
• Current working directory (.)
• Non root owned directories
• Directories that less restrictive than mode 0755
",True
5.4.2.6,Ensure root user umask is configured,"
The user file-creation mode mask (umask) is used to determine the file permission for
newly created directories and files. In Linux, the default permissions for any newly
created directory is 0777 (rwxrwxrwx), and for any newly created file it is 0666 (rw-rw-
rw-). The umask modifies the default Linux permissions by restricting (masking) these
permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in
the umask are cleared in the resulting file mode.
umask can be set with either Octal or Symbolic values:
• Octal (Numeric) Value - Represented by either three or four digits. ie umask
0027 or umask 027. If a four digit umask is used, the first digit is ignored. The
remaining three digits effect the resulting permissions for user, group, and
world/other respectively.
• Symbolic Value - Represented by a comma separated list for User u, group g,
and world/other o. The permissions listed are not masked by umask. ie a umask
set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask
027. This umask would set a newly created directory with file mode drwxr-x---
and a newly created file with file mode rw-r-----.
root user Shell Configuration Files:
• /root/.bash_profile - Is executed to configure the root users' shell before the
initial command prompt. Is only read by login shells.
• /root/.bashrc - Is executed for interactive shells. only read by a shell that's
both interactive and non-login
umask is set by order of precedence. If umask is set in multiple locations, this order of
precedence will determine the system's default umask.
Order of precedence:
1. /root/.bash_profile
2. /root/.bashrc
3. The system default umask
","
Edit /root/.bash_profile and /root/.bashrc and remove, comment out, or update
any line with umask to be 0027 or more restrictive.
Default Value:
System default umask
",True
5.4.2.7,Ensure system accounts do not have a valid login shell,"
There are a number of accounts provided with most distributions that are used to
manage applications and are not intended to provide an interactive shell. Furthermore,
a user may add special accounts that are not intended to provide an interactive shell.
","
Run the following command to set the shell for any service accounts returned by the
audit to nologin:
# usermod -s $(command -v nologin) <user>
Example script:
#!/usr/bin/env bash
{
l_valid_shells=""^($( awk -F\/ '$NF != ""nologin"" {print}' /etc/shells | sed
-rn '/^\//{s,/,\\\\/,g;p}' | paste -s -d '|' - ))$""
awk -v pat=""$l_valid_shells"" -F:
'($1!~/^(root|halt|sync|shutdown|nfsnobody)$/ && ($3<'""$(awk
'/^\s*UID_MIN/{print $2}' /etc/login.defs)""' || $3 == 65534) && $(NF) ~ pat)
{system (""usermod -s '""$(command -v nologin)""' "" $1)}' /etc/passwd
}
",True
5.4.2.8,Ensure accounts without a valid login shell are locked,"
There are a number of accounts provided with most distributions that are used to
manage applications and are not intended to provide an interactive shell. Furthermore,
a user may add special accounts that are not intended to provide an interactive shell.
","
Run the following command to lock any non-root accounts without a valid login shell
returned by the audit:
# usermod -L <user>
Example script::
#!/usr/bin/env bash
{
l_valid_shells=""^($(awk -F\/ '$NF != ""nologin"" {print}' /etc/shells | sed
-rn '/^\//{s,/,\\\\/,g;p}' | paste -s -d '|' - ))$""
while IFS= read -r l_user; do
passwd -S ""$l_user"" | awk '$2 !~ /^L/ {system (""usermod -L "" $1)}'
done < <(awk -v pat=""$l_valid_shells"" -F: '($1 != ""root"" && $(NF) !~ pat)
{print $1}' /etc/passwd)
}
",True
5.4.3.1,Ensure nologin is not listed in /etc/shells,"
/etc/shells is a text file which contains the full pathnames of valid login shells. This
file is consulted by chsh and available to be queried by other programs.
Be aware that there are programs which consult this file to find out if a user is a normal
user; for example, FTP daemons traditionally disallow access to users with shells not
included in this file.
","
Edit /etc/shells and remove any lines that include nologin
",True
5.4.3.2,Ensure default user shell timeout is configured,"
TMOUT is an environmental setting that determines the timeout of a shell in seconds.
• TMOUT=n - Sets the shell timeout to n seconds. A setting of TMOUT=0 disables
timeout.
• readonly TMOUT- Sets the TMOUT environmental variable as readonly,
preventing unwanted modification during run-time.
• export TMOUT - exports the TMOUT variable
System Wide Shell Configuration Files:
• /etc/profile - used to set system wide environmental variables on users
shells. The variables are sometimes the same ones that are in the
.bash_profile, however this file is used to set an initial PATH or PS1 for all
shell users of the system. is only executed for interactive login shells, or
shells executed with the --login parameter.
• /etc/profile.d - /etc/profile will execute the scripts within
/etc/profile.d/*.sh. It is recommended to place your configuration in a shell
script within /etc/profile.d to set your own system wide environmental
variables.
• /etc/bashrc - System wide version of .bashrc. In Fedora derived distributions,
/etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell, but redirects
output to /dev/null if non-interactive. Is only executed for interactive shells
or if BASH_ENV is set to /etc/bashrc.
","
Review /etc/bashrc, /etc/profile, and all files ending in *.sh in the
/etc/profile.d/ directory and remove or edit all TMOUT=_n_ entries to follow local site
policy. TMOUT should not exceed 900 or be equal to 0.
Configure TMOUT in one of the following files:
• A file in the /etc/profile.d/ directory ending in .sh
• /etc/profile
• /etc/bashrc
TMOUT configuration examples:
• As multiple lines:
TMOUT=900
readonly TMOUT
export TMOUT
• As a single line:
readonly TMOUT=900 ; export TMOUT
Additional Information:
The audit and remediation in this recommendation apply to bash and shell. If other
shells are supported on the system, it is recommended that their configuration files also
are checked. Other methods of setting a timeout exist for other shells not covered here.
Ensure that the timeout conforms to your local policy.
",True
5.4.3.3,Ensure default user umask is configured,"
The user file-creation mode mask (umask) is used to determine the file permission for
newly created directories and files. In Linux, the default permissions for any newly
created directory is 0777 (rwxrwxrwx), and for any newly created file it is 0666 (rw-rw-
rw-). The umask modifies the default Linux permissions by restricting (masking) these
permissions. The umask is not simply subtracted, but is processed bitwise. Bits set in
the umask are cleared in the resulting file mode.
umask can be set with either Octal or Symbolic values:
• Octal (Numeric) Value - Represented by either three or four digits. ie umask
0027 or umask 027. If a four digit umask is used, the first digit is ignored. The
remaining three digits effect the resulting permissions for user, group, and
world/other respectively.
• Symbolic Value - Represented by a comma separated list for User u, group g,
and world/other o. The permissions listed are not masked by umask. ie a umask
set by umask u=rwx,g=rx,o= is the Symbolic equivalent of the Octal umask
027. This umask would set a newly created directory with file mode drwxr-x---
and a newly created file with file mode rw-r-----.
The default umask can be set to use the pam_umask module or in a System Wide
Shell Configuration File. The user creating the directories or files has the
discretion of changing the permissions via the chmod command, or choosing a different
default umask by adding the umask command into a User Shell Configuration
File, ( .bash_profile or .bashrc), in their home directory.
Page 720
Setting the default umask:
• pam_umask module:
o will set the umask according to the system default in /etc/login.defs
and user settings, solving the problem of different umask settings with
different shells, display managers, remote sessions etc.
o umask=<mask> value in the /etc/login.defs file is interpreted as Octal
o Setting USERGROUPS_ENAB to yes in /etc/login.defs (default):
▪ will enable setting of the umask group bits to be the same as owner
bits. (examples: 022 -> 002, 077 -> 007) for non-root users, if the
uid is the same as gid, and username is the same as the
<primary group name>
▪ userdel will remove the user's group if it contains no more
members, and useradd will create by default a group with the name
of the user
• System Wide Shell Configuration File:
o /etc/profile - used to set system wide environmental variables on
users shells. The variables are sometimes the same ones that are in the
.bash_profile, however this file is used to set an initial PATH or PS1 for
all shell users of the system. is only executed for interactive login
shells, or shells executed with the --login parameter.
o /etc/profile.d - /etc/profile will execute the scripts within
/etc/profile.d/*.sh. It is recommended to place your configuration in
a shell script within /etc/profile.d to set your own system wide
environmental variables.
o /etc/bashrc - System wide version of .bashrc. In Fedora derived
distributions, etc/bashrc also invokes /etc/profile.d/*.sh if non-login shell,
but redirects output to /dev/null if non-interactive. Is only executed for
interactive shells or if BASH_ENV is set to /etc/bashrc.
User Shell Configuration Files:
• ~/.bash_profile - Is executed to configure your shell before the initial
command prompt. Is only read by login shells.
• ~/.bashrc - Is executed for interactive shells. only read by a shell that's both
interactive and non-login
umask is set by order of precedence. If umask is set in multiple locations, this order of
precedence will determine the system's default umask.
Page 721
Order of precedence:
1. A file in /etc/profile.d/ ending in .sh - This will override any other system-
wide umask setting
2. In the file /etc/profile
3. On the pam_umask.so module in /etc/pam.d/postlogin
4. In the file /etc/login.defs
5. In the file /etc/default/login
","
Run the following script and perform the instructions in the output to set the default
umask to 027 or more restrictive:
#!/usr/bin/env bash
{
l_output="""" l_output2="""" l_out=""""
file_umask_chk()
{
if grep -Psiq -- '^\h*umask\h+(0?[0-7][2-
7]7|u(=[rwx]{0,3}),g=([rx]{0,2}),o=)(\h*#.*)?$' ""$l_file""; then
l_out=""$l_out\n - umask is set correctly in \""$l_file\""""
elif grep -Psiq -- '^\h*umask\h+(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-
7][0-6]\b)|([0-7][01][0-7]\b|[0-7][0-7][0-
6]\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\b)(,o=[rwx]{1,3})?)|((g=[wrx
]{1,3},)?o=[wrx]{1,3}\b)))' ""$l_file""; then
l_output2=""$l_output2\n - \""$l_file\""""
fi
}
while IFS= read -r -d $'\0' l_file; do
file_umask_chk
done < <(find /etc/profile.d/ -type f -name '*.sh' -print0)
[ -n ""$l_out"" ] && l_output=""$l_out""
l_file=""/etc/profile"" && file_umask_chk
l_file=""/etc/bashrc"" && file_umask_chk
l_file=""/etc/bash.bashrc"" && file_umask_chk
l_file=""/etc/pam.d/postlogin""
if grep -Psiq
'^\h*session\h+[^#\n\r]+\h+pam_umask\.so\h+([^#\n\r]+\h+)?umask=(([0-7][0-
7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b))' ""$l_file""; then
l_output2=""$l_output2\n - \""$l_file\""""
fi
l_file=""/etc/login.defs"" && file_umask_chk
l_file=""/etc/default/login"" && file_umask_chk
if [ -z ""$l_output2"" ]; then
echo -e "" - No files contain a UMASK that is not restrictive enough\n
No UMASK updates required to existing files""
else
echo -e ""\n - UMASK is not restrictive enough in the following
file(s):$l_output2\n\n- Remediation Procedure:\n - Update these files and
comment out the UMASK line\n or update umask to be \""0027\"" or more
restrictive""
fi
if [ -n ""$l_output"" ]; then
echo -e ""$l_output""
else
echo -e "" - Configure UMASK in a file in the \""/etc/profile.d/\""
directory ending in \"".sh\""\n\n Example Command (Hash to represent being
run at a root prompt):\n\n# printf '%s\\\n' \""umask 027\"" >
/etc/profile.d/50-systemwide_umask.sh\n""
fi
}
Page 724
Notes:
• This method only applies to bash and shell. If other shells are supported on the
system, it is recommended that their configuration files also are checked
• If the pam_umask.so module is going to be used to set umask, ensure that it's not
being overridden by another setting. Refer to the PAM_UMASK(8) man page for
more information
Default Value:
UMASK 022
",True
6.1.1.1,Ensure journald service is enabled and active,"
Ensure that the systemd-journald service is enabled to allow capturing of logging
events.
","
Run the following commands to unmask and start systemd-journald.service
# systemctl unmask systemd-journald.service
# systemctl start systemd-journald.service
",True
6.1.1.2,,"
Journald will create logfiles that do not already exist on the system. This setting controls
what permissions will be applied to these newly created files.
","
If the default configuration is not appropriate for the site specific requirements, copy
/usr/lib/tmpfiles.d/systemd.conf to /etc/tmpfiles.d/systemd.conf and
modify as required. Recommended mode for logfiles is 0640 or more restrictive.
",True
6.1.1.3,,"
ournald includes the capability of rotating log files regularly to avoid filling up the
system with logs or making the logs unmanageably large. The file
/etc/systemd/journald.conf is the configuration file used to specify how logs
generated by Journald should be rotated.
","
Edit /etc/systemd/journald.conf or a file ending in .conf the
/etc/systemd/journald.conf.d/ directory. Set the following parameters in the
[Journal] section to ensure logs are rotated according to site policy. The settings
should be carefully understood as there are specific edge cases and prioritization of
parameters.
Example Configuration:
[Journal]
SystemMaxUse=1G
SystemKeepFree=500M
RuntimeMaxUse=200M
RuntimeKeepFree=50M
MaxFileSec=1month
Example script to create systemd drop-in configuration file:
{
a_settings=(""SystemMaxUse=1G"" ""SystemKeepFree=500M"" ""RuntimeMaxUse=200M""
""RuntimeKeepFree=50M"" ""MaxFileSec=1month"")
[ ! -d /etc/systemd/journald.conf.d/ ] && mkdir
/etc/systemd/journald.conf.d/
if grep -Psq -- '^\h*\[Journal\]' /etc/systemd/journald.conf.d/60-
journald.conf; then
printf '%s\n' """" ""${a_settings[@]}"" >> /etc/systemd/journald.conf.d/60-
journald.conf
else
printf '%s\n' """" ""[Journal]"" ""${a_settings[@]}"" >>
/etc/systemd/journald.conf.d/60-journald.conf
fi
}
Note:
• If these settings appear in a canonically later file, or later in the same file, the
setting will be overwritten
• Logfile size and configuration to move logfiles to a remote log server should be
accounted for when configuring these settings
Run to following command to update the parameters in the service:
# systemctl reload-or-restart systemd-journald
",True
6.1.1.4,Ensure only one logging system is in use,"
Best practices recommend that a single centralized logging system be used for log
management, choose a single service either rsyslog - OR - journald to be used as a
single centralized logging system.
","
1. Determine whether to use journald - OR - rsyslog depending on site needs
2. Configure systemd-jounald.service
3. Configure only ONE either journald - OR - rsyslog and complete the
recommendations in that subsection
4. Return to this recommendation to ensure only one logging system is in use
",True
6.1.2.1.1,Ensure systemd-journal-remote is installed,"
ournald systemd-journal-remote supports the ability to send log events it gathers to
a remote log host or to receive messages from remote hosts, thus enabling centralized
log management.
","
Run the following command to install systemd-journal-remote:
# apt install systemd-journal-remote
",True
6.1.2.1.2,,"
Journald systemd-journal-upload supports the ability to send log events it gathers to
a remote log host.
","
Edit the /etc/systemd/journal-upload.conf file or a file in
/etc/systemd/journal-upload.conf.d ending in .conf and ensure the following
lines are set in the [Upload] section per your environment:
Example settings:
[Upload]
URL=192.168.50.42
ServerKeyFile=/etc/ssl/private/journal-upload.pem
ServerCertificateFile=/etc/ssl/certs/journal-upload.pem
TrustedCertificateFile=/etc/ssl/ca/trusted.pem
Example script to create systemd drop-in configuration file:
#!/usr/bin/env bash
{
a_settings=(""URL=192.168.50.42"" ""ServerKeyFile=/etc/ssl/private/journal-
upload.pem"" \
""ServerCertificateFile=/etc/ssl/certs/journal-upload.pem""
""TrustedCertificateFile=/etc/ssl/ca/trusted.pem"")
[ ! -d /etc/systemd/journal-upload.conf.d/ ] && mkdir
/etc/systemd/journal-upload.conf.d/
if grep -Psq -- '^\h*\[Upload\]' /etc/systemd/journal-upload.conf.d/60-
journald_upload.conf; then
printf '%s\n' """" ""${a_settings[@]}"" >> /etc/systemd/journal-
upload.conf.d/60-journald_upload.conf
else
printf '%s\n' """" ""[Journal]"" ""${a_settings[@]}"" >>
/etc/systemd/journal-upload.conf.d/60-journald_upload.conf
fi
}
Run the following command to update the parameters in the service:
# systemctl reload-or-restart systemd-journal-upload
",True
6.1.2.1.3,Ensure systemd-journal-upload is enabled and active,"
Journald systemd-journal-upload supports the ability to send log events it gathers to
a remote log host.
","
Run the following commands to unmask, enable and start systemd-journal-upload:
# systemctl unmask systemd-journal-upload.service
# systemctl --now enable systemd-journal-upload.service
",True
6.1.2.1.4,Ensure systemd-journal-remote service is not in use,"
Journald systemd-journal-remote supports the ability to receive messages from
remote hosts, thus acting as a log server. Clients should not receive data from other
hosts.
Note:
• The same package, systemd-journal-remote, is used for both sending logs to
remote hosts and receiving incoming logs.
• With regards to receiving logs, there are two services; systemd-journal-
remote.socket and systemd-journal-remote.service.
","
Run the following commands to stop and mask systemd-journal-remote.socket and
systemd-journal-remote.service:
# systemctl stop systemd-journal-remote.socket systemd-journal-remote.service
# systemctl mask systemd-journal-remote.socket systemd-journal-remote.service
",True
6.1.2.2,Ensure journald ForwardToSyslog is disabled,"
Data from journald should be kept in the confines of the service and not forwarded to
other services.
","
- IF - rsyslog is the preferred method for capturing logs, this section and
Recommendation should be skipped and the ""Configure rsyslog"" section followed.
- IF - journald is the preferred method for capturing logs:
Set the following parameter in the [Journal] section in
/etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending in
.conf:
ForwardToSyslog=no
Example script to create systemd drop-in configuration file:
#!/usr/bin/env bash
{
a_settings=(""ForwardToSyslog=no"")
[ ! -d /etc/systemd/journald.conf.d/ ] && mkdir
/etc/systemd/journald.conf.d/
if grep -Psq -- '^\h*\[Journal\]' /etc/systemd/journald.conf.d/60-
journald.conf; then
printf '%s\n' """" ""${a_settings[@]}"" >> /etc/systemd/journald.conf.d/60-
journald.conf
else
printf '%s\n' """" ""[Journal]"" ""${a_settings[@]}"" >>
/etc/systemd/journald.conf.d/60-journald.conf
fi
}
Note: If this setting appears in a canonically later file, or later in the same file, the
setting will be overwritten
Run to following command to update the parameters in the service:
# systemctl reload-or-restart systemd-journald
Default Value:
ForwardToSyslog=no
",True
6.1.2.3,Ensure journald Compress is configured,"
The journald system includes the capability of compressing overly large files to avoid
filling up the system with logs or making the logs unmanageably large.
","
- IF - rsyslog is the preferred method for capturing logs, this section and
Recommendation should be skipped and the ""Configure rsyslog"" section followed.
- IF - journald is the preferred method for capturing logs:
Set the following parameter in the [Journal] section in
/etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending
in .conf:
Compress=yes
Example script to create systemd drop-in configuration file:
#!/usr/bin/env bash
{
a_settings=(""Compress=yes"")
[ ! -d /etc/systemd/journald.conf.d/ ] && mkdir
/etc/systemd/journald.conf.d/
if grep -Psq -- '^\h*\[Journal\]' /etc/systemd/journald.conf.d/60-
journald.conf; then
printf '%s\n' """" ""${a_settings[@]}"" >> /etc/systemd/journald.conf.d/60-
journald.conf
else
printf '%s\n' """" ""[Journal]"" ""${a_settings[@]}"" >>
/etc/systemd/journald.conf.d/60-journald.conf
fi
}
Note: If this setting appears in a canonically later file, or later in the same file, the
setting will be overwritten
Run to following command to update the parameters in the service:
# systemctl reload-or-restart systemd-journald
Default Value:
Compress=yes
",True
6.1.2.4,Ensure journald Storage is configured,"
Data from journald may be stored in volatile memory or persisted locally on the server.
Logs in memory will be lost upon a system reboot. By persisting logs to local disk on the
server they are protected from loss due to a reboot.
","
- IF - rsyslog is the preferred method for capturing logs, this section and
Recommendation should be skipped and the ""Configure rsyslog"" section followed.
- IF - journald is the preferred method for capturing logs:
Set the following parameter in the [Journal] section in
/etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending in
.conf:
Storage=persistent
Example script to create systemd drop-in configuration file:
#!/usr/bin/env bash
{
a_settings=(""Storage=persistent"")
[ ! -d /etc/systemd/journald.conf.d/ ] && mkdir
/etc/systemd/journald.conf.d/
if grep -Psq -- '^\h*\[Journal\]' /etc/systemd/journald.conf.d/60-
journald.conf; then
printf '%s\n' """" ""${a_settings[@]}"" >> /etc/systemd/journald.conf.d/60-
journald.conf
else
printf '%s\n' """" ""[Journal]"" ""${a_settings[@]}"" >>
/etc/systemd/journald.conf.d/60-journald.conf
fi
}
Note: If this setting appears in a canonically later file, or later in the same file, the
setting will be overwritten
Run to following command to update the parameters in the service:
# systemctl reload-or-restart systemd-journald
Default Value:
Storage=persistent
",True
6.1.3.1,Ensure rsyslog is installed,"
The rsyslog software is recommended in environments where journald does not
meet operation requirements.
","
Run the following command to install rsyslog:
# apt install rsyslog
Default Value:
Installed
",True
6.1.3.2,Ensure rsyslog service is enabled and active,"
Once the rsyslog package is installed, ensure that the service is enabled.
","
- IF - rsyslog is being used for logging on the system:
Run the following commands to unmask, enable, and start rsyslog.service:
# systemctl unmask rsyslog.service
# systemctl enable rsyslog.service
# systemctl start rsyslog.service
",True
6.1.3.3,Ensure journald is configured to send logs to rsyslog,"
Data from systemd-journald may be stored in volatile memory or persisted locally on
the server. Utilities exist to accept remote export of systemd-journald logs, however,
use of the rsyslog service provides a consistent means of log collection and export.
","
- IF - Journald is the preferred method for capturing logs, this section and
Recommendation should be skipped and the ""Configure Journald"" section followed.
- IF - rsyslog is the preferred method for capturing logs:
Set the following parameter in the [Journal] section in
/etc/systemd/journald.conf or a file in /etc/systemd/journald.conf.d/ ending
in .conf:
ForwardToSyslog=yes
Example script to create systemd drop-in configuration file:
#!/usr/bin/env bash
{
a_settings=(""ForwardToSyslog=yes"")
[ ! -d /etc/systemd/journald.conf.d/ ] && mkdir
/etc/systemd/journald.conf.d/
if grep -Psq -- '^\h*\[Journal\]' /etc/systemd/journald.conf.d/60-
journald.conf; then
printf '%s\n' """" ""${a_settings[@]}"" >> /etc/systemd/journald.conf.d/60-
journald.conf
else
printf '%s\n' """" ""[Journal]"" ""${a_settings[@]}"" >>
/etc/systemd/journald.conf.d/60-journald.conf
fi
}
Note: If this setting appears in a canonically later file, or later in the same file, the
setting will be overwritten
Run to following command to update the parameters in the service:
Restart systemd-journald.service:
# systemctl reload-or-restart systemd-journald.service
",True
6.1.3.4,Ensure rsyslog log file creation mode is configured,"
rsyslog will create logfiles that do not already exist on the system.
The global() configuration object umask, available in rsyslog 8.26.0+, sets the
rsyslogd process’ umask. If not specified, the system-provided default is used. The
value given must always be a 4-digit octal number, with the initial digit being zero.
The legacy $umask parameter sets the rsyslogd process' umask. If not specified, the
system-provided default is used. The value given must always be a 4-digit octal
number, with the initial digit being zero.
The legacy $FileCreateMode parameter allows the setting of the mode with which
rsyslogd creates new files. If not specified, the value 0644 is used. The value given
must always be a 4-digit octal number, with the initial digit being zero. Please note that
the actual permission depend on rsyslogd process umask. If in doubt, use $umask
0000 right at the beginning of the configuration file to remove any restrictions.
The legacy $FileCreateMode may be specified multiple times. If so, it specifies the
creation mode for all selector lines that follow until the next $FileCreateMode
parameter. Order of lines is vitally important
","
Edit either /etc/rsyslog.conf or a dedicated .conf file in /etc/rsyslog.d/ and set
$FileCreateMode to 0640 or more restrictive:
$FileCreateMode 0640
Example script to create a drop-in configuration file in the default include location:
#!/usr/bin/env bash
{
[ ! -d ""/etc/rsyslog.d/"" ] && mkdir /etc/rsyslog.d/
printf '%s\n' """" ""\$FileCreateMode 0640"" >> /etc/rsyslog.d/60-rsyslog.conf
}
Reload the service:
# systemctl reload-or-restart rsyslog
",True
6.1.3.5,,"
The rsyslog and configuration files specifies rules for logging and which files are to be
used to log certain classes of messages.
","
Edit the following lines in the configuration file(s) returned by the audit as appropriate for
your environment.
Note: The below configuration is shown for example purposes only. Due care should be
given to how the organization wishes to store log data.
*.emerg :omusrmsg:*
auth,authpriv.* /var/log/secure
mail.* -/var/log/mail
mail.info -/var/log/mail.info
mail.warning -/var/log/mail.warn
mail.err /var/log/mail.err
cron.* /var/log/cron
*.=warning;*.=err -/var/log/warn
*.crit /var/log/warn
*.*;mail.none;news.none -/var/log/messages
local0,local1.* -/var/log/localmessages
local2,local3.* -/var/log/localmessages
local4,local5.* -/var/log/localmessages
local6,local7.* -/var/log/localmessages
Run the following command to reload the rsyslogd configuration:
Page 779
# systemctl reload-or-restart rsyslog
",True
6.1.3.6,,"
rsyslog supports the ability to send log events it gathers to a remote log host or to
receive messages from remote hosts, thus enabling centralized log management.
","
Edit the rsyslog configuration and add the following line (where
loghost.example.com is the name of your central log host). The target directive may
either be a fully qualified domain name or an IP address.
Example script to create a drop-in configuration file:
#!/usr/bin/env bash
{
a_parameters=('*.* action(type=""omfwd"" target=""loghost.example.com""
port=""514"" protocol=""tcp""' \
' action.resumeRetryCount=""100""' '
queue.type=""LinkedList"" queue.size=""1000"")')
[ ! -d ""/etc/rsyslog.d/"" ] && mkdir /etc/rsyslod.d/
printf '%s\n' """" ""${a_parameters[@]}"" >> /etc/rsyslog.d/60-rsyslog.conf
}
Run the following command to reload rsyslog.service:
Page 783
# systemctl reload-or-restart rsyslog.service
",True
6.1.3.7,Ensure rsyslog is not configured to receive logs from a remote client,"
rsyslog supports the ability to receive messages from remote hosts, thus acting as a
log server. Clients should not receive data from other hosts.
","
Unless the system's primary function is to serve as a logfile server , modify the files
returned by the Audit Procedure and remove the specific lines highlighted by the audit.
Verify none of the following entries are present in the rsyslog configuration.
advanced format
module(load=""imtcp"")
input(type=""imtcp"" port=""514"")
deprecated legacy format
$ModLoad imtcp
$InputTCPServerRun
Reload the service:
# systemctl reload-or-restart rsyslog
",True
6.1.3.8,,"
The system includes the capability of rotating log files regularly to avoid filling up the
system with logs or making the logs unmanageably large. The file
/etc/logrotate.d/rsyslog is the configuration file used to rotate log files created by
rsyslog.
","
Edit /etc/logrotate.conf, or the appropriate configuration file provided by the script
in the Audit Procedure, as necessary to ensure logs are rotated according to site policy.
",True
6.1.4.1,Ensure access to all logfiles has been configured,"
Log files contain information from many services on the the local system, or in the event
of a centralized log server, others systems logs as well.
In general log files are found in /var/log/, although application can be configured to
store logs elsewhere. Should your application store logs in another, ensure to run the
same test on that location.
","
Run the following script to update permissions and ownership on files in /var/log.
Although the script is not destructive, ensure that the output of the audit procedure is
captured in the event that the remediation causes issues.
Page 793
#!/usr/bin/env bash
{
a_output2=()
f_file_test_fix()
{
a_out2=()
maxperm=""$( printf '%o' $(( 0777 & ~$perm_mask)) )""
if [ $(( $l_mode & $perm_mask )) -gt 0 ]; then
a_out2+=("" o Mode: \""$l_mode\"" should be \""$maxperm\"" or more
restrictive"" "" x Removing excess permissions"")
chmod ""$l_rperms"" ""$l_fname""
fi
if [[ ! ""$l_user"" =~ $l_auser ]]; then
a_out2+=("" o Owned by: \""$l_user\"" and should be owned by
\""${l_auser//|/ or }\"""" "" x Changing ownership to: \""$l_fix_account\"""")
chown ""$l_fix_account"" ""$l_fname""
fi
if [[ ! ""$l_group"" =~ $l_agroup ]]; then
a_out2+=("" o Group owned by: \""$l_group\"" and should be group
owned by \""${l_agroup//|/ or }\"""" "" x Changing group ownership to:
\""$l_fix_account\"""")
chgrp ""$l_fix_account"" ""$l_fname""
fi
[ ""${#a_out2[@]}"" -gt 0 ] && a_output2+=("" - File: \""$l_fname\"" is:""
""${a_out2[@]}"")
}
l_fix_account='root'
while IFS= read -r -d $'\0' l_file; do
while IFS=: read -r l_fname l_mode l_user l_group; do
if grep -Pq -- '\/(apt)\h*$' <<< ""$(dirname ""$l_fname"")""; then
perm_mask='0133' l_rperms=""u-x,go-wx"" l_auser=""root""
l_agroup=""(root|adm)""; f_file_test_fix
else
case ""$(basename ""$l_fname"")"" in
lastlog | lastlog.* | wtmp | wtmp.* | wtmp-* | btmp | btmp.* |
btmp-* | README)
perm_mask='0113' l_rperms=""ug-x,o-wx"" l_auser=""root""
l_agroup=""(root|utmp)""
f_file_test_fix ;;
cloud-init.log* | localmessages* | waagent.log*)
perm_mask='0133' l_rperms=""u-x,go-wx""
l_auser=""(root|syslog)"" l_agroup=""(root|adm)""
file_test_fix ;;
secure | auth.log | syslog | messages)
perm_mask='0137' l_rperms=""u-x,g-wx,o-rwx""
l_auser=""(root|syslog)"" l_agroup=""(root|adm)""
f_file_test_fix ;;
SSSD | sssd)
perm_mask='0117' l_rperms=""ug-x,o-rwx""
l_auser=""(root|SSSD)"" l_agroup=""(root|SSSD)""
f_file_test_fix ;;
gdm | gdm3)
perm_mask='0117' l_rperms=""ug-x,o-rwx"" l_auser=""root""
l_agroup=""(root|gdm|gdm3)""
f_file_test_fix ;;
*.journal | *.journal~)
Page 794
perm_mask='0137' l_rperms=""u-x,g-wx,o-rwx"" l_auser=""root""
l_agroup=""(root|systemd-journal)""
f_file_test_fix ;;
*)
perm_mask='0137' l_rperms=""u-x,g-wx,o-rwx""
l_auser=""(root|syslog)"" l_agroup=""(root|adm)""
if [ ""$l_user"" = ""root"" ] || ! grep -Pq -- ""^\h*$(awk -F:
'$1==""'""$l_user""'"" {print $7}' /etc/passwd)\b"" /etc/shells; then
! grep -Pq -- ""$l_auser"" <<< ""$l_user"" &&
l_auser=""(root|syslog|$l_user)""
! grep -Pq -- ""$l_agroup"" <<< ""$l_group"" &&
l_agroup=""(root|adm|$l_group)""
fi
f_file_test_fix ;;
esac
fi
done < <(stat -Lc '%n:%#a:%U:%G' ""$l_file"")
done < <(find -L /var/log -type f \( -perm /0137 -o ! -user root -o ! -
group root \) -print0)
if [ ""${#a_output2[@]}"" -le 0 ]; then # If all files passed, then we
report no changes
a_output+=("" - All files in \""/var/log/\"" have appropriate permissions
and ownership"")
printf '\n%s' ""- All files in \""/var/log/\"" have appropriate
permissions and ownership"" "" o No changes required"" """"
else
printf '\n%s' ""${a_output2[@]}"" """"
fi
}
Note: You may also need to change the configuration for your logging software or
services for any logs that had incorrect permissions.
If there are services that log to other locations, ensure that those log files have the
appropriate permissions.
",True
6.2.1.1,Ensure auditd packages are installed,"
auditd is the userspace component to the Linux Auditing System. It's responsible for
writing audit records to the disk
","
Run the following command to Install auditd and audispd-plugins
# apt install auditd audispd-plugins
",True
6.2.1.2,Ensure auditd service is enabled and active,"
Turn on the auditd daemon to record system events.
","
Run the following commands to unmask, enable and start auditd:
# systemctl unmask auditd
# systemctl enable auditd
# systemctl start auditd
",True
6.2.1.3,Ensure auditing for processes that start prior to auditd is enabled,"
Configure grub2 so that processes that are capable of being audited can be audited
even if they start up prior to auditd startup.
","
Edit /etc/default/grub and add audit=1 to GRUB_CMDLINE_LINUX:
Example:
GRUB_CMDLINE_LINUX=""audit=1""
Run the following command to update the grub2 configuration:
# update-grub
",True
6.2.1.4,Ensure audit_backlog_limit is sufficient,"
In the kernel-level audit subsystem, a socket buffer queue is used to hold audit events.
Whenever a new audit event is received, it is logged and prepared to be added to this
queue.
The kernel boot parameter audit_backlog_limit=N, with N representing the amount of
messages, will ensure that a queue cannot grow beyond a certain size. If an audit event
is logged which would grow the queue beyond this limit, then a failure occurs and is
handled according to the system configuration
","
Edit /etc/default/grub and add audit_backlog_limit=N to
GRUB_CMDLINE_LINUX. The recommended size for N is 8192 or larger.
Example:
GRUB_CMDLINE_LINUX=""audit_backlog_limit=8192""
Run the following command to update the grub2 configuration:
# update-grub
Default Value:
if audit_backlog_limit is not set, the system defaults to audit_backlog_limit=64
",True
6.2.2.1,Ensure audit log storage size is configured,"
Configure the maximum size of the audit log file. Once the log reaches the maximum
size, it will be rotated and a new log file will be started.
","
Set the following parameter in /etc/audit/auditd.conf in accordance with site
policy:
max_log_file = <MB>
Default Value:
max_log_file = 8
",True
6.2.2.2,Ensure audit logs are not automatically deleted,"
The max_log_file_action setting determines how to handle the audit log file reaching
the max file size. A value of keep_logs will rotate the logs but never delete old logs.
","
Set the following parameter in /etc/audit/auditd.conf:
max_log_file_action = keep_logs
",True
6.2.2.3,Ensure system is disabled when audit logs are full,"
The auditd daemon can be configured to halt the system or put the system in single
user mode, if no free space is available or an error is detected on the partition that holds
the audit log files.
The disk_full_action parameter tells the system what action to take when no free
space is available on the partition that holds the audit log files. Valid values are ignore,
syslog, rotate, exec, suspend, single, and halt.
• ignore, the audit daemon will issue a syslog message but no other action is
taken
• syslog, the audit daemon will issue a warning to syslog
• rotate, the audit daemon will rotate logs, losing the oldest to free up space
• exec, /path-to-script will execute the script. You cannot pass parameters to the
script. The script is also responsible for telling the auditd daemon to resume
logging once its completed its action
• suspend, the audit daemon will stop writing records to the disk
• single, the audit daemon will put the computer system in single user mode
• halt, the audit daemon will shut down the system
The disk_error_action parameter tells the system what action to take when an error
is detected on the partition that holds the audit log files. Valid values are ignore,
syslog, exec, suspend, single, and halt.
• ignore, the audit daemon will not take any action
• syslog, the audit daemon will issue no more than 5 consecutive warnings to
syslog
• exec, /path-to-script will execute the script. You cannot pass parameters to the
script
• suspend, the audit daemon will stop writing records to the disk
• single, the audit daemon will put the computer system in single user mode
• halt, the audit daemon will shut down the system
","
Set one of the following parameters in /etc/audit/auditd.conf depending on your
local security policies.
disk_full_action = <halt|single>
disk_error_action = <syslog|single|halt>
Example:
disk_full_action = halt
disk_error_action = halt
",True
6.2.2.4,Ensure system warns when audit logs are low on space,"
The auditd daemon can be configured to halt the system, put the system in single user
mode or send a warning message, if the partition that holds the audit log files is low on
space.
The space_left_action parameter tells the system what action to take when the
system has detected that it is starting to get low on disk space. Valid values are ignore,
syslog, rotate, email, exec, suspend, single, and halt.
• ignore, the audit daemon does nothing
• syslog, the audit daemon will issue a warning to syslog
• rotate, the audit daemon will rotate logs, losing the oldest to free up space
• email, the audit daemon will send a warning to the email account specified in
action_mail_acct as well as sending the message to syslog
• exec, /path-to-script will execute the script. You cannot pass parameters to the
script. The script is also responsible for telling the auditd daemon to resume
logging once its completed its action
• suspend, the audit daemon will stop writing records to the disk
• single, the audit daemon will put the computer system in single user mode
• halt, the audit daemon will shut down the system
The admin_space_left_action parameter tells the system what action to take when
the system has detected that it is low on disk space. Valid values are ignore, syslog,
rotate, email, exec, suspend, single, and halt.
• ignore, the audit daemon does nothing
• syslog, the audit daemon will issue a warning to syslog
• rotate, the audit daemon will rotate logs, losing the oldest to free up space
• email, the audit daemon will send a warning to the email account specified in
action_mail_acct as well as sending the message to syslog
• exec, /path-to-script will execute the script. You cannot pass parameters to the
script. The script is also responsible for telling the auditd daemon to resume
logging once its completed its action
• suspend, the audit daemon will stop writing records to the disk
• single, the audit daemon will put the computer system in single user mode
• halt, the audit daemon will shut down the system
","
The auditd daemon can be configured to halt the system, put the system in single user
mode or send a warning message, if the partition that holds the audit log files is low on
space.
The space_left_action parameter tells the system what action to take when the
system has detected that it is starting to get low on disk space. Valid values are ignore,
syslog, rotate, email, exec, suspend, single, and halt.
• ignore, the audit daemon does nothing
• syslog, the audit daemon will issue a warning to syslog
• rotate, the audit daemon will rotate logs, losing the oldest to free up space
• email, the audit daemon will send a warning to the email account specified in
action_mail_acct as well as sending the message to syslog
• exec, /path-to-script will execute the script. You cannot pass parameters to the
script. The script is also responsible for telling the auditd daemon to resume
logging once its completed its action
• suspend, the audit daemon will stop writing records to the disk
• single, the audit daemon will put the computer system in single user mode
• halt, the audit daemon will shut down the system
The admin_space_left_action parameter tells the system what action to take when
the system has detected that it is low on disk space. Valid values are ignore, syslog,
rotate, email, exec, suspend, single, and halt.
• ignore, the audit daemon does nothing
• syslog, the audit daemon will issue a warning to syslog
• rotate, the audit daemon will rotate logs, losing the oldest to free up space
• email, the audit daemon will send a warning to the email account specified in
action_mail_acct as well as sending the message to syslog
• exec, /path-to-script will execute the script. You cannot pass parameters to the
script. The script is also responsible for telling the auditd daemon to resume
logging once its completed its action
• suspend, the audit daemon will stop writing records to the disk
• single, the audit daemon will put the computer system in single user mode
• halt, the audit daemon will shut down the system
",True
6.2.3.1,Ensure changes to system administration scope is collected,"
Monitor scope changes for system administrators. If the system has been properly
configured to force system administrators to log in as themselves first and then use the
sudo command to execute privileged commands, it is possible to monitor changes in
scope. The file /etc/sudoers, or files in /etc/sudoers.d, will be written to when the
file(s) or related attributes have changed. The audit records will be tagged with the
identifier ""scope"".
","
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor scope changes for system administrators.
Example:
# printf ""
-w /etc/sudoers -p wa -k scope
-w /etc/sudoers.d -p wa -k scope
"" >> /etc/audit/rules.d/50-scope.rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.2,Ensure actions as another user are always logged,"
sudo provides users with temporary elevated privileges to perform operations, either as
the superuser or another user.
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor elevated privileges.
Example:
# printf ""
-a always,exit -F arch=b64 -C euid!=uid -F auid!=unset -S execve -k
user_emulation
-a always,exit -F arch=b32 -C euid!=uid -F auid!=unset -S execve -k
user_emulation
"" >> /etc/audit/rules.d/50-user_emulation.rules
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.3,Ensure events that modify the sudo log file are collected,"
Monitor the sudo log file. If the system has been properly configured to disable the use
of the su command and force all administrators to have to log in first and then use sudo
to execute privileged commands, then all administrator commands will be logged to
/var/log/sudo.log . Any time a command is executed, an audit event will be
triggered as the /var/log/sudo.log file will be opened for write and the executed
administration command will be written to the log.
","
Note: This recommendation requires that the sudo logfile is configured. See guidance
provided in the recommendation ""Ensure sudo log file exists""
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor events that modify the sudo log file.
Example:
# {
SUDO_LOG_FILE=$(grep -r logfile /etc/sudoers* | sed -e 's/.*logfile=//;s/,?
.*//' -e 's/""//g')
[ -n ""${SUDO_LOG_FILE}"" ] && printf ""
-w ${SUDO_LOG_FILE} -p wa -k sudo_log_file
"" >> /etc/audit/rules.d/50-sudo.rules || printf ""ERROR: Variable
'SUDO_LOG_FILE' is unset.\n""
}
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.4,Ensure events that modify date and time information are collected,"
Capture events where the system date and/or time has been modified. The parameters
in this section are set to determine if the;
• adjtimex - tune kernel clock
• settimeofday - set time using timeval and timezone structures
• stime - using seconds since 1/1/1970
• clock_settime - allows for the setting of several internal clocks and timers
system calls have been executed. Further, ensure to write an audit record to the
configured audit log file upon exit, tagging the records with a unique identifier such as
""time-change"".
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor events that modify date and time information.
Example:
# printf ""
-a always,exit -F arch=b64 -S adjtimex,settimeofday -k time-change
-a always,exit -F arch=b32 -S adjtimex,settimeofday -k time-change
-a always,exit -F arch=b64 -S clock_settime -F a0=0x0 -k time-change
-a always,exit -F arch=b32 -S clock_settime -F a0=0x0 -k time-change
-w /etc/localtime -p wa -k time-change
"" >> /etc/audit/rules.d/50-time-change.rules
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.5,Ensure events that modify the system's network environment are collected,"
Record changes to network environment files or system calls. The below parameters
monitors the following system calls, and write an audit event on system call exit:
• sethostname - set the systems host name
• setdomainname - set the systems domain name
The files being monitored are:
• /etc/issue and /etc/issue.net - messages displayed pre-login
• /etc/hosts - file containing host names and associated IP addresses
• /etc/networks - symbolic names for networks
• /etc/network/ - directory containing network interface scripts and
configurations files
• /etc/netplan/ - central location for YAML networking configurations files
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor events that modify the system's network environment.
Example:
# printf ""
-a always,exit -F arch=b64 -S sethostname,setdomainname -k system-locale
-a always,exit -F arch=b32 -S sethostname,setdomainname -k system-locale
-w /etc/issue -p wa -k system-locale
-w /etc/issue.net -p wa -k system-locale
-w /etc/hosts -p wa -k system-locale
-w /etc/networks -p wa -k system-locale
-w /etc/network/ -p wa -k system-locale
-w /etc/netplan/ -p wa -k system-locale
"" >> /etc/audit/rules.d/50-system_locale.rules
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.6,Ensure use of privileged commands are collected,"
Monitor privileged programs, those that have the setuid and/or setgid bit set on
execution, to determine if unprivileged users are running these commands.
","
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor the use of privileged commands.
Example script:
#!/usr/bin/env bash
{
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
AUDIT_RULE_FILE=""/etc/audit/rules.d/50-privileged.rules""
NEW_DATA=()
for PARTITION in $(findmnt -n -l -k -it $(awk '/nodev/ { print $2 }'
/proc/filesystems | paste -sd,) | grep -Pv ""noexec|nosuid"" | awk '{print
$1}'); do
readarray -t DATA < <(find ""${PARTITION}"" -xdev -perm /6000 -type f | awk
-v UID_MIN=${UID_MIN} '{print ""-a always,exit -F path="" $1 "" -F perm=x -F
auid>=""UID_MIN"" -F auid!=unset -k privileged"" }')
for ENTRY in ""${DATA[@]}""; do
NEW_DATA+=(""${ENTRY}"")
done
done
readarray &> /dev/null -t OLD_DATA < ""${AUDIT_RULE_FILE}""
COMBINED_DATA=( ""${OLD_DATA[@]}"" ""${NEW_DATA[@]}"" )
printf '%s\n' ""${COMBINED_DATA[@]}"" | sort -u > ""${AUDIT_RULE_FILE}""
}
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
Special mount points
If there are any special mount points that are not visible by default from just scanning /,
change the PARTITION variable to the appropriate partition and re-run the remediation.
",True
6.2.3.7,Ensure unsuccessful file access attempts are collected,"
Monitor for unsuccessful attempts to access files. The following parameters are
associated with system calls that control files:
• creation - creat
• opening - open , openat
• truncation - truncate , ftruncate
An audit log record will only be written if all of the following criteria is met for the user
when trying to access a file:
• a non-privileged user (auid>=UID_MIN)
• is not a Daemon event (auid=4294967295/unset/-1)
• if the system call returned EACCES (permission denied) or EPERM (some other
permanent error associated with the specific system call)
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor unsuccessful file access attempts.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-
EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b64 -S creat,open,openat,truncate,ftruncate -F exit=-
EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-
EACCES -F auid>=${UID_MIN} -F auid!=unset -k access
-a always,exit -F arch=b32 -S creat,open,openat,truncate,ftruncate -F exit=-
EPERM -F auid>=${UID_MIN} -F auid!=unset -k access
"" >> /etc/audit/rules.d/50-access.rules || printf ""ERROR: Variable 'UID_MIN'
is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.8,Ensure events that modify user/group information are collected,"
Record events affecting the modification of user or group information, including that of
passwords and old passwords if in use.
• /etc/group - system groups
• /etc/passwd - system users
• /etc/gshadow - encrypted password for each group
• /etc/shadow - system user passwords
• /etc/security/opasswd - storage of old passwords if the relevant PAM module
is in use
• /etc/nsswitch.conf - file configures how the system uses various databases
and name resolution mechanisms
• /etc/pam.conf - file determines the authentication services to be used, and the
order in which the services are used.
• /etc/pam.d - directory contains the PAM configuration files for each PAM-aware
application.
The parameters in this section will watch the files to see if they have been opened for
write or have had attribute changes (e.g. permissions) and tag them with the identifier
""identity"" in the audit log file.
","
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor events that modify user/group information.
Example:
# printf ""
-w /etc/group -p wa -k identity
-w /etc/passwd -p wa -k identity
-w /etc/gshadow -p wa -k identity
-w /etc/shadow -p wa -k identity
-w /etc/security/opasswd -p wa -k identity
-w /etc/nsswitch.conf -p wa -k identity
-w /etc/pam.conf -p wa -k identity
-w /etc/pam.d -p wa -k identity
"" >> /etc/audit/rules.d/50-identity.rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.9,Ensure discretionary access control permission modification events are collected,"
Monitor changes to file permissions, attributes, ownership and group. The parameters in
this section track changes for system calls that affect file permissions and attributes.
The following commands and system calls effect the permissions, ownership and
various attributes of files.
• chmod
• fchmod
• fchmodat
• chown
• fchown
• fchownat
• lchown
• setxattr
• lsetxattr
• fsetxattr
• removexattr
• lremovexattr
• fremovexattr
In all cases, an audit record will only be written for non-system user ids and will ignore
Daemon events. All audit records will be tagged with the identifier ""perm_mod.""
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor discretionary access control permission modification
events.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F
auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F
auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S chmod,fchmod,fchmodat -F auid>=${UID_MIN} -F
auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S lchown,fchown,chown,fchownat -F
auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b64 -S
setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F
auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
-a always,exit -F arch=b32 -S
setxattr,lsetxattr,fsetxattr,removexattr,lremovexattr,fremovexattr -F
auid>=${UID_MIN} -F auid!=unset -F key=perm_mod
"" >> /etc/audit/rules.d/50-perm_mod.rules || printf ""ERROR: Variable
'UID_MIN' is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.10,Ensure successful file system mounts are collected,"
Monitor the use of the mount system call. The mount (and umount ) system call controls
the mounting and unmounting of file systems. The parameters below configure the
system to create an audit record when the mount system call is used by a non-
privileged user
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor successful file system mounts.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F arch=b32 -S mount -F auid>=$UID_MIN -F auid!=unset -k
mounts
-a always,exit -F arch=b64 -S mount -F auid>=$UID_MIN -F auid!=unset -k
mounts
"" >> /etc/audit/rules.d/50-mounts.rules || printf ""ERROR: Variable 'UID_MIN'
is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.11,Ensure session initiation information is collected,"
Monitor session initiation events. The parameters in this section track changes to the
files associated with session events.
• /var/run/utmp - tracks all currently logged in users.
• /var/log/wtmp - file tracks logins, logouts, shutdown, and reboot events.
• /var/log/btmp - keeps track of failed login attempts and can be read by
entering the command /usr/bin/last -f /var/log/btmp.
All audit records will be tagged with the identifier ""session.""
","
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor session initiation information.
Example:
# printf ""
-w /var/run/utmp -p wa -k session
-w /var/log/wtmp -p wa -k session
-w /var/log/btmp -p wa -k session
"" >> /etc/audit/rules.d/50-session.rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.12,Ensure login and logout events are collected,"
Monitor login and logout events. The parameters below track changes to files
associated with login/logout events.
• /var/log/lastlog - maintain records of the last time a user successfully logged
in.
• /var/run/faillock - directory maintains records of login failures via the
pam_faillock module.
","
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor login and logout events.
Example:
# printf ""
-w /var/log/lastlog -p wa -k logins
-w /var/run/faillock -p wa -k logins
"" >> /etc/audit/rules.d/50-login.rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.13,Ensure file deletion events by users are collected,"
Monitor the use of system calls associated with the deletion or renaming of files and file
attributes. This configuration statement sets up monitoring for:
• unlink - remove a file
• unlinkat - remove a file attribute
• rename - rename a file
• renameat rename a file attribute system calls and tags them with the identifier
""delete"".
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor file deletion events by users.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F arch=b64 -S rename,unlink,unlinkat,renameat -F
auid>=${UID_MIN} -F auid!=unset -F key=delete
-a always,exit -F arch=b32 -S rename,unlink,unlinkat,renameat -F
auid>=${UID_MIN} -F auid!=unset -F key=delete
"" >> /etc/audit/rules.d/50-delete.rules || printf ""ERROR: Variable 'UID_MIN'
is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.14,Ensure events that modify the system's Mandatory Access Controls are collected,"
Monitor AppArmor, an implementation of mandatory access controls. The parameters
below monitor any write access (potential additional, deletion or modification of files in
the directory) or attribute changes to the /etc/apparmor/ and /etc/apparmor.d/
directories.
Note: If a different Mandatory Access Control method is used, changes to the
corresponding directories should be audited.
","
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor events that modify the system's Mandatory Access
Controls.
Example:
# printf ""
-w /etc/apparmor/ -p wa -k MAC-policy
-w /etc/apparmor.d/ -p wa -k MAC-policy
"" >> /etc/audit/rules.d/50-MAC-policy.rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.15,Ensure successful and unsuccessful attempts to use the chcon command are collected,"
The operating system must generate audit records for successful/unsuccessful uses of
the chcon command.
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor successful and unsuccessful attempts to use the
chcon command.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=${UID_MIN} -F
auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable
'UID_MIN' is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.16,Ensure successful and unsuccessful attempts to use the setfacl command are collected,"
The operating system must generate audit records for successful/unsuccessful uses of
the setfacl command
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor successful and unsuccessful attempts to use the
setfacl command.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F path=/usr/bin/setfacl -F perm=x -F auid>=${UID_MIN} -F
auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable
'UID_MIN' is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.17,Ensure successful and unsuccessful attempts to use the chacl command are collected,"
The operating system must generate audit records for successful/unsuccessful uses of
the chacl command.
chacl is an IRIX-compatibility command, and is maintained for those users who are
familiar with its use from either XFS or IRIX.
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor successful and unsuccessful attempts to use the
chacl command.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F path=/usr/bin/chacl -F perm=x -F auid>=${UID_MIN} -F
auid!=unset -k perm_chng
"" >> /etc/audit/rules.d/50-perm_chng.rules || printf ""ERROR: Variable
'UID_MIN' is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.18,Ensure successful and unsuccessful attempts to use the usermod command are collected,"
The operating system must generate audit records for successful/unsuccessful uses of
the usermod command.
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor successful and unsuccessful attempts to use the
usermod command.
Example:
# {
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F path=/usr/sbin/usermod -F perm=x -F auid>=${UID_MIN} -F
auid!=unset -k usermod
"" >> /etc/audit/rules.d/50-usermod.rules || printf ""ERROR: Variable 'UID_MIN'
is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.19,6.2.3.19,"
Monitor the loading and unloading of kernel modules. All the loading / listing /
dependency checking of modules is done by kmod via symbolic links.
The following system calls control loading and unloading of modules:
• init_module - load a module
• finit_module - load a module (used when the overhead of using
cryptographically signed modules to determine the authenticity of a module can
be avoided)
• delete_module - delete a module
• create_module - create a loadable module entry
• query_module - query the kernel for various bits pertaining to modules
Any execution of the loading and unloading module programs and system calls will
trigger an audit record with an identifier of modules.
","
Create audit rules
Edit or create a file in the /etc/audit/rules.d/ directory, ending in .rules extension,
with the relevant rules to monitor kernel module modification.
Example:
#!/usr/bin/env bash
{
UID_MIN=$(awk '/^\s*UID_MIN/{print $2}' /etc/login.defs)
[ -n ""${UID_MIN}"" ] && printf ""
-a always,exit -F arch=b64 -S
init_module,finit_module,delete_module,create_module,query_module -F
auid>=${UID_MIN} -F auid!=unset -k kernel_modules
-a always,exit -F path=/usr/bin/kmod -F perm=x -F auid>=${UID_MIN} -F
auid!=unset -k kernel_modules
"" >> /etc/audit/rules.d/50-kernel_modules.rules || printf ""ERROR: Variable
'UID_MIN' is unset.\n""
}
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.20,6.2.3.20,"
Set system audit so that audit rules cannot be modified with auditctl . Setting the flag
""-e 2"" forces audit to be put in immutable mode. Audit changes can only be made on
system reboot.
Note: This setting will require the system to be rebooted to update the active auditd
configuration settings.
","
Edit or create the file /etc/audit/rules.d/99-finalize.rules and add the line -e
2 at the end of the file:
Example:
# printf '\n%s' ""-e 2"" >> /etc/audit/rules.d/99-finalize.rules
Load audit rules
Merge and load the rules into active configuration:
# augenrules --load
Check if reboot is required.
# if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then printf ""Reboot
required to load rules\n""; fi
",True
6.2.3.21,,"
The Audit system have both on disk and running configuration. It is possible for these
configuration settings to differ.
Note: Due to the limitations of augenrules and auditctl, it is not absolutely
guaranteed that loading the rule sets via augenrules --load will result in all rules
being loaded or even that the user will be informed if there was a problem loading the
rules.
","
If the rules are not aligned across all three () areas, run the following command to
merge and load all rules:
# augenrules --load
Check if reboot is required.
if [[ $(auditctl -s | grep ""enabled"") =~ ""2"" ]]; then echo ""Reboot required
to load rules""; fi
",True
6.2.4.1,Ensure audit log files mode is configured,"
Audit log files contain information about the system and system activity.
","
Run the following command to remove more permissive mode than 0640 from audit log
files:
# [ -f /etc/audit/auditd.conf ] && find ""$(dirname $(awk -F ""=""
'/^\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f -perm
/0137 -exec chmod u-x,g-wx,o-rwx {} +
",True
6.2.4.2,Ensure audit log files owner is configured,"
Audit log files contain information about the system and system activity.
","
Run the following command to configure the audit log files to be owned by the root
user:
# [ -f /etc/audit/auditd.conf ] && find ""$(dirname $(awk -F ""=""
'/^\s*log_file/ {print $2}' /etc/audit/auditd.conf | xargs))"" -type f ! -user
root -exec chown root {} +
",True
6.2.4.3,Ensure audit log files group owner is configured,"
Audit log files contain information about the system and system activity.
","
Run the following command to configure the audit log files to be group owned by adm:
# find $(dirname $(awk -F""="" '/^\s*log_file/ {print $2}'
/etc/audit/auditd.conf | xargs)) -type f \( ! -group adm -a ! -group root \)
-exec chgrp adm {} +
Run the following command to set the log_group parameter in the audit configuration
file to log_group = adm:
# sed -ri 's/^\s*#?\s*log_group\s*=\s*\S+(\s*#.*)?.*$/log_group = adm\1/'
/etc/audit/auditd.conf
Run the following command to restart the audit daemon to reload the configuration file:
# systemctl restart auditd
",True
6.2.4.4,Ensure the audit log file directory mode is configured,"
The audit log directory contains audit log files.
","
Run the following command to configure the audit log directory to have a mode of
""0750"" or less permissive:
# chmod g-w,o-rwx ""$(dirname ""$(awk -F= '/^\s*log_file\s*/{print $2}'
/etc/audit/auditd.conf | xargs)"")""
Default Value:
750
",True
6.2.4.5,Ensure audit configuration files mode is configured,"
Audit configuration files control auditd and what events are audited.
","
Run the following command to remove more permissive mode than 0640 from the audit
configuration files:
# find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) -exec
chmod u-x,g-wx,o-rwx {} +
",True
6.2.4.6,Ensure audit configuration files owner is configured,"
Audit configuration files control auditd and what events are audited.
","
Run the following command to change ownership to root user:
# find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -user
root -exec chown root {} +
",True
6.2.4.7,Ensure audit configuration files group owner is configured,"
Audit configuration files control auditd and what events are audited.
","
Run the following command to change group to root:
# find /etc/audit/ -type f \( -name '*.conf' -o -name '*.rules' \) ! -group
root -exec chgrp root {} +
",True
6.2.4.8,Ensure audit tools mode is configured,"
Audit tools include, but are not limited to, vendor-provided and open source audit tools
needed to successfully view and manipulate audit information system activity and
records. Audit tools include custom queries and report generators.
","
Run the following command to remove more permissive mode from the audit tools:
# chmod go-w /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace
/sbin/auditd /sbin/augenrules
",True
6.2.4.9,Ensure audit tools owner is configured,"
Audit tools include, but are not limited to, vendor-provided and open source audit tools
needed to successfully view and manipulate audit information system activity and
records. Audit tools include custom queries and report generators.
","
Run the following command to change the owner of the audit tools to the root user:
# chown root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace
/sbin/auditd /sbin/augenrules
",True
6.2.4.10,Ensure audit tools group owner is configured,"
Audit tools include, but are not limited to, vendor-provided and open source audit tools
needed to successfully view and manipulate audit information system activity and
records. Audit tools include custom queries and report generators.
","
Run the following command to change group ownership to the groop root:
# chgrp root /sbin/auditctl /sbin/aureport /sbin/ausearch /sbin/autrace
/sbin/auditd /sbin/augenrules
",True
6.3.1,Ensure AIDE is installed,"
AIDE takes a snapshot of filesystem state including modification times, permissions,
and file hashes which can then be used to compare against the current state of the
filesystem to detect modifications to the system.
","
Install AIDE using the appropriate package manager or manual installation:
# apt install aide aide-common
Configure AIDE as appropriate for your environment. Consult the AIDE documentation
for options.
Run the following commands to initialize AIDE:
# aideinit
# mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db
",True
6.3.2,Ensure filesystem integrity is regularly checked,"
Periodic checking of the filesystem integrity is needed to detect changes to the
filesystem.
","
Run the following command to unmask dailyaidecheck.timer and
dailyaidecheck.service:
# systemctl unmask dailyaidecheck.timer dailyaidecheck.service
Run the following command to enable and start dailyaidecheck.timer:
# systemctl --now enable dailyaidecheck.timer
",True
6.3.3,Ensure cryptographic mechanisms are used to protect the integrity of audit tools,"
Audit tools include, but are not limited to, vendor-provided and open source audit tools
needed to successfully view and manipulate audit information system activity and
records. Audit tools include custom queries and report generators.
aide.conf is case-sensitive. Leading and trailing white spaces are ignored. Each
config lines must end with new line.
AIDE uses the backslash character \ as escape character for ' ' (space), '@' and ''
(backslash) (e.g. '\ ' or '@'). To literally match a '' in a file path with a regular expression
you have to escape the backslash twice (i.e. '\\').
There are three types of lines in aide.conf:
• The configuration options which are used to set configuration parameters and
define groups.
• (restricted) rules that are used to indicate which files are added to the database.
• Macro lines define or undefine variables within the config file.
Note: Lines beginning with # are ignored as comments.
@@include <FILE> - Include <FILE>.
• The content of the file is used as if it were inserted in this part of the config file.
• The maximum depth of nested includes is 16.
`@@include <DIRECTORY> <REGEX> - [RULE_PREFIX] (added in AIDE v0.17)
• Include all (regular) files found in <DIRECTORY> matching regular expression
<REGEX> (sub-directories are ignored).
• The file are included in lexical sort order.
• If RULE_PREFIX is set, all rules included by the statement are prefixed with given
<RULE_PREFIX> (added in AIDE v0.18). Prefixes from nested include
statements are concatenated.
• The content of the files is used as if it were inserted in this part of the config file.
@x_include:
• is identical to @@include, except that if a config file is executable is is run and
the output is used as config.
• If the executable file exits with status greater than zero or writes to stderr aide
stops with an error.
• For security reasons <DIRECTORY> and each executable config file must be
owned by the current user or root. They must not be group- or world-writable.
• @@x_include _<FILE>_ (added in AIDE v0.17):
Page 929
• `@@x_include <DIRECTORY> <REGEX> [RULE_PREFIX] (added in AIDE
v0.17)
@@x_include_setenv <VAR> <VALUE> (added in AIDE v0.17)
• Adds the variable <VAR> with the value <VALUE> to the environment used for
config file execution.
• Environment variable names are limited to alphanumeric characters (A-Za-z0-9)
and the underscore '_' and must not begin with a digit.
","
Run the following command to determine the absolute path to the non-symlinked
version on the audit tools:
# readlink -f /sbin
The output will be either /usr/sbin - OR - /sbin. Ensure the correct path is used.
Edit /etc/aide/aide.conf and add or update the following selection lines replacing
<PATH> with the correct path returned in the command above:
# Audit Tools
<PATH>/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
<PATH>/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
<PATH>/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
<PATH>/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
<PATH>/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
<PATH>/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512
Example
# printf '%s\n' """" ""# Audit Tools"" ""$(readlink -f /sbin/auditctl)
p+i+n+u+g+s+b+acl+xattrs+sha512"" ""$(readlink -f /sbin/auditd)
p+i+n+u+g+s+b+acl+xattrs+sha512"" ""$(readlink -f /sbin/ausearch)
p+i+n+u+g+s+b+acl+xattrs+sha512"" ""$(readlink -f /sbin/aureport)
p+i+n+u+g+s+b+acl+xattrs+sha512"" ""$(readlink -f /sbin/autrace)
p+i+n+u+g+s+b+acl+xattrs+sha512"" ""$(readlink -f /sbin/augenrules)
p+i+n+u+g+s+b+acl+xattrs+sha512"" >> /etc/aide/aide.conf
Note: - IF - /etc/aide/aide.conf includes a @@x_include statement:
• <DIRECTORY> and each executable config file must be owned by the current
user or root
• They must not be group or world-writable
Example:
@@x_include /etc/aide.conf.d ^[a-zA-Z0-9_-]+$
",True
7.1.1,Ensure permissions on /etc/passwd are configured,"
The /etc/passwd file contains user account information that is used by many system
utilities and therefore must be readable for these utilities to operate.
","
Run the following commands to remove excess permissions, set owner, and set group
on /etc/passwd:
# chmod u-x,go-wx /etc/passwd
# chown root:root /etc/passwd
Default Value:
Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
",True
7.1.2,Ensure permissions on /etc/passwd- are configured,"
The /etc/passwd- file contains backup user account information.
","
Run the following commands to remove excess permissions, set owner, and set group
on /etc/passwd-:
# chmod u-x,go-wx /etc/passwd-
# chown root:root /etc/passwd-
Default Value:
Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: { 0/ root)
",True
7.1.3,Ensure permissions on /etc/group are configured,"
The /etc/group file contains a list of all the valid groups defined in the system. The
command below allows read/write access for root and read access for everyone else.
","
Run the following commands to remove excess permissions, set owner, and set group
on /etc/group:
# chmod u-x,go-wx /etc/group
# chown root:root /etc/group
Default Value:
Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
",True
7.1.4,Ensure permissions on /etc/group- are configured,"
The /etc/group- file contains a backup list of all the valid groups defined in the
system.
","
Run the following commands to remove excess permissions, set owner, and set group
on /etc/group-:
# chmod u-x,go-wx /etc/group-
# chown root:root /etc/group-
Default Value:
Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
",True
7.1.5,Ensure permissions on /etc/shadow are configured,"
The /etc/shadow file is used to store the information about user accounts that is critical
to the security of those accounts, such as the hashed password and other security
information.
","
Run one of the following commands to set ownership of /etc/shadow to root and
group to either root or shadow:
# chown root:shadow /etc/shadow
-OR-
# chown root:root /etc/shadow
Run the following command to remove excess permissions form /etc/shadow:
# chmod u-x,g-wx,o-rwx /etc/shadow
Default Value:
Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)
",True
7.1.6,Ensure permissions on /etc/shadow- are configured,"
The /etc/shadow- file is used to store backup information about user accounts that is
critical to the security of those accounts, such as the hashed password and other
security information.
","
Run one of the following commands to set ownership of /etc/shadow- to root and
group to either root or shadow:
# chown root:shadow /etc/shadow-
-OR-
# chown root:root /etc/shadow-
Run the following command to remove excess permissions form /etc/shadow-:
# chmod u-x,g-wx,o-rwx /etc/shadow-
Default Value:
Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)
",True
7.1.7,Ensure permissions on /etc/gshadow are configured,"
The /etc/gshadow file is used to store the information about groups that is critical to
the security of those accounts, such as the hashed password and other security
information.
","
Run one of the following commands to set ownership of /etc/gshadow to root and
group to either root or shadow:
# chown root:shadow /etc/gshadow
-OR-
# chown root:root /etc/gshadow
Run the following command to remove excess permissions form /etc/gshadow:
# chmod u-x,g-wx,o-rwx /etc/gshadow
Default Value:
Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)
",True
7.1.8,Ensure permissions on /etc/gshadow- are configured,"
The /etc/gshadow- file is used to store backup information about groups that is critical
to the security of those accounts, such as the hashed password and other security
information.
","
Run one of the following commands to set ownership of /etc/gshadow- to root and
group to either root or shadow:
# chown root:shadow /etc/gshadow-
-OR-
# chown root:root /etc/gshadow-
Run the following command to remove excess permissions form /etc/gshadow-:
# chmod u-x,g-wx,o-rwx /etc/gshadow-
Default Value:
Access: (0640/-rw-r-----) Uid: ( 0/ root) Gid: ( 42/ shadow)
",True
7.1.9,Ensure permissions on /etc/shells are configured,"
/etc/shells is a text file which contains the full pathnames of valid login shells. This
file is consulted by chsh and available to be queried by other programs.
","
Run the following commands to remove excess permissions, set owner, and set group
on /etc/shells:
# chmod u-x,go-wx /etc/shells
# chown root:root /etc/shells
Default Value:
Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)
",True
7.1.10,Ensure permissions on /etc/security/opasswd are configured,"
/etc/security/opasswd and it's backup /etc/security/opasswd.old hold user's
previous passwords if pam_unix or pam_pwhistory is in use on the system
","
Run the following commands to remove excess permissions, set owner, and set group
on /etc/security/opasswd and /etc/security/opasswd.old is they exist:
# [ -e ""/etc/security/opasswd"" ] && chmod u-x,go-rwx /etc/security/opasswd
# [ -e ""/etc/security/opasswd"" ] && chown root:root /etc/security/opasswd
# [ -e ""/etc/security/opasswd.old"" ] && chmod u-x,go-rwx
/etc/security/opasswd.old
# [ -e ""/etc/security/opasswd.old"" ] && chown root:root
/etc/security/opasswd.old
Default Value:
/etc/security/opasswd Access: (0600/-rw-------) Uid: ( 0/ root) Gid: ( 0/ root)
",True
7.1.11,Ensure world writable files and directories are secured,"
World writable files are the least secure. Data in world-writable files can be modified and
compromised by any user on the system. World writable files may also indicate an
incorrectly written script or program that could potentially be the cause of a larger
compromise to the system's integrity. See the chmod(2) man page for more
information.
Setting the sticky bit on world writable directories prevents users from deleting or
renaming files in that directory that are not owned by them.
","
• World Writable Files:
o It is recommended that write access is removed from other with the
command ( chmod o-w <filename> ), but always consult relevant vendor
documentation to avoid breaking any application dependencies on a given
file.
• World Writable Directories:
o Set the sticky bit on all world writable directories with the command (
chmod a+t <directory_name> )
Run the following script to:
• Remove other write permission from any world writable files
• Add the sticky bit to all world writable directories
#!/usr/bin/env bash
{
l_smask='01000'
a_file=(); a_dir=() # Initialize arrays
a_path=(! -path ""/run/user/*"" -a ! -path ""/proc/*"" -a ! -path
""*/containerd/*"" -a ! -path ""*/kubelet/pods/*"" -a ! -path
""*/kubelet/plugins/*"" -a ! -path ""/sys/*"" -a ! -path ""/snap/*"")
while IFS= read -r l_mount; do
while IFS= read -r -d $'\0' l_file; do
if [ -e ""$l_file"" ]; then
l_mode=""$(stat -Lc '%#a' ""$l_file"")""
if [ -f ""$l_file"" ]; then # Remove excess permissions from WW
files
echo -e "" - File: \""$l_file\"" is mode: \""$l_mode\""\n -
removing write permission on \""$l_file\"" from \""other\""""
chmod o-w ""$l_file""
fi
if [ -d ""$l_file"" ]; then # Add sticky bit
if [ ! $(( $l_mode & $l_smask )) -gt 0 ]; then
echo -e "" - Directory: \""$l_file\"" is mode: \""$l_mode\"" and
doesn't have the sticky bit set\n - Adding the sticky bit""
chmod a+t ""$l_file""
fi
fi
fi
done < <(find ""$l_mount"" -xdev \( ""${a_path[@]}"" \) \( -type f -o -type
d \) -perm -0002 -print0 2> /dev/null)
done < <(findmnt -Dkerno fstype,target | awk '($1 !~
/^\s*(nfs|proc|smb|vfat|iso9660|efivarfs|selinuxfs)/ && $2 !~
/^(\/run\/user\/|\/tmp|\/var\/tmp)/){print $2}')
}
",True
7.1.12,Ensure no files or directories without an owner and a group exist,"
Administrators may delete users or groups from the system and neglect to remove all
files and/or directories owned by those users or groups.
","
Remove or set ownership and group ownership of these files and/or directories to an
active user on the system as appropriate.
",True
7.1.13,,"
The owner of a file can set the file's permissions to run with the owner's or group's
permissions, even if the user running the program is not the owner or a member of the
group. The most common reason for a SUID or SGID program is to enable users to
perform functions (such as changing their password) that require root privileges.
","
Ensure that no rogue SUID or SGID programs have been introduced into the system.
Review the files returned by the action in the Audit section and confirm the integrity of
these binaries.
",True
7.2.1,Ensure accounts in /etc/passwd use shadowed passwords,"
Local accounts can uses shadowed passwords. With shadowed passwords, The
passwords are saved in shadow password file, /etc/shadow, encrypted by a salted
one-way hash. Accounts with a shadowed password have an x in the second field in
/etc/passwd.
","
Run the following command to set accounts to use shadowed passwords and migrate
passwords in /etc/passwd to /etc/shadow:
# pwconv
Investigate to determine if the account is logged in and what it is being used for, to
determine if it needs to be forced off.
",True
7.2.2,Ensure /etc/shadow password fields are not empty,"
An account with an empty password field means that anybody may log in as that user
without providing a password.
","
If any accounts in the /etc/shadow file do not have a password, run the following
command to lock the account until it can be determined why it does not have a
password:
# passwd -l <username>
Also, check to see if the account is logged in and investigate what it is being used for to
determine if it needs to be forced off.
",True
7.2.3,Ensure all groups in /etc/passwd exist in /etc/group,"
Over time, system administration errors and changes can lead to groups being defined
in /etc/passwd but not in /etc/group .
","
Analyze the output of the Audit step above and perform the appropriate action to correct
any discrepancies found.
",True
7.2.4,Ensure shadow group is empty,"
The shadow group allows system programs which require access the ability to read the
/etc/shadow file. No users should be assigned to the shadow group.
","
Run the following command to remove all users from the shadow group
# sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/\1/' /etc/group
Change the primary group of any users with shadow as their primary group.
# usermod -g <primary group> <user>
",True
7.2.5,Ensure no duplicate UIDs exist,"
Although the useradd program will not let you create a duplicate User ID (UID), it is
possible for an administrator to manually edit the /etc/passwd file and change the UID
field.
","
Based on the results of the audit script, establish unique UIDs and review all files owned
by the shared UIDs to determine which UID they are supposed to belong to.
",True
7.2.6,Ensure no duplicate GIDs exist,"
Although the groupadd program will not let you create a duplicate Group ID (GID), it is
possible for an administrator to manually edit the /etc/group file and change the GID
field.
","
Based on the results of the audit script, establish unique GIDs and review all files
owned by the shared GID to determine which group they are supposed to belong to.
",True
7.2.7,Ensure no duplicate user names exist,"
Although the useradd program will not let you create a duplicate user name, it is
possible for an administrator to manually edit the /etc/passwd file and change the user
name.
","
Based on the results of the audit script, establish unique user names for the users. File
ownerships will automatically reflect the change as long as the users have unique UIDs.
",True
7.2.8,Ensure no duplicate group names exist,"
Although the groupadd program will not let you create a duplicate group name, it is
possible for an administrator to manually edit the /etc/group file and change the group
name.
","
Based on the results of the audit script, establish unique names for the user groups. File
group ownerships will automatically reflect the change as long as the groups have
unique GIDs.
",True
7.2.9,Ensure local interactive user home directories are configured,"
The user home directory is space defined for the particular user to set local environment
variables and to store personal files. While the system administrator can establish
secure permissions for users' home directories, the users can easily override these.
Users can be defined in /etc/passwd without a home directory or with a home directory
that does not actually exist.
","
If a local interactive users' home directory is undefined and/or doesn't exist, follow local
site policy and perform one of the following:
• Lock the user account
• Remove the user from the system
• create a directory for the user. If undefined, edit /etc/passwd and add the
absolute path to the directory to the last field of the user.
Run the following script to:
• Remove excessive permissions from local interactive users home directories
• Update the home directory's owner
Page 984
#!/usr/bin/env bash
{
l_output2=""""
l_valid_shells=""^($( awk -F\/ '$NF != ""nologin"" {print}' /etc/shells | sed
-rn '/^\//{s,/,\\\\/,g;p}' | paste -s -d '|' - ))$""
unset a_uarr && a_uarr=() # Clear and initialize array
while read -r l_epu l_eph; do # Populate array with users and user home
location
a_uarr+=(""$l_epu $l_eph"")
done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" ""
$(NF-1) }' /etc/passwd)""
l_asize=""${#a_uarr[@]}"" # Here if we want to look at number of users
before proceeding
[ ""$l_asize "" -gt ""10000"" ] && echo -e ""\n ** INFO **\n - \""$l_asize\""
Local interactive users found on the system\n - This may be a long running
process\n""
while read -r l_user l_home; do
if [ -d ""$l_home"" ]; then
l_mask='0027'
l_max=""$( printf '%o' $(( 0777 & ~$l_mask)) )""
while read -r l_own l_mode; do
if [ ""$l_user"" != ""$l_own"" ]; then
l_output2=""$l_output2\n - User: \""$l_user\"" Home \""$l_home\""
is owned by: \""$l_own\""\n - changing ownership to: \""$l_user\""\n""
chown ""$l_user"" ""$l_home""
fi
if [ $(( $l_mode & $l_mask )) -gt 0 ]; then
l_output2=""$l_output2\n - User: \""$l_user\"" Home \""$l_home\""
is mode: \""$l_mode\"" should be mode: \""$l_max\"" or more restrictive\n -
removing excess permissions\n""
chmod g-w,o-rwx ""$l_home""
fi
done <<< ""$(stat -Lc '%U %#a' ""$l_home"")""
else
l_output2=""$l_output2\n - User: \""$l_user\"" Home \""$l_home\""
Doesn't exist\n - Please create a home in accordance with local site
policy""
fi
done <<< ""$(printf '%s\n' ""${a_uarr[@]}"")""
if [ -z ""$l_output2"" ]; then # If l_output2 is empty, we pass
echo -e "" - No modification needed to local interactive users home
directories""
else
echo -e ""\n$l_output2""
fi
}
",True
7.2.10,Ensure local interactive user dot files access is configured,"
While the system administrator can establish secure permissions for users' ""dot"" files,
the users can easily override these.
• .forward file specifies an email address to forward the user's mail to.
• .rhost file provides the ""remote authentication"" database for the rcp, rlogin, and
rsh commands and the rcmd() function. These files bypass the standard
password-based user authentication mechanism. They specify remote hosts and
users that are considered trusted (i.e. are allowed to access the local system
without supplying a password)
• .netrc file contains data for logging into a remote host or passing authentication
to an API.
• .bash_history file keeps track of the user’s commands.
","
Making global modifications to users' files without alerting the user community can result
in unexpected outages and unhappy users. Therefore, it is recommended that a
monitoring policy be established to report user dot file permissions and determine the
action to be taken in accordance with site policy.
The following script will:
• remove excessive permissions on dot files within interactive users' home
directories
• change ownership of dot files within interactive users' home directories to the
user
• change group ownership of dot files within interactive users' home directories to
the user's primary group
• list .forward and .rhost files to be investigated and manually deleted
Page 990
#!/usr/bin/env bash
{
a_output2=(); a_output3=()
l_maxsize=""1000"" # Maximum number of local interactive users before
warning (Default 1,000)
l_valid_shells=""^($( awk -F\/ '$NF != ""nologin"" {print}' /etc/shells | sed
-rn '/^\//{s,/,\\\\/,g;p}' | paste -s -d '|' - ))$""
a_user_and_home=() # Create array with local users and their home
directories
while read -r l_local_user l_local_user_home; do # Populate array with
users and user home location
[[ -n ""$l_local_user"" && -n ""$l_local_user_home"" ]] &&
a_user_and_home+=(""$l_local_user:$l_local_user_home"")
done <<< ""$(awk -v pat=""$l_valid_shells"" -F: '$(NF) ~ pat { print $1 "" ""
$(NF-1) }' /etc/passwd)""
l_asize=""${#a_user_and_home[@]}"" # Here if we want to look at number of
users before proceeding
[ ""${#a_user_and_home[@]}"" -gt ""$l_maxsize"" ] && printf '%s\n' """" "" **
INFO **"" \
"" - \""$l_asize\"" Local interactive users found on the system"" \
"" - This may be a long running check"" """"
file_access_fix()
{
a_access_out=()
l_max=""$( printf '%o' $(( 0777 & ~$l_mask)) )""
if [ $(( $l_mode & $l_mask )) -gt 0 ]; then
printf '%s\n' """" "" - File: \""$l_hdfile\"" is mode: \""$l_mode\"" and
should be mode: \""$l_max\"" or more restrictive"" \
"" Updating file: \""$l_hdfile\"" to be mode: \""$l_max\"" or more
restrictive""
chmod ""$l_change"" ""$l_hdfile""
fi
if [[ ! ""$l_owner"" =~ ($l_user) ]]; then
printf '%s\n' """" "" - File: \""$l_hdfile\"" owned by: \""$l_owner\"" and
should be owned by \""${l_user//|/ or }\"""" \
"" Updating file: \""$l_hdfile\"" to be owned by \""${l_user//|/ or
}\""""
chown ""$l_user"" ""$l_hdfile""
fi
if [[ ! ""$l_gowner"" =~ ($l_group) ]]; then
printf '%s\n' """" "" - File: \""$l_hdfile\"" group owned by:
\""$l_gowner\"" and should be group owned by \""${l_group//|/ or }\"""" \
"" Updating file: \""$l_hdfile\"" to be group owned by
\""${l_group//|/ or }\""""
chgrp ""$l_group"" ""$l_hdfile""
fi
}
while IFS=: read -r l_user l_home; do
a_dot_file=(); a_netrc=(); a_netrc_warn=(); a_bhout=(); a_hdirout=()
if [ -d ""$l_home"" ]; then
l_group=""$(id -gn ""$l_user"" | xargs)"";l_group=""${l_group// /|}""
while IFS= read -r -d $'\0' l_hdfile; do
while read -r l_mode l_owner l_gowner; do
case ""$(basename ""$l_hdfile"")"" in
.forward | .rhost )
a_dot_file+=("" - File: \""$l_hdfile\"" exists"" ""
Page 991
Please review and manually delete this file"") ;;
.netrc )
l_mask='0177'; l_change=""u-x,go-rwx""; file_access_fix
a_netrc_warn+=("" - File: \""$l_hdfile\"" exists"") ;;
.bash_history )
l_mask='0177'; l_change=""u-x,go-rwx""; file_access_fix ;;
* )
l_mask='0133'; l_change=""u-x,go-wx""; file_access_fix ;;
esac
done < <(stat -Lc '%#a %U %G' ""$l_hdfile"")
done < <(find ""$l_home"" -xdev -type f -name '.*' -print0)
fi
[ ""${#a_dot_file[@]}"" -gt 0 ] && a_output2+=("" - User: \""$l_user\"" Home
Directory: \""$l_home\"""" ""${a_dot_file[@]}"")
[ ""${#a_netrc_warn[@]}"" -gt 0 ] && a_output3+=("" - User: \""$l_user\""
Home Directory: \""$l_home\"""" ""${a_netrc_warn[@]}"")
done <<< ""$(printf '%s\n' ""${a_user_and_home[@]}"")""
[ ""${#a_output3[@]}"" -gt 0 ] && printf '%s\n' """" "" ** WARNING **""
""${a_output3[@]}"" """"
[ ""${#a_output2[@]}"" -gt 0 ] && printf '%s\n' """" ""${a_output2[@]}""
}
",True
