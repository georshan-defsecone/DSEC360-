audit_id: "5.1.3"
audit_name: "Ensure access to SSH public host key files is configured"
audit_script: """
{
a_output=()
a_output2=()

# Set permission mask and max allowed permission
l_pmask="0133"
l_maxperm="$(printf '%o' $((0777 & ~$l_pmask)))"

f_file_chk() {
  while IFS=: read -r l_file_mode l_file_owner l_file_group; do
    a_out2=()
    if [ $((l_file_mode & l_pmask)) -gt 0 ]; then
      a_out2+=("  - Mode: \"$l_file_mode\" should be \"$l_maxperm\" or more restrictive")
    fi
    if [ "$l_file_owner" != "root" ]; then
      a_out2+=("  - Owned by: \"$l_file_owner\" should be \"root\"")
    fi
    if [ "$l_file_group" != "root" ]; then
      a_out2+=("  - Group owned by: \"$l_file_group\" should be \"root\"")
    fi

    if [ "${#a_out2[@]}" -gt 0 ]; then
      a_output2+=(" - File: \"$l_file\"" "${a_out2[@]}")
    else
      a_output+=(" - File: \"$l_file\" is correctly configured: mode=\"$l_file_mode\", owner=\"$l_file_owner\", group=\"$l_file_group\"")
    fi
  done < <(stat -Lc '%#a:%U:%G' "$l_file")
}

# Scan SSH public key files
while IFS= read -r -d $'\0' l_file; do
  if ssh-keygen -lf "$l_file" &>/dev/null; then
    if file "$l_file" | grep -Piq '\bopenssh\b.*\bpublic key\b'; then
      f_file_chk
    fi
  fi
done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)

# Output result
if [ "${#a_output2[@]}" -eq 0 ]; then
  [ "${#a_output[@]}" -eq 0 ] && a_output+=(" - No OpenSSH public key files found under /etc/ssh")
  printf '\n- Audit Result:\n ** PASS **\n%s\n\n' "${a_output[@]}"
else
  printf '\n- Audit Result:\n ** FAIL **\n - Reason(s) for audit failure:\n%s\n' "${a_output2[@]}"
  [ "${#a_output[@]}" -gt 0 ] && printf '\n- Correctly set:\n%s\n\n' "${a_output[@]}"
fi
}
""""