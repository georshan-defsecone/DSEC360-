audit_id: "5.1.8"
audit_name: "Ensure sshd Banner is configured"
audit_script: """
{
l_output=""
l_output2=""
l_banner_file=""
l_banner_match_warning=""

# Check for presence of Match blocks
if grep -Piq '^\s*match\s+' /etc/ssh/sshd_config; then
  l_banner_match_warning=" - Match blocks are present in sshd_config. Use 'sshd -T -C user=<username>' to verify Banner configuration per user context."
fi

# Get banner setting from sshd
l_banner_file=$(sshd -T 2>/dev/null | awk '$1 == "banner" {print $2}')

if [[ -z "$l_banner_file" || "$l_banner_file" == "none" ]]; then
  l_output2=" - No valid SSH banner file configured in sshd settings."
else
  if [ -e "$l_banner_file" ]; then
    # Check banner content for forbidden sequences
    os_id="$(grep '^ID=' /etc/os-release | cut -d= -f2 | sed -e 's/"//g')"
    if grep -PsiqE '(\\v|\\r|\\m|\\s|\b'"$os_id"'\b)' "$l_banner_file"; then
      l_output2=" - Banner file \"$l_banner_file\" contains forbidden escape sequences or OS identifier \"$os_id\"."
    else
      l_output=" - SSH banner is correctly configured at \"$l_banner_file\" and contents pass policy checks."
    fi
  else
    l_output2=" - Banner file \"$l_banner_file\" does not exist."
  fi
fi

# Output result
if [[ -n "$l_output2" ]]; then
  echo -e "\n- Audit Result:\n ** FAIL **\n$l_output2"
else
  echo -e "\n- Audit Result:\n ** PASS **\n$l_output"
fi

# Show match warning if applicable
[[ -n "$l_banner_match_warning" ]] && echo -e "\n ** WARNING **\n$l_banner_match_warning"
}
""""