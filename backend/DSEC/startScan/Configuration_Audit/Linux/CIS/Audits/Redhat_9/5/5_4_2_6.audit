audit_id: "5.4.2.6"
audit_name: "Ensure root user umask is configured"
audit_script: """
{
  l_output=""
  l_output2=""
  l_details=""
  l_files=(/root/.bash_profile /root/.bashrc)

  # Regex for detecting weak umask (less restrictive than 027)
  weak_umask_regex='^\s*umask\s+(([0-7][0-7][01][0-7]\b|[0-7][0-7][0-7][0-6]\b)|([0-7][01][0-7]\b|[0-7][0-7][0-6]\b)|(u=[rwx]{1,3},)?(((g=[rx]?[rx]?w[rx]?[rx]?\b)(,o=[rwx]{1,3})?)|((g=[wrx]{1,3},)?o=[wrx]{1,3}\b)))'

  for file in "${l_files[@]}"; do
    if [ -f "$file" ]; then
      found=0
      while IFS= read -r line; do
        [[ "$line" =~ ^\s*umask ]] || continue
        found=1
        if echo "$line" | grep -Piq "$weak_umask_regex"; then
          l_output2+=" - Weak umask setting found in $file: \"$line\"\n"
        else
          l_details+=" - Secure umask found in $file: \"$line\"\n"
        fi
      done < "$file"

      [[ $found -eq 0 ]] && l_details+=" - No umask setting found in $file (default applies)\n"
    else
      l_details+=" - File $file not found, skipping\n"
    fi
  done

  if [ -z "$l_output2" ]; then
    echo -e "\n- Audit Result:\n ** PASS **\n$l_details"
  else
    echo -e "\n- Audit Result:\n ** FAIL **\n - Reason for audit failure:\n$l_output2"
  fi
}
"""