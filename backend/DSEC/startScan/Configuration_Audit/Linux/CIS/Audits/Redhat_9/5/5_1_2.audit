audit_id: "5.1.2"
audit_name: "Ensure permissions on SSH private host key files are configured"
audit_script: """
{
l_output=""
l_output2=""

# Get SSH group name (if any)
l_ssh_group_name="$(awk -F: '($1 ~ /^(ssh_keys|_?ssh)$/) {print $1}' /etc/group)"

f_file_chk() {
  while IFS=: read -r l_file_mode l_file_owner l_file_group; do
    l_out2=""

    # Determine permission mask based on group
    [ "$l_file_group" = "$l_ssh_group_name" ] && l_pmask="0137" || l_pmask="0177"
    l_maxperm="$(printf '%o' $((0777 & ~$l_pmask)))"

    # Check file mode
    if [ $((l_file_mode & l_pmask)) -gt 0 ]; then
      l_out2="$l_out2\n - Mode: \"$l_file_mode\" should be mode: \"$l_maxperm\" or more restrictive"
    fi

    # Check file owner
    if [ "$l_file_owner" != "root" ]; then
      l_out2="$l_out2\n - Owned by: \"$l_file_owner\" should be owned by \"root\""
    fi

    # Check group ownership
    if [[ ! "$l_file_group" =~ ($l_ssh_group_name|root) ]]; then
      l_out2="$l_out2\n - Owned by group \"$l_file_group\" should be group owned by: \"$l_ssh_group_name\" or \"root\""
    fi

    # Append results
    if [ -n "$l_out2" ]; then
      l_output2="$l_output2\n - File: \"$l_file\"$l_out2"
    else
      l_output="$l_output\n - File: \"$l_file\"\n   - Correct: mode: \"$l_file_mode\", owner: \"$l_file_owner\", and group owner: \"$l_file_group\" configured"
    fi
  done < <(stat -Lc '%#a:%U:%G' "$l_file")
}

# Iterate over all files under /etc/ssh and check OpenSSH private keys
while IFS= read -r -d $'\0' l_file; do
  if ssh-keygen -lf &>/dev/null "$l_file"; then
    file "$l_file" | grep -Piq -- '\bopenssh\h+([^#\n\r]+\h+)?private\h+key\b' && f_file_chk
  fi
done < <(find -L /etc/ssh -xdev -type f -print0 2>/dev/null)

# Output audit result
if [ -z "$l_output2" ]; then
  [ -z "$l_output" ] && l_output="\n - No openSSH private keys found"
  echo -e "\n- Audit Result:\n ** PASS **\n - * Correctly configured *:$l_output"
else
  echo -e "\n- Audit Result:\n ** FAIL **\n - * Reasons for audit failure *:$l_output2\n"
  [ -n "$l_output" ] && echo -e "\n - * Correctly configured *:\n$l_output\n"
fi
}
"""